/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 25 2025 at 12:26:31



***************************** Test Name  ******************************

*                         Default Constructor                         *

***************************** Test Name  ******************************

passed default constructor produced empty set &0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


***************************** Test Name  ******************************

*                            operator+=(T)                            *

***************************** Test Name  ******************************

 .. added 5 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea0780
list contains 1 elements:
  at 0x5a6d1bea0780: data    5 next: 0

 .. added 3 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea0ac0
list contains 2 elements:
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0

 .. added 7 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea0ac0
list contains 3 elements:
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0

 .. added 4 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea0ac0
list contains 4 elements:
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    4 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0

 .. added 6 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea0ac0
list contains 5 elements:
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    4 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    6 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0

 .. added 8 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea0ac0
list contains 6 elements:
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    4 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    6 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    8 next: 0

 .. added 2 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea1640
list contains 7 elements:
  at 0x5a6d1bea1640: data    2 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    4 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    6 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    8 next: 0

 .. added 1 to set produces @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea19c0
list contains 8 elements:
  at 0x5a6d1bea19c0: data    1 next: 0x5a6d1bea1640
  at 0x5a6d1bea1640: data    2 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    4 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    6 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    8 next: 0

Test adding stressing inputs
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b950 and contained 0 objects 
 list was at address 0x7ffee864b950 m_head points to 0

after_set:  
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea19c0
list contains 8 elements:
  at 0x5a6d1bea19c0: data    1 next: 0x5a6d1bea1640
  at 0x5a6d1bea1640: data    2 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    4 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    5 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    6 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    7 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


***************************** Test Name  ******************************

*                             buildSet()                              *

***************************** Test Name  ******************************

Test buildSet(stressing_inputs)
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


***************************** Test Name  ******************************

*                             set.clear()                             *

***************************** Test Name  ******************************

buildSet @0x7ffee864b950
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea1330
list contains 8 elements:
  at 0x5a6d1bea1330: data    1 next: 0x5a6d1bea19c0
  at 0x5a6d1bea19c0: data    2 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    3 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    4 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    5 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    6 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    7 next: 0x5a6d1bea1640
  at 0x5a6d1bea1640: data    8 next: 0
passed after set.clear()set is @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


***************************** Test Name  ******************************

*                             set.reset()                             *

***************************** Test Name  ******************************

buildSet @0x7ffee864b950
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea1640
list contains 8 elements:
  at 0x5a6d1bea1640: data    1 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    2 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    3 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    4 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    5 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    6 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    7 next: 0x5a6d1bea19c0
  at 0x5a6d1bea19c0: data    8 next: 0
passed after set.reset(),
set  @0x7ffee864b950: 
set contains a list at 0x7ffee864b950: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


***************************** Test Name  ******************************

*                          copy constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b950 and contained 8 objects 
 list was at address 0x7ffee864b950 m_head points to 0x5a6d1bea19c0
  at 0x5a6d1bea19c0: data    1 next: 0x5a6d1bea1640
  at 0x5a6d1bea1640: data    2 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    3 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    4 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    5 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    6 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    7 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    8 next: 0

after_set:  @0x7ffee864b960
set contains a list at 0x7ffee864b960: m_head points to 0x5a6d1bea1f30
list contains 8 elements:
  at 0x5a6d1bea1f30: data    1 next: 0x5a6d1bea1f50
  at 0x5a6d1bea1f50: data    2 next: 0x5a6d1bea1f70
  at 0x5a6d1bea1f70: data    3 next: 0x5a6d1bea1f90
  at 0x5a6d1bea1f90: data    4 next: 0x5a6d1bea1fb0
  at 0x5a6d1bea1fb0: data    5 next: 0x5a6d1bea1fd0
  at 0x5a6d1bea1fd0: data    6 next: 0x5a6d1bea1ff0
  at 0x5a6d1bea1ff0: data    7 next: 0x5a6d1bea2010
  at 0x5a6d1bea2010: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed : 
set      @0x7ffee864b950 :
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea19c0
list contains 8 elements:
  at 0x5a6d1bea19c0: data    1 next: 0x5a6d1bea1640
  at 0x5a6d1bea1640: data    2 next: 0x5a6d1bea0780
  at 0x5a6d1bea0780: data    3 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    4 next: 0x5a6d1bea0e50
  at 0x5a6d1bea0e50: data    5 next: 0x5a6d1bea0ac0
  at 0x5a6d1bea0ac0: data    6 next: 0x5a6d1bea1090
  at 0x5a6d1bea1090: data    7 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    8 next: 0

copy_set @0x7ffee864b960 :
set contains a list at 0x7ffee864b960: m_head points to 0x5a6d1bea1f30
list contains 8 elements:
  at 0x5a6d1bea1f30: data    1 next: 0x5a6d1bea1f50
  at 0x5a6d1bea1f50: data    2 next: 0x5a6d1bea1f70
  at 0x5a6d1bea1f70: data    3 next: 0x5a6d1bea1f90
  at 0x5a6d1bea1f90: data    4 next: 0x5a6d1bea1fb0
  at 0x5a6d1bea1fb0: data    5 next: 0x5a6d1bea1fd0
  at 0x5a6d1bea1fd0: data    6 next: 0x5a6d1bea1ff0
  at 0x5a6d1bea1ff0: data    7 next: 0x5a6d1bea2010
  at 0x5a6d1bea2010: data    8 next: 0


Passed 6 of 6 tests


***************************** Test Name  ******************************

*                       operator=(MyOrderedSet)                       *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b950 and contained 8 objects 
 list was at address 0x7ffee864b950 m_head points to 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    1 next: 0x5a6d1bea1e30
  at 0x5a6d1bea1e30: data    2 next: 0x5a6d1bea1ed0
  at 0x5a6d1bea1ed0: data    3 next: 0x5a6d1bea1e90
  at 0x5a6d1bea1e90: data    4 next: 0x5a6d1bea1ef0
  at 0x5a6d1bea1ef0: data    5 next: 0x5a6d1bea1e70
  at 0x5a6d1bea1e70: data    6 next: 0x5a6d1bea1eb0
  at 0x5a6d1bea1eb0: data    7 next: 0x5a6d1bea1e50
  at 0x5a6d1bea1e50: data    8 next: 0

after_set:  @0x7ffee864b970
set contains a list at 0x7ffee864b970: m_head points to 0x5a6d1bea2030
list contains 8 elements:
  at 0x5a6d1bea2030: data    1 next: 0x5a6d1bea2050
  at 0x5a6d1bea2050: data    2 next: 0x5a6d1bea2070
  at 0x5a6d1bea2070: data    3 next: 0x5a6d1bea2090
  at 0x5a6d1bea2090: data    4 next: 0x5a6d1bea20b0
  at 0x5a6d1bea20b0: data    5 next: 0x5a6d1bea20d0
  at 0x5a6d1bea20d0: data    6 next: 0x5a6d1bea20f0
  at 0x5a6d1bea20f0: data    7 next: 0x5a6d1bea2110
  at 0x5a6d1bea2110: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

set          @0x7ffee864b950 :
set contains a list at 0x7ffee864b950: m_head points to 0x5a6d1bea1330
list contains 8 elements:
  at 0x5a6d1bea1330: data    1 next: 0x5a6d1bea1e30
  at 0x5a6d1bea1e30: data    2 next: 0x5a6d1bea1ed0
  at 0x5a6d1bea1ed0: data    3 next: 0x5a6d1bea1e90
  at 0x5a6d1bea1e90: data    4 next: 0x5a6d1bea1ef0
  at 0x5a6d1bea1ef0: data    5 next: 0x5a6d1bea1e70
  at 0x5a6d1bea1e70: data    6 next: 0x5a6d1bea1eb0
  at 0x5a6d1bea1eb0: data    7 next: 0x5a6d1bea1e50
  at 0x5a6d1bea1e50: data    8 next: 0

assigned_set @0x7ffee864b970 :
set contains a list at 0x7ffee864b960: m_head points to 0x5a6d1bea1f30
list contains 8 elements:
  at 0x5a6d1bea1f30: data    1 next: 0x5a6d1bea1f50
  at 0x5a6d1bea1f50: data    2 next: 0x5a6d1bea1f70
  at 0x5a6d1bea1f70: data    3 next: 0x5a6d1bea1f90
  at 0x5a6d1bea1f90: data    4 next: 0x5a6d1bea1fb0
  at 0x5a6d1bea1fb0: data    5 next: 0x5a6d1bea1fd0
  at 0x5a6d1bea1fd0: data    6 next: 0x5a6d1bea1ff0
  at 0x5a6d1bea1ff0: data    7 next: 0x5a6d1bea2010
  at 0x5a6d1bea2010: data    8 next: 0

passed 

Passed 7 of 7 tests


***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea1090
list contains 1 elements:
  at 0x5a6d1bea1090: data    5 next: 0
set + 3 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea0780
list contains 2 elements:
  at 0x5a6d1bea0780: data    3 next: 0x5a6d1bea0c70
  at 0x5a6d1bea0c70: data    5 next: 0
set + 7 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea1e50
list contains 3 elements:
  at 0x5a6d1bea1e50: data    3 next: 0x5a6d1bea1330
  at 0x5a6d1bea1330: data    5 next: 0x5a6d1bea1e30
  at 0x5a6d1bea1e30: data    7 next: 0
set + 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea1ef0
list contains 4 elements:
  at 0x5a6d1bea1ef0: data    3 next: 0x5a6d1bea1f10
  at 0x5a6d1bea1f10: data    4 next: 0x5a6d1bea1e70
  at 0x5a6d1bea1e70: data    5 next: 0x5a6d1bea1eb0
  at 0x5a6d1bea1eb0: data    7 next: 0
set + 6 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2210
list contains 5 elements:
  at 0x5a6d1bea2210: data    3 next: 0x5a6d1bea2230
  at 0x5a6d1bea2230: data    4 next: 0x5a6d1bea2250
  at 0x5a6d1bea2250: data    5 next: 0x5a6d1bea2290
  at 0x5a6d1bea2290: data    6 next: 0x5a6d1bea2270
  at 0x5a6d1bea2270: data    7 next: 0
set + 8 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2330
list contains 6 elements:
  at 0x5a6d1bea2330: data    3 next: 0x5a6d1bea2350
  at 0x5a6d1bea2350: data    4 next: 0x5a6d1bea2370
  at 0x5a6d1bea2370: data    5 next: 0x5a6d1bea2390
  at 0x5a6d1bea2390: data    6 next: 0x5a6d1bea23b0
  at 0x5a6d1bea23b0: data    7 next: 0x5a6d1bea23d0
  at 0x5a6d1bea23d0: data    8 next: 0
set + 2 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2500
list contains 7 elements:
  at 0x5a6d1bea2500: data    2 next: 0x5a6d1bea2440
  at 0x5a6d1bea2440: data    3 next: 0x5a6d1bea2460
  at 0x5a6d1bea2460: data    4 next: 0x5a6d1bea2480
  at 0x5a6d1bea2480: data    5 next: 0x5a6d1bea24a0
  at 0x5a6d1bea24a0: data    6 next: 0x5a6d1bea24c0
  at 0x5a6d1bea24c0: data    7 next: 0x5a6d1bea24e0
  at 0x5a6d1bea24e0: data    8 next: 0
set + 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2690
list contains 8 elements:
  at 0x5a6d1bea2690: data    1 next: 0x5a6d1bea25b0
  at 0x5a6d1bea25b0: data    2 next: 0x5a6d1bea25d0
  at 0x5a6d1bea25d0: data    3 next: 0x5a6d1bea25f0
  at 0x5a6d1bea25f0: data    4 next: 0x5a6d1bea2610
  at 0x5a6d1bea2610: data    5 next: 0x5a6d1bea2630
  at 0x5a6d1bea2630: data    6 next: 0x5a6d1bea2650
  at 0x5a6d1bea2650: data    7 next: 0x5a6d1bea2670
  at 0x5a6d1bea2670: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7b0 and contained 7 objects 
 list was at address 0x7ffee864b7b0 m_head points to 0x5a6d1bea2500
  at 0x5a6d1bea2500: data    2 next: 0x5a6d1bea2440
  at 0x5a6d1bea2440: data    3 next: 0x5a6d1bea2460
  at 0x5a6d1bea2460: data    4 next: 0x5a6d1bea2480
  at 0x5a6d1bea2480: data    5 next: 0x5a6d1bea24a0
  at 0x5a6d1bea24a0: data    6 next: 0x5a6d1bea24c0
  at 0x5a6d1bea24c0: data    7 next: 0x5a6d1bea24e0
  at 0x5a6d1bea24e0: data    8 next: 0

after_set:  @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2690
list contains 8 elements:
  at 0x5a6d1bea2690: data    1 next: 0x5a6d1bea25b0
  at 0x5a6d1bea25b0: data    2 next: 0x5a6d1bea25d0
  at 0x5a6d1bea25d0: data    3 next: 0x5a6d1bea25f0
  at 0x5a6d1bea25f0: data    4 next: 0x5a6d1bea2610
  at 0x5a6d1bea2610: data    5 next: 0x5a6d1bea2630
  at 0x5a6d1bea2630: data    6 next: 0x5a6d1bea2650
  at 0x5a6d1bea2650: data    7 next: 0x5a6d1bea2670
  at 0x5a6d1bea2670: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea24e0
list contains 1 elements:
  at 0x5a6d1bea24e0: data    1 next: 0
set + 2 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2480
list contains 2 elements:
  at 0x5a6d1bea2480: data    1 next: 0x5a6d1bea2460
  at 0x5a6d1bea2460: data    2 next: 0
set + 3 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2670
list contains 3 elements:
  at 0x5a6d1bea2670: data    1 next: 0x5a6d1bea2690
  at 0x5a6d1bea2690: data    2 next: 0x5a6d1bea25b0
  at 0x5a6d1bea25b0: data    3 next: 0
set + 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2610
list contains 4 elements:
  at 0x5a6d1bea2610: data    1 next: 0x5a6d1bea2630
  at 0x5a6d1bea2630: data    2 next: 0x5a6d1bea2650
  at 0x5a6d1bea2650: data    3 next: 0x5a6d1bea27b0
  at 0x5a6d1bea27b0: data    4 next: 0
set + 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2850
list contains 4 elements:
  at 0x5a6d1bea2850: data    1 next: 0x5a6d1bea2870
  at 0x5a6d1bea2870: data    2 next: 0x5a6d1bea2890
  at 0x5a6d1bea2890: data    3 next: 0x5a6d1bea28b0
  at 0x5a6d1bea28b0: data    4 next: 0
set + 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2930
list contains 4 elements:
  at 0x5a6d1bea2930: data    1 next: 0x5a6d1bea2950
  at 0x5a6d1bea2950: data    2 next: 0x5a6d1bea2970
  at 0x5a6d1bea2970: data    3 next: 0x5a6d1bea2990
  at 0x5a6d1bea2990: data    4 next: 0
set + 3 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2a10
list contains 4 elements:
  at 0x5a6d1bea2a10: data    1 next: 0x5a6d1bea2a30
  at 0x5a6d1bea2a30: data    2 next: 0x5a6d1bea2a50
  at 0x5a6d1bea2a50: data    3 next: 0x5a6d1bea2a70
  at 0x5a6d1bea2a70: data    4 next: 0
set + 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2af0
list contains 4 elements:
  at 0x5a6d1bea2af0: data    1 next: 0x5a6d1bea2b10
  at 0x5a6d1bea2b10: data    2 next: 0x5a6d1bea2b30
  at 0x5a6d1bea2b30: data    3 next: 0x5a6d1bea2b50
  at 0x5a6d1bea2b50: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7b0 and contained 4 objects 
 list was at address 0x7ffee864b7b0 m_head points to 0x5a6d1bea2a10
  at 0x5a6d1bea2a10: data    1 next: 0x5a6d1bea2a30
  at 0x5a6d1bea2a30: data    2 next: 0x5a6d1bea2a50
  at 0x5a6d1bea2a50: data    3 next: 0x5a6d1bea2a70
  at 0x5a6d1bea2a70: data    4 next: 0

after_set:  @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2af0
list contains 4 elements:
  at 0x5a6d1bea2af0: data    1 next: 0x5a6d1bea2b10
  at 0x5a6d1bea2b10: data    2 next: 0x5a6d1bea2b30
  at 0x5a6d1bea2b30: data    3 next: 0x5a6d1bea2b50
  at 0x5a6d1bea2b50: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 9 of 9 tests


***************************** Test Name  ******************************

*                         operator-(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -
buildSet @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2b30
list contains 7 elements:
  at 0x5a6d1bea2b30: data    1 next: 0x5a6d1bea2b10
  at 0x5a6d1bea2b10: data    2 next: 0x5a6d1bea2af0
  at 0x5a6d1bea2af0: data    3 next: 0x5a6d1bea2a70
  at 0x5a6d1bea2a70: data    4 next: 0x5a6d1bea2a50
  at 0x5a6d1bea2a50: data    5 next: 0x5a6d1bea2a30
  at 0x5a6d1bea2a30: data    6 next: 0x5a6d1bea2a10
  at 0x5a6d1bea2a10: data    8 next: 0
set - 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2c80
list contains 6 elements:
  at 0x5a6d1bea2c80: data    2 next: 0x5a6d1bea2ca0
  at 0x5a6d1bea2ca0: data    3 next: 0x5a6d1bea2cc0
  at 0x5a6d1bea2cc0: data    4 next: 0x5a6d1bea2ce0
  at 0x5a6d1bea2ce0: data    5 next: 0x5a6d1bea2d00
  at 0x5a6d1bea2d00: data    6 next: 0x5a6d1bea2d20
  at 0x5a6d1bea2d20: data    8 next: 0
set - 2 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2a10
list contains 5 elements:
  at 0x5a6d1bea2a10: data    3 next: 0x5a6d1bea2db0
  at 0x5a6d1bea2db0: data    4 next: 0x5a6d1bea2dd0
  at 0x5a6d1bea2dd0: data    5 next: 0x5a6d1bea2df0
  at 0x5a6d1bea2df0: data    6 next: 0x5a6d1bea2e10
  at 0x5a6d1bea2e10: data    8 next: 0
set - 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2c80
list contains 4 elements:
  at 0x5a6d1bea2c80: data    3 next: 0x5a6d1bea2ed0
  at 0x5a6d1bea2ed0: data    5 next: 0x5a6d1bea2ef0
  at 0x5a6d1bea2ef0: data    6 next: 0x5a6d1bea2f10
  at 0x5a6d1bea2f10: data    8 next: 0
set - 5 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2a10
list contains 3 elements:
  at 0x5a6d1bea2a10: data    3 next: 0x5a6d1bea2f90
  at 0x5a6d1bea2f90: data    6 next: 0x5a6d1bea2fb0
  at 0x5a6d1bea2fb0: data    8 next: 0
set - 7 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea2c60
list contains 3 elements:
  at 0x5a6d1bea2c60: data    3 next: 0x5a6d1bea3000
  at 0x5a6d1bea3000: data    6 next: 0x5a6d1bea3020
  at 0x5a6d1bea3020: data    8 next: 0
set - 8 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3090
list contains 2 elements:
  at 0x5a6d1bea3090: data    3 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 10 of 10 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea30b0
list contains 1 elements:
  at 0x5a6d1bea30b0: data    5 next: 0
set += 3 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3000
list contains 2 elements:
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0
set += 7 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3000
list contains 3 elements:
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0
set += 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3000
list contains 4 elements:
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0
set += 6 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3000
list contains 5 elements:
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea3370
  at 0x5a6d1bea3370: data    6 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0
set += 8 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3000
list contains 6 elements:
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea3370
  at 0x5a6d1bea3370: data    6 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    8 next: 0
set += 2 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea35a0
list contains 7 elements:
  at 0x5a6d1bea35a0: data    2 next: 0x5a6d1bea3000
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea3370
  at 0x5a6d1bea3370: data    6 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    8 next: 0
set += 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3710
list contains 8 elements:
  at 0x5a6d1bea3710: data    1 next: 0x5a6d1bea35a0
  at 0x5a6d1bea35a0: data    2 next: 0x5a6d1bea3000
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea3370
  at 0x5a6d1bea3370: data    6 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7b0 and contained 7 objects 
 list was at address 0x7ffee864b7b0 m_head points to 0x5a6d1bea35a0
  at 0x5a6d1bea35a0: data    2 next: 0x5a6d1bea3000
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea3370
  at 0x5a6d1bea3370: data    6 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    8 next: 0

after_set:  
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3710
list contains 8 elements:
  at 0x5a6d1bea3710: data    1 next: 0x5a6d1bea35a0
  at 0x5a6d1bea35a0: data    2 next: 0x5a6d1bea3000
  at 0x5a6d1bea3000: data    3 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    4 next: 0x5a6d1bea30b0
  at 0x5a6d1bea30b0: data    5 next: 0x5a6d1bea3370
  at 0x5a6d1bea3370: data    6 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    7 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    8 next: 0

 returns true 

passed   operation +=

Passed 11 of 11 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 1 elements:
  at 0x5a6d1bea31a0: data    1 next: 0
set += 2 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 2 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0
set += 3 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 3 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0
set += 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 4 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0
set += 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 4 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0
set += 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 4 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0
set += 3 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 4 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0
set += 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 4 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7b0 and contained 4 objects 
 list was at address 0x7ffee864b7b0 m_head points to 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0

after_set:  
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea31a0
list contains 4 elements:
  at 0x5a6d1bea31a0: data    1 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    2 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    3 next: 0x5a6d1bea38b0
  at 0x5a6d1bea38b0: data    4 next: 0

 returns true 

passed   operation +=

Passed 12 of 12 tests


***************************** Test Name  ******************************

*                        operator-=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -=
buildSet @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea38b0
list contains 8 elements:
  at 0x5a6d1bea38b0: data    1 next: 0x5a6d1bea3490
  at 0x5a6d1bea3490: data    2 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    4 next: 0x5a6d1bea3c80
  at 0x5a6d1bea3c80: data    5 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0x5a6d1bea3cc0
  at 0x5a6d1bea3cc0: data    7 next: 0x5a6d1bea3ce0
  at 0x5a6d1bea3ce0: data    8 next: 0
set -= 1 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3490
list contains 7 elements:
  at 0x5a6d1bea3490: data    2 next: 0x5a6d1bea3270
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    4 next: 0x5a6d1bea3c80
  at 0x5a6d1bea3c80: data    5 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0x5a6d1bea3cc0
  at 0x5a6d1bea3cc0: data    7 next: 0x5a6d1bea3ce0
  at 0x5a6d1bea3ce0: data    8 next: 0
set -= 2 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3270
list contains 6 elements:
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea31a0
  at 0x5a6d1bea31a0: data    4 next: 0x5a6d1bea3c80
  at 0x5a6d1bea3c80: data    5 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0x5a6d1bea3cc0
  at 0x5a6d1bea3cc0: data    7 next: 0x5a6d1bea3ce0
  at 0x5a6d1bea3ce0: data    8 next: 0
set -= 4 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3270
list contains 5 elements:
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea3c80
  at 0x5a6d1bea3c80: data    5 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0x5a6d1bea3cc0
  at 0x5a6d1bea3cc0: data    7 next: 0x5a6d1bea3ce0
  at 0x5a6d1bea3ce0: data    8 next: 0
set -= 5 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3270
list contains 4 elements:
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0x5a6d1bea3cc0
  at 0x5a6d1bea3cc0: data    7 next: 0x5a6d1bea3ce0
  at 0x5a6d1bea3ce0: data    8 next: 0
set -= 7 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3270
list contains 3 elements:
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0x5a6d1bea3ce0
  at 0x5a6d1bea3ce0: data    8 next: 0
set -= 8 results in set @0x7ffee864b7b0
set contains a list at 0x7ffee864b7b0: m_head points to 0x5a6d1bea3270
list contains 2 elements:
  at 0x5a6d1bea3270: data    3 next: 0x5a6d1bea3ca0
  at 0x5a6d1bea3ca0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 13 of 13 tests


***************************** Test Name  ******************************

*                            .isMember(T)                             *

***************************** Test Name  ******************************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 14 of 14 tests


***************************** Test Name  ******************************

*                        relational operators                         *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *              { empty }.operator==({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } == { <empty list> } returns true 

    ************************ Test Phase *************************
    *              { empty }.operator!=({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } != { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator==({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator!=({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != { <empty list> } returns true 

    ************************ Test Phase *************************
    *               { empty }.operator==({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *               { empty }.operator!=({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } != {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 

    ************************ Test Phase *************************
    *                { 5-8 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 5-8 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 

Passed 28 of 28 tests

passed : relational operators == !=

Passed 28 of 28 tests


***************************** Test Name  ******************************

*                       operator+(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea4330
list contains 7 elements:
  at 0x5a6d1bea4330: data    1 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    2 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    3 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    5 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    6 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    7 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    1 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    2 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    3 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    5 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    6 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    7 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea44b0
list contains 7 elements:
  at 0x5a6d1bea44b0: data    1 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    2 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    3 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    5 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    6 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    7 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 0 objects 
 list was at address 0x7ffee864b770 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea44b0
list contains 7 elements:
  at 0x5a6d1bea44b0: data    1 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    2 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    3 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    5 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    6 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    7 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 29 of 29 tests

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4490
list contains 7 elements:
  at 0x5a6d1bea4490: data    1 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    2 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    3 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    5 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    6 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 0 objects 
 list was at address 0x7ffee864b760 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea43b0
list contains 7 elements:
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    2 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    3 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    5 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    6 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    7 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 7 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    1 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    2 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    3 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    5 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    6 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea43b0
list contains 7 elements:
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    2 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    3 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    5 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    6 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    7 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 30 of 30 tests

    ************************ Test Phase *************************
    *      operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea4390
list contains 7 elements:
  at 0x5a6d1bea4390: data    1 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    2 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    3 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    5 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    6 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    7 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4350
list contains 3 elements:
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    4 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    1 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    2 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    3 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    5 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    6 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    7 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4630
list contains 8 elements:
  at 0x5a6d1bea4630: data    1 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    2 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    3 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    4 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    5 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    6 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    7 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 3 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    4 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    5 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4630
list contains 8 elements:
  at 0x5a6d1bea4630: data    1 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    2 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    3 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    4 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    5 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    6 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    7 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 31 of 31 tests


***************************** Test Name  ******************************

*                       operator|(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea43b0
list contains 7 elements:
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    5 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    6 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    7 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    5 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    6 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    7 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4570
list contains 7 elements:
  at 0x5a6d1bea4570: data    1 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    2 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    3 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    5 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 0 objects 
 list was at address 0x7ffee864b770 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4570
list contains 7 elements:
  at 0x5a6d1bea4570: data    1 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    2 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    3 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    5 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 32 of 32 tests

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea42f0
list contains 7 elements:
  at 0x5a6d1bea42f0: data    1 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    2 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    3 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    5 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    6 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 0 objects 
 list was at address 0x7ffee864b760 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4450
list contains 7 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    2 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    6 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    7 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 7 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    1 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    2 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    3 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    5 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    6 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4450
list contains 7 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    2 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    6 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    7 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 33 of 33 tests

    ************************ Test Phase *************************
    *      operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea43f0
list contains 7 elements:
  at 0x5a6d1bea43f0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    3 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    7 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4350
list contains 3 elements:
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    4 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    3 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    7 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4330
list contains 8 elements:
  at 0x5a6d1bea4330: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    3 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    4 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    5 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    6 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    7 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 3 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    4 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4330
list contains 8 elements:
  at 0x5a6d1bea4330: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    3 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    4 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    5 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    6 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    7 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 34 of 34 tests


***************************** Test Name  ******************************

*                       operator^(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea4410
list contains 7 elements:
  at 0x5a6d1bea4410: data    1 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    2 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    3 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    5 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    6 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    7 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    1 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    2 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    3 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    5 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    6 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    7 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4710
list contains 7 elements:
  at 0x5a6d1bea4710: data    1 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    2 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    3 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    5 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    6 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    7 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 0 objects 
 list was at address 0x7ffee864b770 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4710
list contains 7 elements:
  at 0x5a6d1bea4710: data    1 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    2 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    3 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    5 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    6 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    7 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 35 of 35 tests

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea43b0
list contains 7 elements:
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    6 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 0 objects 
 list was at address 0x7ffee864b760 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4390
list contains 7 elements:
  at 0x5a6d1bea4390: data    1 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    2 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    3 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    5 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    6 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    7 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 7 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    6 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4390
list contains 7 elements:
  at 0x5a6d1bea4390: data    1 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    2 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    3 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    5 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    6 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    7 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 36 of 36 tests

    ************************ Test Phase *************************
    *      operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea46f0
list contains 7 elements:
  at 0x5a6d1bea46f0: data    1 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    2 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    3 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    5 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    6 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    7 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4350
list contains 3 elements:
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    4 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    5 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    1 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    2 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    3 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    5 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    6 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    7 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4470
list contains 6 elements:
  at 0x5a6d1bea4470: data    1 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    2 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    4 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    6 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    7 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 3 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    4 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    5 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4470
list contains 6 elements:
  at 0x5a6d1bea4470: data    1 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    2 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    4 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    6 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    7 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 37 of 37 tests


***************************** Test Name  ******************************

*                       operator&(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea4550
list contains 7 elements:
  at 0x5a6d1bea4550: data    1 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    2 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    3 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    7 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 38 of 38 tests

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4570
list contains 7 elements:
  at 0x5a6d1bea4570: data    1 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    2 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    3 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    5 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    6 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 39 of 39 tests

    ************************ Test Phase *************************
    *      operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea43f0
list contains 7 elements:
  at 0x5a6d1bea43f0: data    1 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    2 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    3 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    5 next: 0x5a6d1bea4370
  at 0x5a6d1bea4370: data    6 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    7 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4350
list contains 3 elements:
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    4 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 40 of 40 tests


***************************** Test Name  ******************************

*                       operator-(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea4710
list contains 7 elements:
  at 0x5a6d1bea4710: data    1 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    2 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    3 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    5 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    6 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    7 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    1 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    2 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    3 next: 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    5 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    6 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    7 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4330
list contains 7 elements:
  at 0x5a6d1bea4330: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    3 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    5 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    6 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    7 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 0 objects 
 list was at address 0x7ffee864b770 m_head points to 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea4330
list contains 7 elements:
  at 0x5a6d1bea4330: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    3 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    5 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    6 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    7 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 41 of 41 tests

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4690
list contains 7 elements:
  at 0x5a6d1bea4690: data    1 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    5 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    6 next: 0x5a6d1bea4670
  at 0x5a6d1bea4670: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 42 of 42 tests

    ************************ Test Phase *************************
    *      operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffee864b760: m_head points to 0x5a6d1bea43d0
list contains 7 elements:
  at 0x5a6d1bea43d0: data    1 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    2 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    3 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    5 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    6 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    7 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffee864b770: m_head points to 0x5a6d1bea4350
list contains 3 elements:
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    4 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    5 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b760 and contained 7 objects 
 list was at address 0x7ffee864b760 m_head points to 0x5a6d1bea43d0
  at 0x5a6d1bea43d0: data    1 next: 0x5a6d1bea4390
  at 0x5a6d1bea4390: data    2 next: 0x5a6d1bea44d0
  at 0x5a6d1bea44d0: data    3 next: 0x5a6d1bea4710
  at 0x5a6d1bea4710: data    5 next: 0x5a6d1bea4490
  at 0x5a6d1bea4490: data    6 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    7 next: 0x5a6d1bea4530
  at 0x5a6d1bea4530: data    8 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea43b0
list contains 5 elements:
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    2 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    6 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    7 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b770 and contained 3 objects 
 list was at address 0x7ffee864b770 m_head points to 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    4 next: 0x5a6d1bea4690
  at 0x5a6d1bea4690: data    5 next: 0

after_set:  @0x7ffee864b780
set contains a list at 0x7ffee864b780: m_head points to 0x5a6d1bea43b0
list contains 5 elements:
  at 0x5a6d1bea43b0: data    1 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    2 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    6 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    7 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 43 of 43 tests


***************************** Test Name  ******************************

*                      operator+=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea4450
list contains 7 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    8 next: 0

 += 

set contains a list at 0x7ffee864b7d0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea4450
list contains 7 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7c0 and contained 7 objects 
 list was at address 0x7ffee864b7c0 m_head points to 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    8 next: 0

after_set:  
set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea4450
list contains 7 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    8 next: 0

 returns true 


passed   operation +=

Passed 44 of 44 tests

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffee864b7c0: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7ffee864b7d0: m_head points to 0x5a6d1bea46b0
list contains 7 elements:
  at 0x5a6d1bea46b0: data    1 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    2 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    3 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    5 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    6 next: 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    7 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    8 next: 0

yields

set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea44f0
list contains 7 elements:
  at 0x5a6d1bea44f0: data    1 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    2 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    3 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    5 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    6 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7c0 and contained 0 objects 
 list was at address 0x7ffee864b7c0 m_head points to 0

after_set:  
set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea44f0
list contains 7 elements:
  at 0x5a6d1bea44f0: data    1 next: 0x5a6d1bea43b0
  at 0x5a6d1bea43b0: data    2 next: 0x5a6d1bea46f0
  at 0x5a6d1bea46f0: data    3 next: 0x5a6d1bea4650
  at 0x5a6d1bea4650: data    5 next: 0x5a6d1bea4630
  at 0x5a6d1bea4630: data    6 next: 0x5a6d1bea4430
  at 0x5a6d1bea4430: data    7 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 45 of 45 tests

    ************************ Test Phase *************************
    *      operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea4450
list contains 7 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

 += 

set contains a list at 0x7ffee864b7d0: m_head points to 0x5a6d1bea4350
list contains 3 elements:
  at 0x5a6d1bea4350: data    3 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    4 next: 0x5a6d1bea44f0
  at 0x5a6d1bea44f0: data    5 next: 0

yields

set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea4450
list contains 8 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    4 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7c0 and contained 7 objects 
 list was at address 0x7ffee864b7c0 m_head points to 0x5a6d1bea4450
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

after_set:  
set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea4450
list contains 8 elements:
  at 0x5a6d1bea4450: data    1 next: 0x5a6d1bea4570
  at 0x5a6d1bea4570: data    2 next: 0x5a6d1bea43f0
  at 0x5a6d1bea43f0: data    3 next: 0x5a6d1bea4310
  at 0x5a6d1bea4310: data    4 next: 0x5a6d1bea42f0
  at 0x5a6d1bea42f0: data    5 next: 0x5a6d1bea4470
  at 0x5a6d1bea4470: data    6 next: 0x5a6d1bea46b0
  at 0x5a6d1bea46b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests


***************************** Test Name  ******************************

*                      operator|=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea46d0
list contains 7 elements:
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

 |= 

set contains a list at 0x7ffee864b7d0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea46d0
list contains 7 elements:
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7c0 and contained 7 objects 
 list was at address 0x7ffee864b7c0 m_head points to 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

after_set:  
set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea46d0
list contains 7 elements:
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea4410
  at 0x5a6d1bea4410: data    8 next: 0

 returns true 


passed   operation |=

Passed 47 of 47 tests

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffee864b7c0: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7ffee864b7d0: m_head points to 0x5a6d1bea44b0
list contains 7 elements:
  at 0x5a6d1bea44b0: data    1 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    2 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    3 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    5 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    6 next: 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    7 next: 0x5a6d1bea4870
  at 0x5a6d1bea4870: data    8 next: 0

yields

set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea48f0
list contains 7 elements:
  at 0x5a6d1bea48f0: data    1 next: 0x5a6d1bea4910
  at 0x5a6d1bea4910: data    2 next: 0x5a6d1bea4930
  at 0x5a6d1bea4930: data    3 next: 0x5a6d1bea4950
  at 0x5a6d1bea4950: data    5 next: 0x5a6d1bea4970
  at 0x5a6d1bea4970: data    6 next: 0x5a6d1bea4990
  at 0x5a6d1bea4990: data    7 next: 0x5a6d1bea49b0
  at 0x5a6d1bea49b0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7c0 and contained 0 objects 
 list was at address 0x7ffee864b7c0 m_head points to 0

after_set:  
set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea48f0
list contains 7 elements:
  at 0x5a6d1bea48f0: data    1 next: 0x5a6d1bea4910
  at 0x5a6d1bea4910: data    2 next: 0x5a6d1bea4930
  at 0x5a6d1bea4930: data    3 next: 0x5a6d1bea4950
  at 0x5a6d1bea4950: data    5 next: 0x5a6d1bea4970
  at 0x5a6d1bea4970: data    6 next: 0x5a6d1bea4990
  at 0x5a6d1bea4990: data    7 next: 0x5a6d1bea49b0
  at 0x5a6d1bea49b0: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 48 of 48 tests

    ************************ Test Phase *************************
    *      operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea46d0
list contains 7 elements:
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea49b0
  at 0x5a6d1bea49b0: data    8 next: 0

 |= 

set contains a list at 0x7ffee864b7d0: m_head points to 0x5a6d1bea48f0
list contains 3 elements:
  at 0x5a6d1bea48f0: data    3 next: 0x5a6d1bea4910
  at 0x5a6d1bea4910: data    4 next: 0x5a6d1bea4930
  at 0x5a6d1bea4930: data    5 next: 0

yields

set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea46d0
list contains 8 elements:
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4b20
  at 0x5a6d1bea4b20: data    4 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea49b0
  at 0x5a6d1bea49b0: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffee864b7c0 and contained 7 objects 
 list was at address 0x7ffee864b7c0 m_head points to 0x5a6d1bea46d0
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea49b0
  at 0x5a6d1bea49b0: data    8 next: 0

after_set:  
set contains a list at 0x7ffee864b7c0: m_head points to 0x5a6d1bea46d0
list contains 8 elements:
  at 0x5a6d1bea46d0: data    1 next: 0x5a6d1bea4350
  at 0x5a6d1bea4350: data    2 next: 0x5a6d1bea4550
  at 0x5a6d1bea4550: data    3 next: 0x5a6d1bea4b20
  at 0x5a6d1bea4b20: data    4 next: 0x5a6d1bea4330
  at 0x5a6d1bea4330: data    5 next: 0x5a6d1bea4510
  at 0x5a6d1bea4510: data    6 next: 0x5a6d1bea44b0
  at 0x5a6d1bea44b0: data    7 next: 0x5a6d1bea49b0
  at 0x5a6d1bea49b0: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests

Passed 49 of 49 tests

JoesSetTestBench.cpp done
