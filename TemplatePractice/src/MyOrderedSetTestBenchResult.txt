/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 28 2025 at 15:15:01



***************************** Test Name  ******************************

*                         Default Constructor                         *

***************************** Test Name  ******************************

passed default constructor produced empty set &0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


***************************** Test Name  ******************************

*                            operator+=(T)                            *

***************************** Test Name  ******************************

 .. added 5 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407885ba0
list contains 1 elements:
  at 0x57a407885ba0: data    5 next: 0

 .. added 3 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407885ee0
list contains 2 elements:
  at 0x57a407885ee0: data    3 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0

 .. added 7 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407885ee0
list contains 3 elements:
  at 0x57a407885ee0: data    3 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0

 .. added 4 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407885ee0
list contains 4 elements:
  at 0x57a407885ee0: data    3 next: 0x57a407886270
  at 0x57a407886270: data    4 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0

 .. added 6 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407885ee0
list contains 5 elements:
  at 0x57a407885ee0: data    3 next: 0x57a407886270
  at 0x57a407886270: data    4 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a4078864b0
  at 0x57a4078864b0: data    6 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0

 .. added 8 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407885ee0
list contains 6 elements:
  at 0x57a407885ee0: data    3 next: 0x57a407886270
  at 0x57a407886270: data    4 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a4078864b0
  at 0x57a4078864b0: data    6 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0x57a407886750
  at 0x57a407886750: data    8 next: 0

 .. added 2 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886a60
list contains 7 elements:
  at 0x57a407886a60: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886270
  at 0x57a407886270: data    4 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a4078864b0
  at 0x57a4078864b0: data    6 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0x57a407886750
  at 0x57a407886750: data    8 next: 0

 .. added 1 to set produces @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886de0
list contains 8 elements:
  at 0x57a407886de0: data    1 next: 0x57a407886a60
  at 0x57a407886a60: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886270
  at 0x57a407886270: data    4 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a4078864b0
  at 0x57a4078864b0: data    6 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0x57a407886750
  at 0x57a407886750: data    8 next: 0

Test adding stressing inputs
 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b3b0 and contained 0 objects 
 list was at address 0x7ffd4d30b3b0 m_head points to 0

after_set:  
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886de0
list contains 8 elements:
  at 0x57a407886de0: data    1 next: 0x57a407886a60
  at 0x57a407886a60: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886270
  at 0x57a407886270: data    4 next: 0x57a407885ba0
  at 0x57a407885ba0: data    5 next: 0x57a4078864b0
  at 0x57a4078864b0: data    6 next: 0x57a407886090
  at 0x57a407886090: data    7 next: 0x57a407886750
  at 0x57a407886750: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


***************************** Test Name  ******************************

*                             buildSet()                              *

***************************** Test Name  ******************************

Test buildSet(stressing_inputs)
 expecting:        {  1,  2,  3,  4 }
 against received: {  1,  2,  3,  4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


***************************** Test Name  ******************************

*                             set.clear()                             *

***************************** Test Name  ******************************

buildSet @0x7ffd4d30b3b0
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886750
list contains 8 elements:
  at 0x57a407886750: data    1 next: 0x57a407886de0
  at 0x57a407886de0: data    2 next: 0x57a407885ba0
  at 0x57a407885ba0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a407886270
  at 0x57a407886270: data    5 next: 0x57a407885ee0
  at 0x57a407885ee0: data    6 next: 0x57a4078864b0
  at 0x57a4078864b0: data    7 next: 0x57a407886a60
  at 0x57a407886a60: data    8 next: 0
passed after set.clear()set is @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


***************************** Test Name  ******************************

*                             set.reset()                             *

***************************** Test Name  ******************************

buildSet @0x7ffd4d30b3b0
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886a60
list contains 8 elements:
  at 0x57a407886a60: data    1 next: 0x57a407886750
  at 0x57a407886750: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a4078864b0
  at 0x57a4078864b0: data    5 next: 0x57a407885ba0
  at 0x57a407885ba0: data    6 next: 0x57a407886270
  at 0x57a407886270: data    7 next: 0x57a407886de0
  at 0x57a407886de0: data    8 next: 0
passed after set.reset(),
set  @0x7ffd4d30b3b0: 
set contains a list at 0x7ffd4d30b3b0: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


***************************** Test Name  ******************************

*                          copy constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b3b0 and contained 8 objects 
 list was at address 0x7ffd4d30b3b0 m_head points to 0x57a407886de0
  at 0x57a407886de0: data    1 next: 0x57a407886a60
  at 0x57a407886a60: data    2 next: 0x57a407885ba0
  at 0x57a407885ba0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a407886270
  at 0x57a407886270: data    5 next: 0x57a407885ee0
  at 0x57a407885ee0: data    6 next: 0x57a4078864b0
  at 0x57a4078864b0: data    7 next: 0x57a407886750
  at 0x57a407886750: data    8 next: 0

after_set:  @0x7ffd4d30b3c0
set contains a list at 0x7ffd4d30b3c0: m_head points to 0x57a407887350
list contains 8 elements:
  at 0x57a407887350: data    1 next: 0x57a407887370
  at 0x57a407887370: data    2 next: 0x57a407887390
  at 0x57a407887390: data    3 next: 0x57a4078873b0
  at 0x57a4078873b0: data    4 next: 0x57a4078873d0
  at 0x57a4078873d0: data    5 next: 0x57a4078873f0
  at 0x57a4078873f0: data    6 next: 0x57a407887410
  at 0x57a407887410: data    7 next: 0x57a407887430
  at 0x57a407887430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed : 
set      @0x7ffd4d30b3b0 :
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886de0
list contains 8 elements:
  at 0x57a407886de0: data    1 next: 0x57a407886a60
  at 0x57a407886a60: data    2 next: 0x57a407885ba0
  at 0x57a407885ba0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a407886270
  at 0x57a407886270: data    5 next: 0x57a407885ee0
  at 0x57a407885ee0: data    6 next: 0x57a4078864b0
  at 0x57a4078864b0: data    7 next: 0x57a407886750
  at 0x57a407886750: data    8 next: 0

copy_set @0x7ffd4d30b3c0 :
set contains a list at 0x7ffd4d30b3c0: m_head points to 0x57a407887350
list contains 8 elements:
  at 0x57a407887350: data    1 next: 0x57a407887370
  at 0x57a407887370: data    2 next: 0x57a407887390
  at 0x57a407887390: data    3 next: 0x57a4078873b0
  at 0x57a4078873b0: data    4 next: 0x57a4078873d0
  at 0x57a4078873d0: data    5 next: 0x57a4078873f0
  at 0x57a4078873f0: data    6 next: 0x57a407887410
  at 0x57a407887410: data    7 next: 0x57a407887430
  at 0x57a407887430: data    8 next: 0


Passed 6 of 6 tests


***************************** Test Name  ******************************

*                       operator=(MyOrderedSet)                       *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b3b0 and contained 8 objects 
 list was at address 0x7ffd4d30b3b0 m_head points to 0x57a407886750
  at 0x57a407886750: data    1 next: 0x57a407887250
  at 0x57a407887250: data    2 next: 0x57a4078872f0
  at 0x57a4078872f0: data    3 next: 0x57a4078872b0
  at 0x57a4078872b0: data    4 next: 0x57a407887310
  at 0x57a407887310: data    5 next: 0x57a407887290
  at 0x57a407887290: data    6 next: 0x57a4078872d0
  at 0x57a4078872d0: data    7 next: 0x57a407887270
  at 0x57a407887270: data    8 next: 0

after_set:  @0x7ffd4d30b3d0
set contains a list at 0x7ffd4d30b3d0: m_head points to 0x57a407887450
list contains 8 elements:
  at 0x57a407887450: data    1 next: 0x57a407887470
  at 0x57a407887470: data    2 next: 0x57a407887490
  at 0x57a407887490: data    3 next: 0x57a4078874b0
  at 0x57a4078874b0: data    4 next: 0x57a4078874d0
  at 0x57a4078874d0: data    5 next: 0x57a4078874f0
  at 0x57a4078874f0: data    6 next: 0x57a407887510
  at 0x57a407887510: data    7 next: 0x57a407887530
  at 0x57a407887530: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

set               @0x7ffd4d30b3b0 :
set contains a list at 0x7ffd4d30b3b0: m_head points to 0x57a407886750
list contains 8 elements:
  at 0x57a407886750: data    1 next: 0x57a407887250
  at 0x57a407887250: data    2 next: 0x57a4078872f0
  at 0x57a4078872f0: data    3 next: 0x57a4078872b0
  at 0x57a4078872b0: data    4 next: 0x57a407887310
  at 0x57a407887310: data    5 next: 0x57a407887290
  at 0x57a407887290: data    6 next: 0x57a4078872d0
  at 0x57a4078872d0: data    7 next: 0x57a407887270
  at 0x57a407887270: data    8 next: 0

copy assigned_set @0x7ffd4d30b3d0 :
set contains a list at 0x7ffd4d30b3c0: m_head points to 0x57a407887350
list contains 8 elements:
  at 0x57a407887350: data    1 next: 0x57a407887370
  at 0x57a407887370: data    2 next: 0x57a407887390
  at 0x57a407887390: data    3 next: 0x57a4078873b0
  at 0x57a4078873b0: data    4 next: 0x57a4078873d0
  at 0x57a4078873d0: data    5 next: 0x57a4078873f0
  at 0x57a4078873f0: data    6 next: 0x57a407887410
  at 0x57a407887410: data    7 next: 0x57a407887430
  at 0x57a407887430: data    8 next: 0

passed 

Passed 7 of 7 tests


***************************** Test Name  ******************************

*                          move constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b3b0 and contained 8 objects 
 list was at address 0x7ffd4d30b3b0 m_head points to 0x57a407887270
  at 0x57a407887270: data    1 next: 0x57a407886de0
  at 0x57a407886de0: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a4078864b0
  at 0x57a4078864b0: data    5 next: 0x57a407885ba0
  at 0x57a407885ba0: data    6 next: 0x57a407886270
  at 0x57a407886270: data    7 next: 0x57a407886a60
  at 0x57a407886a60: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b3e0: m_head points to 0x57a407887270
list contains 8 elements:
  at 0x57a407887270: data    1 next: 0x57a407886de0
  at 0x57a407886de0: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a4078864b0
  at 0x57a4078864b0: data    5 next: 0x57a407885ba0
  at 0x57a407885ba0: data    6 next: 0x57a407886270
  at 0x57a407886270: data    7 next: 0x57a407886a60
  at 0x57a407886a60: data    8 next: 0

 returns true 

passed : 
set      @0x7ffd4d30b3b0 :
set contains a list at 0x7ffd4d30b3b0: m_head points to 0
list contains 0 elements:
  empty list

move_set @0x7ffd4d30b3e0 :
set contains a list at 0x7ffd4d30b3e0: m_head points to 0x57a407887270
list contains 8 elements:
  at 0x57a407887270: data    1 next: 0x57a407886de0
  at 0x57a407886de0: data    2 next: 0x57a407885ee0
  at 0x57a407885ee0: data    3 next: 0x57a407886090
  at 0x57a407886090: data    4 next: 0x57a4078864b0
  at 0x57a4078864b0: data    5 next: 0x57a407885ba0
  at 0x57a407885ba0: data    6 next: 0x57a407886270
  at 0x57a407886270: data    7 next: 0x57a407886a60
  at 0x57a407886a60: data    8 next: 0


Passed 8 of 8 tests


***************************** Test Name  ******************************

*                    operator=(move(MyOrderedSet))                    *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b3b0 and contained 8 objects 
 list was at address 0x7ffd4d30b3b0 m_head points to 0x57a407887330
  at 0x57a407887330: data    1 next: 0x57a407886750
  at 0x57a407886750: data    2 next: 0x57a407887290
  at 0x57a407887290: data    3 next: 0x57a4078872b0
  at 0x57a4078872b0: data    4 next: 0x57a4078872d0
  at 0x57a4078872d0: data    5 next: 0x57a4078872f0
  at 0x57a4078872f0: data    6 next: 0x57a407887310
  at 0x57a407887310: data    7 next: 0x57a407887250
  at 0x57a407887250: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b3f0: m_head points to 0x57a407887330
list contains 8 elements:
  at 0x57a407887330: data    1 next: 0x57a407886750
  at 0x57a407886750: data    2 next: 0x57a407887290
  at 0x57a407887290: data    3 next: 0x57a4078872b0
  at 0x57a4078872b0: data    4 next: 0x57a4078872d0
  at 0x57a4078872d0: data    5 next: 0x57a4078872f0
  at 0x57a4078872f0: data    6 next: 0x57a407887310
  at 0x57a407887310: data    7 next: 0x57a407887250
  at 0x57a407887250: data    8 next: 0

 returns true 

set               @0x7ffd4d30b3b0 :
set contains a list at 0x7ffd4d30b3b0: m_head points to 0
list contains 0 elements:
  empty list

move_assigned_set @0x7ffd4d30b3f0 :
set contains a list at 0x7ffd4d30b3f0: m_head points to 0x57a407887330
list contains 8 elements:
  at 0x57a407887330: data    1 next: 0x57a407886750
  at 0x57a407886750: data    2 next: 0x57a407887290
  at 0x57a407887290: data    3 next: 0x57a4078872b0
  at 0x57a4078872b0: data    4 next: 0x57a4078872d0
  at 0x57a4078872d0: data    5 next: 0x57a4078872f0
  at 0x57a4078872f0: data    6 next: 0x57a407887310
  at 0x57a407887310: data    7 next: 0x57a407887250
  at 0x57a407887250: data    8 next: 0

passed 

Passed 9 of 9 tests


***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887610
list contains 1 elements:
  at 0x57a407887610: data    5 next: 0
set + 3 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887590
list contains 2 elements:
  at 0x57a407887590: data    3 next: 0x57a4078875b0
  at 0x57a4078875b0: data    5 next: 0
set + 7 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887630
list contains 3 elements:
  at 0x57a407887630: data    3 next: 0x57a4078876e0
  at 0x57a4078876e0: data    5 next: 0x57a407887700
  at 0x57a407887700: data    7 next: 0
set + 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887760
list contains 4 elements:
  at 0x57a407887760: data    3 next: 0x57a4078877c0
  at 0x57a4078877c0: data    4 next: 0x57a407887780
  at 0x57a407887780: data    5 next: 0x57a4078877a0
  at 0x57a4078877a0: data    7 next: 0
set + 6 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887830
list contains 5 elements:
  at 0x57a407887830: data    3 next: 0x57a407887850
  at 0x57a407887850: data    4 next: 0x57a407887870
  at 0x57a407887870: data    5 next: 0x57a4078878b0
  at 0x57a4078878b0: data    6 next: 0x57a407887890
  at 0x57a407887890: data    7 next: 0
set + 8 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887950
list contains 6 elements:
  at 0x57a407887950: data    3 next: 0x57a407887970
  at 0x57a407887970: data    4 next: 0x57a407887990
  at 0x57a407887990: data    5 next: 0x57a4078879b0
  at 0x57a4078879b0: data    6 next: 0x57a4078879d0
  at 0x57a4078879d0: data    7 next: 0x57a4078879f0
  at 0x57a4078879f0: data    8 next: 0
set + 2 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887b20
list contains 7 elements:
  at 0x57a407887b20: data    2 next: 0x57a407887a60
  at 0x57a407887a60: data    3 next: 0x57a407887a80
  at 0x57a407887a80: data    4 next: 0x57a407887aa0
  at 0x57a407887aa0: data    5 next: 0x57a407887ac0
  at 0x57a407887ac0: data    6 next: 0x57a407887ae0
  at 0x57a407887ae0: data    7 next: 0x57a407887b00
  at 0x57a407887b00: data    8 next: 0
set + 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887cb0
list contains 8 elements:
  at 0x57a407887cb0: data    1 next: 0x57a407887bd0
  at 0x57a407887bd0: data    2 next: 0x57a407887bf0
  at 0x57a407887bf0: data    3 next: 0x57a407887c10
  at 0x57a407887c10: data    4 next: 0x57a407887c30
  at 0x57a407887c30: data    5 next: 0x57a407887c50
  at 0x57a407887c50: data    6 next: 0x57a407887c70
  at 0x57a407887c70: data    7 next: 0x57a407887c90
  at 0x57a407887c90: data    8 next: 0
 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b180 and contained 7 objects 
 list was at address 0x7ffd4d30b180 m_head points to 0x57a407887b20
  at 0x57a407887b20: data    2 next: 0x57a407887a60
  at 0x57a407887a60: data    3 next: 0x57a407887a80
  at 0x57a407887a80: data    4 next: 0x57a407887aa0
  at 0x57a407887aa0: data    5 next: 0x57a407887ac0
  at 0x57a407887ac0: data    6 next: 0x57a407887ae0
  at 0x57a407887ae0: data    7 next: 0x57a407887b00
  at 0x57a407887b00: data    8 next: 0

after_set:  @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887cb0
list contains 8 elements:
  at 0x57a407887cb0: data    1 next: 0x57a407887bd0
  at 0x57a407887bd0: data    2 next: 0x57a407887bf0
  at 0x57a407887bf0: data    3 next: 0x57a407887c10
  at 0x57a407887c10: data    4 next: 0x57a407887c30
  at 0x57a407887c30: data    5 next: 0x57a407887c50
  at 0x57a407887c50: data    6 next: 0x57a407887c70
  at 0x57a407887c70: data    7 next: 0x57a407887c90
  at 0x57a407887c90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887b00
list contains 1 elements:
  at 0x57a407887b00: data    1 next: 0
set + 2 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887aa0
list contains 2 elements:
  at 0x57a407887aa0: data    1 next: 0x57a407887a80
  at 0x57a407887a80: data    2 next: 0
set + 3 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887c90
list contains 3 elements:
  at 0x57a407887c90: data    1 next: 0x57a407887cb0
  at 0x57a407887cb0: data    2 next: 0x57a407887bd0
  at 0x57a407887bd0: data    3 next: 0
set + 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887c30
list contains 4 elements:
  at 0x57a407887c30: data    1 next: 0x57a407887c50
  at 0x57a407887c50: data    2 next: 0x57a407887c70
  at 0x57a407887c70: data    3 next: 0x57a407887dd0
  at 0x57a407887dd0: data    4 next: 0
set + 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887e70
list contains 4 elements:
  at 0x57a407887e70: data    1 next: 0x57a407887e90
  at 0x57a407887e90: data    2 next: 0x57a407887eb0
  at 0x57a407887eb0: data    3 next: 0x57a407887ed0
  at 0x57a407887ed0: data    4 next: 0
set + 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407887f50
list contains 4 elements:
  at 0x57a407887f50: data    1 next: 0x57a407887f70
  at 0x57a407887f70: data    2 next: 0x57a407887f90
  at 0x57a407887f90: data    3 next: 0x57a407887fb0
  at 0x57a407887fb0: data    4 next: 0
set + 3 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888030
list contains 4 elements:
  at 0x57a407888030: data    1 next: 0x57a407888050
  at 0x57a407888050: data    2 next: 0x57a407888070
  at 0x57a407888070: data    3 next: 0x57a407888090
  at 0x57a407888090: data    4 next: 0
set + 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888110
list contains 4 elements:
  at 0x57a407888110: data    1 next: 0x57a407888130
  at 0x57a407888130: data    2 next: 0x57a407888150
  at 0x57a407888150: data    3 next: 0x57a407888170
  at 0x57a407888170: data    4 next: 0
 expecting:        {  1,  2,  3,  4 }
 against received: {  1,  2,  3,  4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b180 and contained 4 objects 
 list was at address 0x7ffd4d30b180 m_head points to 0x57a407888030
  at 0x57a407888030: data    1 next: 0x57a407888050
  at 0x57a407888050: data    2 next: 0x57a407888070
  at 0x57a407888070: data    3 next: 0x57a407888090
  at 0x57a407888090: data    4 next: 0

after_set:  @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888110
list contains 4 elements:
  at 0x57a407888110: data    1 next: 0x57a407888130
  at 0x57a407888130: data    2 next: 0x57a407888150
  at 0x57a407888150: data    3 next: 0x57a407888170
  at 0x57a407888170: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 11 of 11 tests


***************************** Test Name  ******************************

*                         operator-(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -
buildSet @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888150
list contains 7 elements:
  at 0x57a407888150: data    1 next: 0x57a407888130
  at 0x57a407888130: data    2 next: 0x57a407888110
  at 0x57a407888110: data    3 next: 0x57a407888090
  at 0x57a407888090: data    4 next: 0x57a407888070
  at 0x57a407888070: data    5 next: 0x57a407888050
  at 0x57a407888050: data    6 next: 0x57a407888030
  at 0x57a407888030: data    8 next: 0
set - 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078882a0
list contains 6 elements:
  at 0x57a4078882a0: data    2 next: 0x57a4078882c0
  at 0x57a4078882c0: data    3 next: 0x57a4078882e0
  at 0x57a4078882e0: data    4 next: 0x57a407888300
  at 0x57a407888300: data    5 next: 0x57a407888320
  at 0x57a407888320: data    6 next: 0x57a407888340
  at 0x57a407888340: data    8 next: 0
set - 2 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888030
list contains 5 elements:
  at 0x57a407888030: data    3 next: 0x57a4078883d0
  at 0x57a4078883d0: data    4 next: 0x57a4078883f0
  at 0x57a4078883f0: data    5 next: 0x57a407888410
  at 0x57a407888410: data    6 next: 0x57a407888430
  at 0x57a407888430: data    8 next: 0
set - 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078882a0
list contains 4 elements:
  at 0x57a4078882a0: data    3 next: 0x57a4078884f0
  at 0x57a4078884f0: data    5 next: 0x57a407888510
  at 0x57a407888510: data    6 next: 0x57a407888530
  at 0x57a407888530: data    8 next: 0
set - 5 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888030
list contains 3 elements:
  at 0x57a407888030: data    3 next: 0x57a4078885b0
  at 0x57a4078885b0: data    6 next: 0x57a4078885d0
  at 0x57a4078885d0: data    8 next: 0
set - 7 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888280
list contains 3 elements:
  at 0x57a407888280: data    3 next: 0x57a407888620
  at 0x57a407888620: data    6 next: 0x57a407888640
  at 0x57a407888640: data    8 next: 0
set - 8 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078886b0
list contains 2 elements:
  at 0x57a4078886b0: data    3 next: 0x57a4078886d0
  at 0x57a4078886d0: data    6 next: 0
 expecting:        {  3,  6 }
 against received: {  3,  6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 12 of 12 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078886d0
list contains 1 elements:
  at 0x57a4078886d0: data    5 next: 0
set += 3 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888620
list contains 2 elements:
  at 0x57a407888620: data    3 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0
set += 7 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888620
list contains 3 elements:
  at 0x57a407888620: data    3 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0
set += 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888620
list contains 4 elements:
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0
set += 6 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888620
list contains 5 elements:
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a407888990
  at 0x57a407888990: data    6 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0
set += 8 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888620
list contains 6 elements:
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a407888990
  at 0x57a407888990: data    6 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0x57a407888ab0
  at 0x57a407888ab0: data    8 next: 0
set += 2 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888bc0
list contains 7 elements:
  at 0x57a407888bc0: data    2 next: 0x57a407888620
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a407888990
  at 0x57a407888990: data    6 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0x57a407888ab0
  at 0x57a407888ab0: data    8 next: 0
set += 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888d30
list contains 8 elements:
  at 0x57a407888d30: data    1 next: 0x57a407888bc0
  at 0x57a407888bc0: data    2 next: 0x57a407888620
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a407888990
  at 0x57a407888990: data    6 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0x57a407888ab0
  at 0x57a407888ab0: data    8 next: 0
 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b180 and contained 7 objects 
 list was at address 0x7ffd4d30b180 m_head points to 0x57a407888bc0
  at 0x57a407888bc0: data    2 next: 0x57a407888620
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a407888990
  at 0x57a407888990: data    6 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0x57a407888ab0
  at 0x57a407888ab0: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888d30
list contains 8 elements:
  at 0x57a407888d30: data    1 next: 0x57a407888bc0
  at 0x57a407888bc0: data    2 next: 0x57a407888620
  at 0x57a407888620: data    3 next: 0x57a407888890
  at 0x57a407888890: data    4 next: 0x57a4078886d0
  at 0x57a4078886d0: data    5 next: 0x57a407888990
  at 0x57a407888990: data    6 next: 0x57a4078887c0
  at 0x57a4078887c0: data    7 next: 0x57a407888ab0
  at 0x57a407888ab0: data    8 next: 0

 returns true 

passed   operation +=

Passed 13 of 13 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 1 elements:
  at 0x57a4078887c0: data    1 next: 0
set += 2 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 2 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0
set += 3 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 3 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0
set += 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 4 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0
set += 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 4 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0
set += 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 4 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0
set += 3 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 4 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0
set += 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 4 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0
 expecting:        {  1,  2,  3,  4 }
 against received: {  1,  2,  3,  4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b180 and contained 4 objects 
 list was at address 0x7ffd4d30b180 m_head points to 0x57a4078887c0
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0

after_set:  
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a4078887c0
list contains 4 elements:
  at 0x57a4078887c0: data    1 next: 0x57a407888890
  at 0x57a407888890: data    2 next: 0x57a407888ab0
  at 0x57a407888ab0: data    3 next: 0x57a407888ed0
  at 0x57a407888ed0: data    4 next: 0

 returns true 

passed   operation +=

Passed 14 of 14 tests


***************************** Test Name  ******************************

*                        operator-=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -=
buildSet @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888ed0
list contains 8 elements:
  at 0x57a407888ed0: data    1 next: 0x57a407888ab0
  at 0x57a407888ab0: data    2 next: 0x57a407888890
  at 0x57a407888890: data    3 next: 0x57a4078887c0
  at 0x57a4078887c0: data    4 next: 0x57a4078892a0
  at 0x57a4078892a0: data    5 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0x57a4078892e0
  at 0x57a4078892e0: data    7 next: 0x57a407889300
  at 0x57a407889300: data    8 next: 0
set -= 1 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888ab0
list contains 7 elements:
  at 0x57a407888ab0: data    2 next: 0x57a407888890
  at 0x57a407888890: data    3 next: 0x57a4078887c0
  at 0x57a4078887c0: data    4 next: 0x57a4078892a0
  at 0x57a4078892a0: data    5 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0x57a4078892e0
  at 0x57a4078892e0: data    7 next: 0x57a407889300
  at 0x57a407889300: data    8 next: 0
set -= 2 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888890
list contains 6 elements:
  at 0x57a407888890: data    3 next: 0x57a4078887c0
  at 0x57a4078887c0: data    4 next: 0x57a4078892a0
  at 0x57a4078892a0: data    5 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0x57a4078892e0
  at 0x57a4078892e0: data    7 next: 0x57a407889300
  at 0x57a407889300: data    8 next: 0
set -= 4 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888890
list contains 5 elements:
  at 0x57a407888890: data    3 next: 0x57a4078892a0
  at 0x57a4078892a0: data    5 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0x57a4078892e0
  at 0x57a4078892e0: data    7 next: 0x57a407889300
  at 0x57a407889300: data    8 next: 0
set -= 5 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888890
list contains 4 elements:
  at 0x57a407888890: data    3 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0x57a4078892e0
  at 0x57a4078892e0: data    7 next: 0x57a407889300
  at 0x57a407889300: data    8 next: 0
set -= 7 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888890
list contains 3 elements:
  at 0x57a407888890: data    3 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0x57a407889300
  at 0x57a407889300: data    8 next: 0
set -= 8 results in set @0x7ffd4d30b180
set contains a list at 0x7ffd4d30b180: m_head points to 0x57a407888890
list contains 2 elements:
  at 0x57a407888890: data    3 next: 0x57a4078892c0
  at 0x57a4078892c0: data    6 next: 0
 expecting:        {  3,  6 }
 against received: {  3,  6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 15 of 15 tests


***************************** Test Name  ******************************

*                            .isMember(T)                             *

***************************** Test Name  ******************************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 16 of 16 tests


***************************** Test Name  ******************************

*                        relational operators                         *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *              { empty }.operator==({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } == { <empty list> } returns true 

    ************************ Test Phase *************************
    *              { empty }.operator!=({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } != { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator==({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator!=({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != { <empty list> } returns true 

    ************************ Test Phase *************************
    *               { empty }.operator==({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *               { empty }.operator!=({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } != {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 

    ************************ Test Phase *************************
    *                { 5-8 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 5-8 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 

Passed 30 of 30 tests

passed : relational operators == !=

Passed 30 of 30 tests


***************************** Test Name  ******************************

*                       operator+(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889990
list contains 7 elements:
  at 0x57a407889990: data    1 next: 0x57a407889970
  at 0x57a407889970: data    2 next: 0x57a407889950
  at 0x57a407889950: data    3 next: 0x57a4078899d0
  at 0x57a4078899d0: data    5 next: 0x57a4078899f0
  at 0x57a4078899f0: data    6 next: 0x57a407889a10
  at 0x57a407889a10: data    7 next: 0x57a407889a30
  at 0x57a407889a30: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889990
  at 0x57a407889990: data    1 next: 0x57a407889970
  at 0x57a407889970: data    2 next: 0x57a407889950
  at 0x57a407889950: data    3 next: 0x57a4078899d0
  at 0x57a4078899d0: data    5 next: 0x57a4078899f0
  at 0x57a4078899f0: data    6 next: 0x57a407889a10
  at 0x57a407889a10: data    7 next: 0x57a407889a30
  at 0x57a407889a30: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889b10
list contains 7 elements:
  at 0x57a407889b10: data    1 next: 0x57a407889b30
  at 0x57a407889b30: data    2 next: 0x57a407889b50
  at 0x57a407889b50: data    3 next: 0x57a407889b70
  at 0x57a407889b70: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889bb0
  at 0x57a407889bb0: data    7 next: 0x57a407889bd0
  at 0x57a407889bd0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 0 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889b10
list contains 7 elements:
  at 0x57a407889b10: data    1 next: 0x57a407889b30
  at 0x57a407889b30: data    2 next: 0x57a407889b50
  at 0x57a407889b50: data    3 next: 0x57a407889b70
  at 0x57a407889b70: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889bb0
  at 0x57a407889bb0: data    7 next: 0x57a407889bd0
  at 0x57a407889bd0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 31 of 31 tests

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889af0
list contains 7 elements:
  at 0x57a407889af0: data    1 next: 0x57a407889ad0
  at 0x57a407889ad0: data    2 next: 0x57a407889ab0
  at 0x57a407889ab0: data    3 next: 0x57a407889a90
  at 0x57a407889a90: data    5 next: 0x57a407889a70
  at 0x57a407889a70: data    6 next: 0x57a407889a50
  at 0x57a407889a50: data    7 next: 0x57a4078899b0
  at 0x57a4078899b0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 0 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889a10
list contains 7 elements:
  at 0x57a407889a10: data    1 next: 0x57a407889bb0
  at 0x57a407889bb0: data    2 next: 0x57a407889b10
  at 0x57a407889b10: data    3 next: 0x57a407889b30
  at 0x57a407889b30: data    5 next: 0x57a407889b50
  at 0x57a407889b50: data    6 next: 0x57a407889b70
  at 0x57a407889b70: data    7 next: 0x57a407889b90
  at 0x57a407889b90: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 7 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a407889af0
  at 0x57a407889af0: data    1 next: 0x57a407889ad0
  at 0x57a407889ad0: data    2 next: 0x57a407889ab0
  at 0x57a407889ab0: data    3 next: 0x57a407889a90
  at 0x57a407889a90: data    5 next: 0x57a407889a70
  at 0x57a407889a70: data    6 next: 0x57a407889a50
  at 0x57a407889a50: data    7 next: 0x57a4078899b0
  at 0x57a4078899b0: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889a10
list contains 7 elements:
  at 0x57a407889a10: data    1 next: 0x57a407889bb0
  at 0x57a407889bb0: data    2 next: 0x57a407889b10
  at 0x57a407889b10: data    3 next: 0x57a407889b30
  at 0x57a407889b30: data    5 next: 0x57a407889b50
  at 0x57a407889b50: data    6 next: 0x57a407889b70
  at 0x57a407889b70: data    7 next: 0x57a407889b90
  at 0x57a407889b90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 32 of 32 tests

    ************************ Test Phase *************************
    *      operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a4078899f0
list contains 7 elements:
  at 0x57a4078899f0: data    1 next: 0x57a4078899d0
  at 0x57a4078899d0: data    2 next: 0x57a407889950
  at 0x57a407889950: data    3 next: 0x57a407889970
  at 0x57a407889970: data    5 next: 0x57a407889990
  at 0x57a407889990: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889a30
  at 0x57a407889a30: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a4078899b0
list contains 3 elements:
  at 0x57a4078899b0: data    3 next: 0x57a407889b90
  at 0x57a407889b90: data    4 next: 0x57a407889af0
  at 0x57a407889af0: data    5 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a4078899f0
  at 0x57a4078899f0: data    1 next: 0x57a4078899d0
  at 0x57a4078899d0: data    2 next: 0x57a407889950
  at 0x57a407889950: data    3 next: 0x57a407889970
  at 0x57a407889970: data    5 next: 0x57a407889990
  at 0x57a407889990: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889a30
  at 0x57a407889a30: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889c90
list contains 8 elements:
  at 0x57a407889c90: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a407889cd0
  at 0x57a407889cd0: data    3 next: 0x57a407889d70
  at 0x57a407889d70: data    4 next: 0x57a407889cf0
  at 0x57a407889cf0: data    5 next: 0x57a407889d10
  at 0x57a407889d10: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a407889d50
  at 0x57a407889d50: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 3 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a4078899b0
  at 0x57a4078899b0: data    3 next: 0x57a407889b90
  at 0x57a407889b90: data    4 next: 0x57a407889af0
  at 0x57a407889af0: data    5 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889c90
list contains 8 elements:
  at 0x57a407889c90: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a407889cd0
  at 0x57a407889cd0: data    3 next: 0x57a407889d70
  at 0x57a407889d70: data    4 next: 0x57a407889cf0
  at 0x57a407889cf0: data    5 next: 0x57a407889d10
  at 0x57a407889d10: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a407889d50
  at 0x57a407889d50: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 33 of 33 tests


***************************** Test Name  ******************************

*                       operator|(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889a10
list contains 7 elements:
  at 0x57a407889a10: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889a70
  at 0x57a407889a70: data    5 next: 0x57a407889a90
  at 0x57a407889a90: data    6 next: 0x57a407889ab0
  at 0x57a407889ab0: data    7 next: 0x57a407889ad0
  at 0x57a407889ad0: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889a10
  at 0x57a407889a10: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889a70
  at 0x57a407889a70: data    5 next: 0x57a407889a90
  at 0x57a407889a90: data    6 next: 0x57a407889ab0
  at 0x57a407889ab0: data    7 next: 0x57a407889ad0
  at 0x57a407889ad0: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889bd0
list contains 7 elements:
  at 0x57a407889bd0: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889cd0
  at 0x57a407889cd0: data    3 next: 0x57a407889d70
  at 0x57a407889d70: data    5 next: 0x57a407889cf0
  at 0x57a407889cf0: data    6 next: 0x57a407889d10
  at 0x57a407889d10: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 0 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889bd0
list contains 7 elements:
  at 0x57a407889bd0: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889cd0
  at 0x57a407889cd0: data    3 next: 0x57a407889d70
  at 0x57a407889d70: data    5 next: 0x57a407889cf0
  at 0x57a407889cf0: data    6 next: 0x57a407889d10
  at 0x57a407889d10: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 34 of 34 tests

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889950
list contains 7 elements:
  at 0x57a407889950: data    1 next: 0x57a4078899d0
  at 0x57a4078899d0: data    2 next: 0x57a4078899f0
  at 0x57a4078899f0: data    3 next: 0x57a407889af0
  at 0x57a407889af0: data    5 next: 0x57a407889a30
  at 0x57a407889a30: data    6 next: 0x57a407889d50
  at 0x57a407889d50: data    7 next: 0x57a4078899b0
  at 0x57a4078899b0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 0 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889ab0
list contains 7 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889d10
  at 0x57a407889d10: data    2 next: 0x57a407889970
  at 0x57a407889970: data    3 next: 0x57a407889990
  at 0x57a407889990: data    5 next: 0x57a407889bd0
  at 0x57a407889bd0: data    6 next: 0x57a407889b90
  at 0x57a407889b90: data    7 next: 0x57a407889cd0
  at 0x57a407889cd0: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 7 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a407889950
  at 0x57a407889950: data    1 next: 0x57a4078899d0
  at 0x57a4078899d0: data    2 next: 0x57a4078899f0
  at 0x57a4078899f0: data    3 next: 0x57a407889af0
  at 0x57a407889af0: data    5 next: 0x57a407889a30
  at 0x57a407889a30: data    6 next: 0x57a407889d50
  at 0x57a407889d50: data    7 next: 0x57a4078899b0
  at 0x57a4078899b0: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889ab0
list contains 7 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889d10
  at 0x57a407889d10: data    2 next: 0x57a407889970
  at 0x57a407889970: data    3 next: 0x57a407889990
  at 0x57a407889990: data    5 next: 0x57a407889bd0
  at 0x57a407889bd0: data    6 next: 0x57a407889b90
  at 0x57a407889b90: data    7 next: 0x57a407889cd0
  at 0x57a407889cd0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 35 of 35 tests

    ************************ Test Phase *************************
    *      operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889a50
list contains 7 elements:
  at 0x57a407889a50: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889a10
  at 0x57a407889a10: data    3 next: 0x57a407889d30
  at 0x57a407889d30: data    5 next: 0x57a407889ad0
  at 0x57a407889ad0: data    6 next: 0x57a407889d70
  at 0x57a407889d70: data    7 next: 0x57a407889cf0
  at 0x57a407889cf0: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a4078899b0
list contains 3 elements:
  at 0x57a4078899b0: data    3 next: 0x57a407889cd0
  at 0x57a407889cd0: data    4 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889a50
  at 0x57a407889a50: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889a10
  at 0x57a407889a10: data    3 next: 0x57a407889d30
  at 0x57a407889d30: data    5 next: 0x57a407889ad0
  at 0x57a407889ad0: data    6 next: 0x57a407889d70
  at 0x57a407889d70: data    7 next: 0x57a407889cf0
  at 0x57a407889cf0: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889990
list contains 8 elements:
  at 0x57a407889990: data    1 next: 0x57a407889bd0
  at 0x57a407889bd0: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    4 next: 0x57a407889b10
  at 0x57a407889b10: data    5 next: 0x57a407889b30
  at 0x57a407889b30: data    6 next: 0x57a407889b50
  at 0x57a407889b50: data    7 next: 0x57a407889bb0
  at 0x57a407889bb0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 3 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a4078899b0
  at 0x57a4078899b0: data    3 next: 0x57a407889cd0
  at 0x57a407889cd0: data    4 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889990
list contains 8 elements:
  at 0x57a407889990: data    1 next: 0x57a407889bd0
  at 0x57a407889bd0: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    4 next: 0x57a407889b10
  at 0x57a407889b10: data    5 next: 0x57a407889b30
  at 0x57a407889b30: data    6 next: 0x57a407889b50
  at 0x57a407889b50: data    7 next: 0x57a407889bb0
  at 0x57a407889bb0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 36 of 36 tests


***************************** Test Name  ******************************

*                       operator^(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889a70
list contains 7 elements:
  at 0x57a407889a70: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889d50
  at 0x57a407889d50: data    3 next: 0x57a407889a30
  at 0x57a407889a30: data    5 next: 0x57a407889af0
  at 0x57a407889af0: data    6 next: 0x57a4078899f0
  at 0x57a4078899f0: data    7 next: 0x57a4078899d0
  at 0x57a4078899d0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889a70
  at 0x57a407889a70: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889d50
  at 0x57a407889d50: data    3 next: 0x57a407889a30
  at 0x57a407889a30: data    5 next: 0x57a407889af0
  at 0x57a407889af0: data    6 next: 0x57a4078899f0
  at 0x57a4078899f0: data    7 next: 0x57a4078899d0
  at 0x57a4078899d0: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889d70
list contains 7 elements:
  at 0x57a407889d70: data    1 next: 0x57a407889cd0
  at 0x57a407889cd0: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889b10
  at 0x57a407889b10: data    6 next: 0x57a407889b30
  at 0x57a407889b30: data    7 next: 0x57a407889b50
  at 0x57a407889b50: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 0 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889d70
list contains 7 elements:
  at 0x57a407889d70: data    1 next: 0x57a407889cd0
  at 0x57a407889cd0: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889b10
  at 0x57a407889b10: data    6 next: 0x57a407889b30
  at 0x57a407889b30: data    7 next: 0x57a407889b50
  at 0x57a407889b50: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 37 of 37 tests

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889a10
list contains 7 elements:
  at 0x57a407889a10: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889cf0
  at 0x57a407889cf0: data    6 next: 0x57a407889bb0
  at 0x57a407889bb0: data    7 next: 0x57a4078899b0
  at 0x57a4078899b0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 0 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a4078899f0
list contains 7 elements:
  at 0x57a4078899f0: data    1 next: 0x57a407889b30
  at 0x57a407889b30: data    2 next: 0x57a407889d30
  at 0x57a407889d30: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889d70
  at 0x57a407889d70: data    6 next: 0x57a407889cd0
  at 0x57a407889cd0: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 7 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a407889a10
  at 0x57a407889a10: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889cf0
  at 0x57a407889cf0: data    6 next: 0x57a407889bb0
  at 0x57a407889bb0: data    7 next: 0x57a4078899b0
  at 0x57a4078899b0: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a4078899f0
list contains 7 elements:
  at 0x57a4078899f0: data    1 next: 0x57a407889b30
  at 0x57a407889b30: data    2 next: 0x57a407889d30
  at 0x57a407889d30: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889d70
  at 0x57a407889d70: data    6 next: 0x57a407889cd0
  at 0x57a407889cd0: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 38 of 38 tests

    ************************ Test Phase *************************
    *      operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889d50
list contains 7 elements:
  at 0x57a407889d50: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889a70
  at 0x57a407889a70: data    3 next: 0x57a407889b50
  at 0x57a407889b50: data    5 next: 0x57a4078899d0
  at 0x57a4078899d0: data    6 next: 0x57a407889c90
  at 0x57a407889c90: data    7 next: 0x57a407889b10
  at 0x57a407889b10: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a4078899b0
list contains 3 elements:
  at 0x57a4078899b0: data    3 next: 0x57a407889cb0
  at 0x57a407889cb0: data    4 next: 0x57a407889a10
  at 0x57a407889a10: data    5 next: 0

 expecting:        {  1,  2,  4,  6,  7,  8 }
 against received: {  1,  2,  4,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889d50
  at 0x57a407889d50: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889a70
  at 0x57a407889a70: data    3 next: 0x57a407889b50
  at 0x57a407889b50: data    5 next: 0x57a4078899d0
  at 0x57a4078899d0: data    6 next: 0x57a407889c90
  at 0x57a407889c90: data    7 next: 0x57a407889b10
  at 0x57a407889b10: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889ad0
list contains 6 elements:
  at 0x57a407889ad0: data    1 next: 0x57a407889d70
  at 0x57a407889d70: data    2 next: 0x57a407889bd0
  at 0x57a407889bd0: data    4 next: 0x57a407889d10
  at 0x57a407889d10: data    6 next: 0x57a407889970
  at 0x57a407889970: data    7 next: 0x57a407889a90
  at 0x57a407889a90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 3 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a4078899b0
  at 0x57a4078899b0: data    3 next: 0x57a407889cb0
  at 0x57a407889cb0: data    4 next: 0x57a407889a10
  at 0x57a407889a10: data    5 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889ad0
list contains 6 elements:
  at 0x57a407889ad0: data    1 next: 0x57a407889d70
  at 0x57a407889d70: data    2 next: 0x57a407889bd0
  at 0x57a407889bd0: data    4 next: 0x57a407889d10
  at 0x57a407889d10: data    6 next: 0x57a407889970
  at 0x57a407889970: data    7 next: 0x57a407889a90
  at 0x57a407889a90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 39 of 39 tests


***************************** Test Name  ******************************

*                       operator&(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889bb0
list contains 7 elements:
  at 0x57a407889bb0: data    1 next: 0x57a407889cf0
  at 0x57a407889cf0: data    2 next: 0x57a407889950
  at 0x57a407889950: data    3 next: 0x57a407889a50
  at 0x57a407889a50: data    5 next: 0x57a407889b70
  at 0x57a407889b70: data    6 next: 0x57a407889ab0
  at 0x57a407889ab0: data    7 next: 0x57a407889990
  at 0x57a407889990: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 40 of 40 tests

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889b50
list contains 7 elements:
  at 0x57a407889b50: data    1 next: 0x57a407889a70
  at 0x57a407889a70: data    2 next: 0x57a407889b90
  at 0x57a407889b90: data    3 next: 0x57a407889d50
  at 0x57a407889d50: data    5 next: 0x57a407889a10
  at 0x57a407889a10: data    6 next: 0x57a407889b10
  at 0x57a407889b10: data    7 next: 0x57a407889c90
  at 0x57a407889c90: data    8 next: 0

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 41 of 41 tests

    ************************ Test Phase *************************
    *      operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889a50
list contains 7 elements:
  at 0x57a407889a50: data    1 next: 0x57a407889950
  at 0x57a407889950: data    2 next: 0x57a407889cf0
  at 0x57a407889cf0: data    3 next: 0x57a407889bb0
  at 0x57a407889bb0: data    5 next: 0x57a4078899d0
  at 0x57a4078899d0: data    6 next: 0x57a407889990
  at 0x57a407889990: data    7 next: 0x57a407889ab0
  at 0x57a407889ab0: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889c90
list contains 3 elements:
  at 0x57a407889c90: data    3 next: 0x57a407889b70
  at 0x57a407889b70: data    4 next: 0x57a407889b50
  at 0x57a407889b50: data    5 next: 0

 expecting:        {  3,  5 }
 against received: {  3,  5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 42 of 42 tests


***************************** Test Name  ******************************

*                       operator-(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889a70
list contains 7 elements:
  at 0x57a407889a70: data    1 next: 0x57a407889af0
  at 0x57a407889af0: data    2 next: 0x57a407889cd0
  at 0x57a407889cd0: data    3 next: 0x57a407889a30
  at 0x57a407889a30: data    5 next: 0x57a4078899f0
  at 0x57a4078899f0: data    6 next: 0x57a407889b30
  at 0x57a407889b30: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889a70
  at 0x57a407889a70: data    1 next: 0x57a407889af0
  at 0x57a407889af0: data    2 next: 0x57a407889cd0
  at 0x57a407889cd0: data    3 next: 0x57a407889a30
  at 0x57a407889a30: data    5 next: 0x57a4078899f0
  at 0x57a4078899f0: data    6 next: 0x57a407889b30
  at 0x57a407889b30: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889990
list contains 7 elements:
  at 0x57a407889990: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889bd0
  at 0x57a407889bd0: data    3 next: 0x57a407889d10
  at 0x57a407889d10: data    5 next: 0x57a407889970
  at 0x57a407889970: data    6 next: 0x57a407889d70
  at 0x57a407889d70: data    7 next: 0x57a407889a90
  at 0x57a407889a90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 0 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889990
list contains 7 elements:
  at 0x57a407889990: data    1 next: 0x57a407889b70
  at 0x57a407889b70: data    2 next: 0x57a407889bd0
  at 0x57a407889bd0: data    3 next: 0x57a407889d10
  at 0x57a407889d10: data    5 next: 0x57a407889970
  at 0x57a407889970: data    6 next: 0x57a407889d70
  at 0x57a407889d70: data    7 next: 0x57a407889a90
  at 0x57a407889a90: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 43 of 43 tests

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889cf0
list contains 7 elements:
  at 0x57a407889cf0: data    1 next: 0x57a407889950
  at 0x57a407889950: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889b50
  at 0x57a407889b50: data    5 next: 0x57a407889ab0
  at 0x57a407889ab0: data    6 next: 0x57a4078899b0
  at 0x57a4078899b0: data    7 next: 0x57a407889c90
  at 0x57a407889c90: data    8 next: 0

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 44 of 44 tests

    ************************ Test Phase *************************
    *      operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffd4d30b130: m_head points to 0x57a407889a30
list contains 7 elements:
  at 0x57a407889a30: data    1 next: 0x57a407889cd0
  at 0x57a407889cd0: data    2 next: 0x57a407889af0
  at 0x57a407889af0: data    3 next: 0x57a407889a70
  at 0x57a407889a70: data    5 next: 0x57a407889a90
  at 0x57a407889a90: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a407889b30
  at 0x57a407889b30: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffd4d30b140: m_head points to 0x57a407889c90
list contains 3 elements:
  at 0x57a407889c90: data    3 next: 0x57a4078899f0
  at 0x57a4078899f0: data    4 next: 0x57a407889cf0
  at 0x57a407889cf0: data    5 next: 0

 expecting:        {  1,  2,  6,  7,  8 }
 against received: {  1,  2,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b130 and contained 7 objects 
 list was at address 0x7ffd4d30b130 m_head points to 0x57a407889a30
  at 0x57a407889a30: data    1 next: 0x57a407889cd0
  at 0x57a407889cd0: data    2 next: 0x57a407889af0
  at 0x57a407889af0: data    3 next: 0x57a407889a70
  at 0x57a407889a70: data    5 next: 0x57a407889a90
  at 0x57a407889a90: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a407889b30
  at 0x57a407889b30: data    8 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889d10
list contains 5 elements:
  at 0x57a407889d10: data    1 next: 0x57a407889970
  at 0x57a407889970: data    2 next: 0x57a407889d50
  at 0x57a407889d50: data    6 next: 0x57a407889a10
  at 0x57a407889a10: data    7 next: 0x57a407889b10
  at 0x57a407889b10: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b140 and contained 3 objects 
 list was at address 0x7ffd4d30b140 m_head points to 0x57a407889c90
  at 0x57a407889c90: data    3 next: 0x57a4078899f0
  at 0x57a4078899f0: data    4 next: 0x57a407889cf0
  at 0x57a407889cf0: data    5 next: 0

after_set:  @0x7ffd4d30b150
set contains a list at 0x7ffd4d30b150: m_head points to 0x57a407889d10
list contains 5 elements:
  at 0x57a407889d10: data    1 next: 0x57a407889970
  at 0x57a407889970: data    2 next: 0x57a407889d50
  at 0x57a407889d50: data    6 next: 0x57a407889a10
  at 0x57a407889a10: data    7 next: 0x57a407889b10
  at 0x57a407889b10: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 45 of 45 tests


***************************** Test Name  ******************************

*                      operator+=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ab0
list contains 7 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

 += 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ab0
list contains 7 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a407889ab0
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ab0
list contains 7 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889ad0
list contains 7 elements:
  at 0x57a407889ad0: data    1 next: 0x57a407889b90
  at 0x57a407889b90: data    2 next: 0x57a407889950
  at 0x57a407889950: data    3 next: 0x57a407889a50
  at 0x57a407889a50: data    5 next: 0x57a407889b50
  at 0x57a407889b50: data    6 next: 0x57a407889ab0
  at 0x57a407889ab0: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a407889d10
  at 0x57a407889d10: data    2 next: 0x57a407889970
  at 0x57a407889970: data    3 next: 0x57a407889d50
  at 0x57a407889d50: data    5 next: 0x57a407889a10
  at 0x57a407889a10: data    6 next: 0x57a407889b10
  at 0x57a407889b10: data    7 next: 0x57a407889c90
  at 0x57a407889c90: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 0 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a407889d10
  at 0x57a407889d10: data    2 next: 0x57a407889970
  at 0x57a407889970: data    3 next: 0x57a407889d50
  at 0x57a407889d50: data    5 next: 0x57a407889a10
  at 0x57a407889a10: data    6 next: 0x57a407889b10
  at 0x57a407889b10: data    7 next: 0x57a407889c90
  at 0x57a407889c90: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 47 of 47 tests

    ************************ Test Phase *************************
    *      operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ab0
list contains 7 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a4078899f0
  at 0x57a4078899f0: data    8 next: 0

 += 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889c90
list contains 3 elements:
  at 0x57a407889c90: data    3 next: 0x57a407889d30
  at 0x57a407889d30: data    4 next: 0x57a407889cb0
  at 0x57a407889cb0: data    5 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ab0
list contains 8 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889d70
  at 0x57a407889d70: data    4 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a4078899f0
  at 0x57a4078899f0: data    8 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a407889ab0
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a4078899f0
  at 0x57a4078899f0: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ab0
list contains 8 elements:
  at 0x57a407889ab0: data    1 next: 0x57a407889b50
  at 0x57a407889b50: data    2 next: 0x57a407889a50
  at 0x57a407889a50: data    3 next: 0x57a407889d70
  at 0x57a407889d70: data    4 next: 0x57a407889950
  at 0x57a407889950: data    5 next: 0x57a407889b90
  at 0x57a407889b90: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a4078899f0
  at 0x57a4078899f0: data    8 next: 0

 returns true 


passed   operation +=

Passed 48 of 48 tests


***************************** Test Name  ******************************

*                      operator|=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889c90
  at 0x57a407889c90: data    3 next: 0x57a407889bb0
  at 0x57a407889bb0: data    5 next: 0x57a407889990
  at 0x57a407889990: data    6 next: 0x57a407889b70
  at 0x57a407889b70: data    7 next: 0x57a407889bd0
  at 0x57a407889bd0: data    8 next: 0

 |= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889c90
  at 0x57a407889c90: data    3 next: 0x57a407889bb0
  at 0x57a407889bb0: data    5 next: 0x57a407889990
  at 0x57a407889990: data    6 next: 0x57a407889b70
  at 0x57a407889b70: data    7 next: 0x57a407889bd0
  at 0x57a407889bd0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a407889cb0
  at 0x57a407889cb0: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889c90
  at 0x57a407889c90: data    3 next: 0x57a407889bb0
  at 0x57a407889bb0: data    5 next: 0x57a407889990
  at 0x57a407889990: data    6 next: 0x57a407889b70
  at 0x57a407889b70: data    7 next: 0x57a407889bd0
  at 0x57a407889bd0: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889c90
  at 0x57a407889c90: data    3 next: 0x57a407889bb0
  at 0x57a407889bb0: data    5 next: 0x57a407889990
  at 0x57a407889990: data    6 next: 0x57a407889b70
  at 0x57a407889b70: data    7 next: 0x57a407889bd0
  at 0x57a407889bd0: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889b70
list contains 7 elements:
  at 0x57a407889b70: data    1 next: 0x57a407889990
  at 0x57a407889990: data    2 next: 0x57a407889bb0
  at 0x57a407889bb0: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889d30
  at 0x57a407889d30: data    6 next: 0x57a407889cb0
  at 0x57a407889cb0: data    7 next: 0x57a407889ad0
  at 0x57a407889ad0: data    8 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889bd0
list contains 7 elements:
  at 0x57a407889bd0: data    1 next: 0x57a407889e70
  at 0x57a407889e70: data    2 next: 0x57a407889e90
  at 0x57a407889e90: data    3 next: 0x57a407889eb0
  at 0x57a407889eb0: data    5 next: 0x57a407889ed0
  at 0x57a407889ed0: data    6 next: 0x57a407889ef0
  at 0x57a407889ef0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 0 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889bd0
list contains 7 elements:
  at 0x57a407889bd0: data    1 next: 0x57a407889e70
  at 0x57a407889e70: data    2 next: 0x57a407889e90
  at 0x57a407889e90: data    3 next: 0x57a407889eb0
  at 0x57a407889eb0: data    5 next: 0x57a407889ed0
  at 0x57a407889ed0: data    6 next: 0x57a407889ef0
  at 0x57a407889ef0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 50 of 50 tests

    ************************ Test Phase *************************
    *      operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ad0
list contains 7 elements:
  at 0x57a407889ad0: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a407889d30
  at 0x57a407889d30: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889bb0
  at 0x57a407889bb0: data    6 next: 0x57a407889990
  at 0x57a407889990: data    7 next: 0x57a407889b70
  at 0x57a407889b70: data    8 next: 0

 |= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889f10
list contains 3 elements:
  at 0x57a407889f10: data    3 next: 0x57a407889bd0
  at 0x57a407889bd0: data    4 next: 0x57a407889e70
  at 0x57a407889e70: data    5 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ad0
list contains 8 elements:
  at 0x57a407889ad0: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a407889d30
  at 0x57a407889d30: data    3 next: 0x57a40788a000
  at 0x57a40788a000: data    4 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889bb0
  at 0x57a407889bb0: data    6 next: 0x57a407889990
  at 0x57a407889990: data    7 next: 0x57a407889b70
  at 0x57a407889b70: data    8 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a407889ad0
  at 0x57a407889ad0: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a407889d30
  at 0x57a407889d30: data    3 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889bb0
  at 0x57a407889bb0: data    6 next: 0x57a407889990
  at 0x57a407889990: data    7 next: 0x57a407889b70
  at 0x57a407889b70: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889ad0
list contains 8 elements:
  at 0x57a407889ad0: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a407889d30
  at 0x57a407889d30: data    3 next: 0x57a40788a000
  at 0x57a40788a000: data    4 next: 0x57a407889c90
  at 0x57a407889c90: data    5 next: 0x57a407889bb0
  at 0x57a407889bb0: data    6 next: 0x57a407889990
  at 0x57a407889990: data    7 next: 0x57a407889b70
  at 0x57a407889b70: data    8 next: 0

 returns true 


passed   operation |=

Passed 51 of 51 tests


***************************** Test Name  ******************************

*                      operator^=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a000
list contains 7 elements:
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 ^= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a000
list contains 7 elements:
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a40788a000
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a000
list contains 7 elements:
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 returns true 


passed   operation ^=

Passed 52 of 52 tests

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { empty } ^ { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 ^= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889f10
list contains 7 elements:
  at 0x57a407889f10: data    1 next: 0x57a407889bd0
  at 0x57a407889bd0: data    2 next: 0x57a407889e70
  at 0x57a407889e70: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889cb0
  at 0x57a407889cb0: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a40788a000
  at 0x57a40788a000: data    8 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a120
list contains 7 elements:
  at 0x57a40788a120: data    1 next: 0x57a40788a140
  at 0x57a40788a140: data    2 next: 0x57a40788a160
  at 0x57a40788a160: data    3 next: 0x57a40788a180
  at 0x57a40788a180: data    5 next: 0x57a40788a1a0
  at 0x57a40788a1a0: data    6 next: 0x57a40788a1c0
  at 0x57a40788a1c0: data    7 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 0 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a120
list contains 7 elements:
  at 0x57a40788a120: data    1 next: 0x57a40788a140
  at 0x57a40788a140: data    2 next: 0x57a40788a160
  at 0x57a40788a160: data    3 next: 0x57a40788a180
  at 0x57a40788a180: data    5 next: 0x57a40788a1a0
  at 0x57a40788a1a0: data    6 next: 0x57a40788a1c0
  at 0x57a40788a1c0: data    7 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    8 next: 0

 returns true b/c before_set was empty


passed   operation ^=

Passed 53 of 53 tests

    ************************ Test Phase *************************
    *      operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a000
list contains 7 elements:
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 ^= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a40788a1e0
list contains 3 elements:
  at 0x57a40788a1e0: data    3 next: 0x57a40788a120
  at 0x57a40788a120: data    4 next: 0x57a40788a140
  at 0x57a40788a140: data    5 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a000
list contains 6 elements:
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    4 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 expecting:        {  1,  2,  4,  6,  7,  8 }
 against received: {  1,  2,  4,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a40788a000
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a000
list contains 6 elements:
  at 0x57a40788a000: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a407889cb0
  at 0x57a407889cb0: data    4 next: 0x57a407889e70
  at 0x57a407889e70: data    6 next: 0x57a407889bd0
  at 0x57a407889bd0: data    7 next: 0x57a407889f10
  at 0x57a407889f10: data    8 next: 0

 returns true 


passed   operation ^=

Passed 54 of 54 tests


***************************** Test Name  ******************************

*                      operator&=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { 1-3, 5-8 } & { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a407889d30
  at 0x57a407889d30: data    2 next: 0x57a40788a000
  at 0x57a40788a000: data    3 next: 0x57a40788a140
  at 0x57a40788a140: data    5 next: 0x57a40788a120
  at 0x57a40788a120: data    6 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    7 next: 0x57a407889ad0
  at 0x57a407889ad0: data    8 next: 0

 &= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 55 of 55 tests

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { empty } & { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 &= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889ad0
list contains 7 elements:
  at 0x57a407889ad0: data    1 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    2 next: 0x57a40788a120
  at 0x57a40788a120: data    3 next: 0x57a40788a140
  at 0x57a40788a140: data    5 next: 0x57a40788a000
  at 0x57a40788a000: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a407889cb0
  at 0x57a407889cb0: data    8 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 56 of 56 tests

    ************************ Test Phase *************************
    *      operator&=(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889d30
list contains 7 elements:
  at 0x57a407889d30: data    1 next: 0x57a40788a000
  at 0x57a40788a000: data    2 next: 0x57a40788a140
  at 0x57a40788a140: data    3 next: 0x57a40788a120
  at 0x57a40788a120: data    5 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    6 next: 0x57a407889ad0
  at 0x57a407889ad0: data    7 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    8 next: 0

 &= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889cb0
list contains 3 elements:
  at 0x57a407889cb0: data    3 next: 0x57a40788a410
  at 0x57a40788a410: data    4 next: 0x57a40788a430
  at 0x57a40788a430: data    5 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a140
list contains 2 elements:
  at 0x57a40788a140: data    3 next: 0x57a40788a120
  at 0x57a40788a120: data    5 next: 0

 expecting:        {  3,  5 }
 against received: {  3,  5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

set location test not run, result is too small: 2

passed   operation &=

Passed 57 of 57 tests


***************************** Test Name  ******************************

*                      operator-=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { 1-3, 5-8 } - { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a410
list contains 7 elements:
  at 0x57a40788a410: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    6 next: 0x57a40788a000
  at 0x57a40788a000: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

 -= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a410
list contains 7 elements:
  at 0x57a40788a410: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    6 next: 0x57a40788a000
  at 0x57a40788a000: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a40788a410
  at 0x57a40788a410: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    6 next: 0x57a40788a000
  at 0x57a40788a000: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a40788a410
list contains 7 elements:
  at 0x57a40788a410: data    1 next: 0x57a407889cb0
  at 0x57a407889cb0: data    2 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    6 next: 0x57a40788a000
  at 0x57a40788a000: data    7 next: 0x57a407889d30
  at 0x57a407889d30: data    8 next: 0

 returns true 


passed   operation -=

Passed 58 of 58 tests

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { empty } - { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 -= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a407889d30
list contains 7 elements:
  at 0x57a407889d30: data    1 next: 0x57a40788a000
  at 0x57a40788a000: data    2 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    3 next: 0x57a407889ad0
  at 0x57a407889ad0: data    5 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    6 next: 0x57a407889cb0
  at 0x57a407889cb0: data    7 next: 0x57a40788a410
  at 0x57a40788a410: data    8 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation -=

Passed 59 of 59 tests

    ************************ Test Phase *************************
    *      operator-=(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 7 elements:
  at 0x57a407889cb0: data    1 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    2 next: 0x57a407889ad0
  at 0x57a407889ad0: data    3 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    5 next: 0x57a40788a000
  at 0x57a40788a000: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a40788a6c0
  at 0x57a40788a6c0: data    8 next: 0

 -= 

set contains a list at 0x7ffd4d30b1a0: m_head points to 0x57a40788a410
list contains 3 elements:
  at 0x57a40788a410: data    3 next: 0x57a40788a6e0
  at 0x57a40788a6e0: data    4 next: 0x57a40788a700
  at 0x57a40788a700: data    5 next: 0

yields

set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 5 elements:
  at 0x57a407889cb0: data    1 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    2 next: 0x57a40788a000
  at 0x57a40788a000: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a40788a6c0
  at 0x57a40788a6c0: data    8 next: 0

 expecting:        {  1,  2,  6,  7,  8 }
 against received: {  1,  2,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffd4d30b190 and contained 7 objects 
 list was at address 0x7ffd4d30b190 m_head points to 0x57a407889cb0
  at 0x57a407889cb0: data    1 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    2 next: 0x57a407889ad0
  at 0x57a407889ad0: data    3 next: 0x57a40788a1e0
  at 0x57a40788a1e0: data    5 next: 0x57a40788a000
  at 0x57a40788a000: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a40788a6c0
  at 0x57a40788a6c0: data    8 next: 0

after_set:  
set contains a list at 0x7ffd4d30b190: m_head points to 0x57a407889cb0
list contains 5 elements:
  at 0x57a407889cb0: data    1 next: 0x57a40788a3f0
  at 0x57a40788a3f0: data    2 next: 0x57a40788a000
  at 0x57a40788a000: data    6 next: 0x57a407889d30
  at 0x57a407889d30: data    7 next: 0x57a40788a6c0
  at 0x57a40788a6c0: data    8 next: 0

 returns true 


passed   operation -=

Passed 60 of 60 tests

testMyOrderedSet(): Passed 60 of 60 tests

JoesSetTestBench.cpp done
