/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 28 2025 at 15:15:01



***************************** Test Name  ******************************

*                         Default Constructor                         *

***************************** Test Name  ******************************

passed default constructor produced empty set &0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


***************************** Test Name  ******************************

*                            operator+=(T)                            *

***************************** Test Name  ******************************

 .. added 5 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8cba0
list contains 1 elements:
  at 0x5aa9edc8cba0: data    5 next: 0

 .. added 3 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8cee0
list contains 2 elements:
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0

 .. added 7 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8cee0
list contains 3 elements:
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0

 .. added 4 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8cee0
list contains 4 elements:
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    4 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0

 .. added 6 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8cee0
list contains 5 elements:
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    4 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    6 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0

 .. added 8 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8cee0
list contains 6 elements:
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    4 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    6 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    8 next: 0

 .. added 2 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8da60
list contains 7 elements:
  at 0x5aa9edc8da60: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    4 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    6 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    8 next: 0

 .. added 1 to set produces @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8dde0
list contains 8 elements:
  at 0x5aa9edc8dde0: data    1 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    4 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    6 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    8 next: 0

Test adding stressing inputs
 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0bc90 and contained 0 objects 
 list was at address 0x7ffe72e0bc90 m_head points to 0

after_set:  
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8dde0
list contains 8 elements:
  at 0x5aa9edc8dde0: data    1 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    4 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    5 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    6 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    7 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


***************************** Test Name  ******************************

*                             buildSet()                              *

***************************** Test Name  ******************************

Test buildSet(stressing_inputs)
 expecting:        {  1,  2,  3,  4 }
 against received: {  1,  2,  3,  4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


***************************** Test Name  ******************************

*                             set.clear()                             *

***************************** Test Name  ******************************

buildSet @0x7ffe72e0bc90
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8d750
list contains 8 elements:
  at 0x5aa9edc8d750: data    1 next: 0x5aa9edc8dde0
  at 0x5aa9edc8dde0: data    2 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    5 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    6 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    7 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    8 next: 0
passed after set.clear()set is @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


***************************** Test Name  ******************************

*                             set.reset()                             *

***************************** Test Name  ******************************

buildSet @0x7ffe72e0bc90
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8da60
list contains 8 elements:
  at 0x5aa9edc8da60: data    1 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    5 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    6 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    7 next: 0x5aa9edc8dde0
  at 0x5aa9edc8dde0: data    8 next: 0
passed after set.reset(),
set  @0x7ffe72e0bc90: 
set contains a list at 0x7ffe72e0bc90: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


***************************** Test Name  ******************************

*                          copy constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0bc90 and contained 8 objects 
 list was at address 0x7ffe72e0bc90 m_head points to 0x5aa9edc8dde0
  at 0x5aa9edc8dde0: data    1 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    2 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    5 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    6 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    7 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    8 next: 0

after_set:  @0x7ffe72e0bca0
set contains a list at 0x7ffe72e0bca0: m_head points to 0x5aa9edc8e350
list contains 8 elements:
  at 0x5aa9edc8e350: data    1 next: 0x5aa9edc8e370
  at 0x5aa9edc8e370: data    2 next: 0x5aa9edc8e390
  at 0x5aa9edc8e390: data    3 next: 0x5aa9edc8e3b0
  at 0x5aa9edc8e3b0: data    4 next: 0x5aa9edc8e3d0
  at 0x5aa9edc8e3d0: data    5 next: 0x5aa9edc8e3f0
  at 0x5aa9edc8e3f0: data    6 next: 0x5aa9edc8e410
  at 0x5aa9edc8e410: data    7 next: 0x5aa9edc8e430
  at 0x5aa9edc8e430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed : 
set      @0x7ffe72e0bc90 :
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8dde0
list contains 8 elements:
  at 0x5aa9edc8dde0: data    1 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    2 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    5 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    6 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    7 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    8 next: 0

copy_set @0x7ffe72e0bca0 :
set contains a list at 0x7ffe72e0bca0: m_head points to 0x5aa9edc8e350
list contains 8 elements:
  at 0x5aa9edc8e350: data    1 next: 0x5aa9edc8e370
  at 0x5aa9edc8e370: data    2 next: 0x5aa9edc8e390
  at 0x5aa9edc8e390: data    3 next: 0x5aa9edc8e3b0
  at 0x5aa9edc8e3b0: data    4 next: 0x5aa9edc8e3d0
  at 0x5aa9edc8e3d0: data    5 next: 0x5aa9edc8e3f0
  at 0x5aa9edc8e3f0: data    6 next: 0x5aa9edc8e410
  at 0x5aa9edc8e410: data    7 next: 0x5aa9edc8e430
  at 0x5aa9edc8e430: data    8 next: 0


Passed 6 of 6 tests


***************************** Test Name  ******************************

*                       operator=(MyOrderedSet)                       *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0bc90 and contained 8 objects 
 list was at address 0x7ffe72e0bc90 m_head points to 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    1 next: 0x5aa9edc8e250
  at 0x5aa9edc8e250: data    2 next: 0x5aa9edc8e2f0
  at 0x5aa9edc8e2f0: data    3 next: 0x5aa9edc8e2b0
  at 0x5aa9edc8e2b0: data    4 next: 0x5aa9edc8e310
  at 0x5aa9edc8e310: data    5 next: 0x5aa9edc8e290
  at 0x5aa9edc8e290: data    6 next: 0x5aa9edc8e2d0
  at 0x5aa9edc8e2d0: data    7 next: 0x5aa9edc8e270
  at 0x5aa9edc8e270: data    8 next: 0

after_set:  @0x7ffe72e0bcb0
set contains a list at 0x7ffe72e0bcb0: m_head points to 0x5aa9edc8e450
list contains 8 elements:
  at 0x5aa9edc8e450: data    1 next: 0x5aa9edc8e470
  at 0x5aa9edc8e470: data    2 next: 0x5aa9edc8e490
  at 0x5aa9edc8e490: data    3 next: 0x5aa9edc8e4b0
  at 0x5aa9edc8e4b0: data    4 next: 0x5aa9edc8e4d0
  at 0x5aa9edc8e4d0: data    5 next: 0x5aa9edc8e4f0
  at 0x5aa9edc8e4f0: data    6 next: 0x5aa9edc8e510
  at 0x5aa9edc8e510: data    7 next: 0x5aa9edc8e530
  at 0x5aa9edc8e530: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

set               @0x7ffe72e0bc90 :
set contains a list at 0x7ffe72e0bc90: m_head points to 0x5aa9edc8d750
list contains 8 elements:
  at 0x5aa9edc8d750: data    1 next: 0x5aa9edc8e250
  at 0x5aa9edc8e250: data    2 next: 0x5aa9edc8e2f0
  at 0x5aa9edc8e2f0: data    3 next: 0x5aa9edc8e2b0
  at 0x5aa9edc8e2b0: data    4 next: 0x5aa9edc8e310
  at 0x5aa9edc8e310: data    5 next: 0x5aa9edc8e290
  at 0x5aa9edc8e290: data    6 next: 0x5aa9edc8e2d0
  at 0x5aa9edc8e2d0: data    7 next: 0x5aa9edc8e270
  at 0x5aa9edc8e270: data    8 next: 0

copy assigned_set @0x7ffe72e0bcb0 :
set contains a list at 0x7ffe72e0bca0: m_head points to 0x5aa9edc8e350
list contains 8 elements:
  at 0x5aa9edc8e350: data    1 next: 0x5aa9edc8e370
  at 0x5aa9edc8e370: data    2 next: 0x5aa9edc8e390
  at 0x5aa9edc8e390: data    3 next: 0x5aa9edc8e3b0
  at 0x5aa9edc8e3b0: data    4 next: 0x5aa9edc8e3d0
  at 0x5aa9edc8e3d0: data    5 next: 0x5aa9edc8e3f0
  at 0x5aa9edc8e3f0: data    6 next: 0x5aa9edc8e410
  at 0x5aa9edc8e410: data    7 next: 0x5aa9edc8e430
  at 0x5aa9edc8e430: data    8 next: 0

passed 

Passed 7 of 7 tests


***************************** Test Name  ******************************

*                          move constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0bc90 and contained 8 objects 
 list was at address 0x7ffe72e0bc90 m_head points to 0x5aa9edc8e270
  at 0x5aa9edc8e270: data    1 next: 0x5aa9edc8dde0
  at 0x5aa9edc8dde0: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    5 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    6 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    7 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0bcc0: m_head points to 0x5aa9edc8e270
list contains 8 elements:
  at 0x5aa9edc8e270: data    1 next: 0x5aa9edc8dde0
  at 0x5aa9edc8dde0: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    5 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    6 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    7 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    8 next: 0

 returns true 

passed : 
set      @0x7ffe72e0bc90 :
set contains a list at 0x7ffe72e0bc90: m_head points to 0
list contains 0 elements:
  empty list

move_set @0x7ffe72e0bcc0 :
set contains a list at 0x7ffe72e0bcc0: m_head points to 0x5aa9edc8e270
list contains 8 elements:
  at 0x5aa9edc8e270: data    1 next: 0x5aa9edc8dde0
  at 0x5aa9edc8dde0: data    2 next: 0x5aa9edc8cee0
  at 0x5aa9edc8cee0: data    3 next: 0x5aa9edc8d090
  at 0x5aa9edc8d090: data    4 next: 0x5aa9edc8d4b0
  at 0x5aa9edc8d4b0: data    5 next: 0x5aa9edc8cba0
  at 0x5aa9edc8cba0: data    6 next: 0x5aa9edc8d270
  at 0x5aa9edc8d270: data    7 next: 0x5aa9edc8da60
  at 0x5aa9edc8da60: data    8 next: 0


Passed 8 of 8 tests


***************************** Test Name  ******************************

*                    operator=(move(MyOrderedSet))                    *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0bc90 and contained 8 objects 
 list was at address 0x7ffe72e0bc90 m_head points to 0x5aa9edc8e330
  at 0x5aa9edc8e330: data    1 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    2 next: 0x5aa9edc8e290
  at 0x5aa9edc8e290: data    3 next: 0x5aa9edc8e2b0
  at 0x5aa9edc8e2b0: data    4 next: 0x5aa9edc8e2d0
  at 0x5aa9edc8e2d0: data    5 next: 0x5aa9edc8e2f0
  at 0x5aa9edc8e2f0: data    6 next: 0x5aa9edc8e310
  at 0x5aa9edc8e310: data    7 next: 0x5aa9edc8e250
  at 0x5aa9edc8e250: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0bcd0: m_head points to 0x5aa9edc8e330
list contains 8 elements:
  at 0x5aa9edc8e330: data    1 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    2 next: 0x5aa9edc8e290
  at 0x5aa9edc8e290: data    3 next: 0x5aa9edc8e2b0
  at 0x5aa9edc8e2b0: data    4 next: 0x5aa9edc8e2d0
  at 0x5aa9edc8e2d0: data    5 next: 0x5aa9edc8e2f0
  at 0x5aa9edc8e2f0: data    6 next: 0x5aa9edc8e310
  at 0x5aa9edc8e310: data    7 next: 0x5aa9edc8e250
  at 0x5aa9edc8e250: data    8 next: 0

 returns true 

set               @0x7ffe72e0bc90 :
set contains a list at 0x7ffe72e0bc90: m_head points to 0
list contains 0 elements:
  empty list

move_assigned_set @0x7ffe72e0bcd0 :
set contains a list at 0x7ffe72e0bcd0: m_head points to 0x5aa9edc8e330
list contains 8 elements:
  at 0x5aa9edc8e330: data    1 next: 0x5aa9edc8d750
  at 0x5aa9edc8d750: data    2 next: 0x5aa9edc8e290
  at 0x5aa9edc8e290: data    3 next: 0x5aa9edc8e2b0
  at 0x5aa9edc8e2b0: data    4 next: 0x5aa9edc8e2d0
  at 0x5aa9edc8e2d0: data    5 next: 0x5aa9edc8e2f0
  at 0x5aa9edc8e2f0: data    6 next: 0x5aa9edc8e310
  at 0x5aa9edc8e310: data    7 next: 0x5aa9edc8e250
  at 0x5aa9edc8e250: data    8 next: 0

passed 

Passed 9 of 9 tests


***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8e610
list contains 1 elements:
  at 0x5aa9edc8e610: data    5 next: 0
set + 3 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8e590
list contains 2 elements:
  at 0x5aa9edc8e590: data    3 next: 0x5aa9edc8e5b0
  at 0x5aa9edc8e5b0: data    5 next: 0
set + 7 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8e630
list contains 3 elements:
  at 0x5aa9edc8e630: data    3 next: 0x5aa9edc8e6e0
  at 0x5aa9edc8e6e0: data    5 next: 0x5aa9edc8e700
  at 0x5aa9edc8e700: data    7 next: 0
set + 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8e760
list contains 4 elements:
  at 0x5aa9edc8e760: data    3 next: 0x5aa9edc8e7c0
  at 0x5aa9edc8e7c0: data    4 next: 0x5aa9edc8e780
  at 0x5aa9edc8e780: data    5 next: 0x5aa9edc8e7a0
  at 0x5aa9edc8e7a0: data    7 next: 0
set + 6 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8e830
list contains 5 elements:
  at 0x5aa9edc8e830: data    3 next: 0x5aa9edc8e850
  at 0x5aa9edc8e850: data    4 next: 0x5aa9edc8e870
  at 0x5aa9edc8e870: data    5 next: 0x5aa9edc8e8b0
  at 0x5aa9edc8e8b0: data    6 next: 0x5aa9edc8e890
  at 0x5aa9edc8e890: data    7 next: 0
set + 8 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8e950
list contains 6 elements:
  at 0x5aa9edc8e950: data    3 next: 0x5aa9edc8e970
  at 0x5aa9edc8e970: data    4 next: 0x5aa9edc8e990
  at 0x5aa9edc8e990: data    5 next: 0x5aa9edc8e9b0
  at 0x5aa9edc8e9b0: data    6 next: 0x5aa9edc8e9d0
  at 0x5aa9edc8e9d0: data    7 next: 0x5aa9edc8e9f0
  at 0x5aa9edc8e9f0: data    8 next: 0
set + 2 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8eb20
list contains 7 elements:
  at 0x5aa9edc8eb20: data    2 next: 0x5aa9edc8ea60
  at 0x5aa9edc8ea60: data    3 next: 0x5aa9edc8ea80
  at 0x5aa9edc8ea80: data    4 next: 0x5aa9edc8eaa0
  at 0x5aa9edc8eaa0: data    5 next: 0x5aa9edc8eac0
  at 0x5aa9edc8eac0: data    6 next: 0x5aa9edc8eae0
  at 0x5aa9edc8eae0: data    7 next: 0x5aa9edc8eb00
  at 0x5aa9edc8eb00: data    8 next: 0
set + 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8ecb0
list contains 8 elements:
  at 0x5aa9edc8ecb0: data    1 next: 0x5aa9edc8ebd0
  at 0x5aa9edc8ebd0: data    2 next: 0x5aa9edc8ebf0
  at 0x5aa9edc8ebf0: data    3 next: 0x5aa9edc8ec10
  at 0x5aa9edc8ec10: data    4 next: 0x5aa9edc8ec30
  at 0x5aa9edc8ec30: data    5 next: 0x5aa9edc8ec50
  at 0x5aa9edc8ec50: data    6 next: 0x5aa9edc8ec70
  at 0x5aa9edc8ec70: data    7 next: 0x5aa9edc8ec90
  at 0x5aa9edc8ec90: data    8 next: 0
 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba60 and contained 7 objects 
 list was at address 0x7ffe72e0ba60 m_head points to 0x5aa9edc8eb20
  at 0x5aa9edc8eb20: data    2 next: 0x5aa9edc8ea60
  at 0x5aa9edc8ea60: data    3 next: 0x5aa9edc8ea80
  at 0x5aa9edc8ea80: data    4 next: 0x5aa9edc8eaa0
  at 0x5aa9edc8eaa0: data    5 next: 0x5aa9edc8eac0
  at 0x5aa9edc8eac0: data    6 next: 0x5aa9edc8eae0
  at 0x5aa9edc8eae0: data    7 next: 0x5aa9edc8eb00
  at 0x5aa9edc8eb00: data    8 next: 0

after_set:  @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8ecb0
list contains 8 elements:
  at 0x5aa9edc8ecb0: data    1 next: 0x5aa9edc8ebd0
  at 0x5aa9edc8ebd0: data    2 next: 0x5aa9edc8ebf0
  at 0x5aa9edc8ebf0: data    3 next: 0x5aa9edc8ec10
  at 0x5aa9edc8ec10: data    4 next: 0x5aa9edc8ec30
  at 0x5aa9edc8ec30: data    5 next: 0x5aa9edc8ec50
  at 0x5aa9edc8ec50: data    6 next: 0x5aa9edc8ec70
  at 0x5aa9edc8ec70: data    7 next: 0x5aa9edc8ec90
  at 0x5aa9edc8ec90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8eb00
list contains 1 elements:
  at 0x5aa9edc8eb00: data    1 next: 0
set + 2 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8eaa0
list contains 2 elements:
  at 0x5aa9edc8eaa0: data    1 next: 0x5aa9edc8ea80
  at 0x5aa9edc8ea80: data    2 next: 0
set + 3 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8ec90
list contains 3 elements:
  at 0x5aa9edc8ec90: data    1 next: 0x5aa9edc8ecb0
  at 0x5aa9edc8ecb0: data    2 next: 0x5aa9edc8ebd0
  at 0x5aa9edc8ebd0: data    3 next: 0
set + 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8ec30
list contains 4 elements:
  at 0x5aa9edc8ec30: data    1 next: 0x5aa9edc8ec50
  at 0x5aa9edc8ec50: data    2 next: 0x5aa9edc8ec70
  at 0x5aa9edc8ec70: data    3 next: 0x5aa9edc8edd0
  at 0x5aa9edc8edd0: data    4 next: 0
set + 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8ee70
list contains 4 elements:
  at 0x5aa9edc8ee70: data    1 next: 0x5aa9edc8ee90
  at 0x5aa9edc8ee90: data    2 next: 0x5aa9edc8eeb0
  at 0x5aa9edc8eeb0: data    3 next: 0x5aa9edc8eed0
  at 0x5aa9edc8eed0: data    4 next: 0
set + 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8ef50
list contains 4 elements:
  at 0x5aa9edc8ef50: data    1 next: 0x5aa9edc8ef70
  at 0x5aa9edc8ef70: data    2 next: 0x5aa9edc8ef90
  at 0x5aa9edc8ef90: data    3 next: 0x5aa9edc8efb0
  at 0x5aa9edc8efb0: data    4 next: 0
set + 3 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f030
list contains 4 elements:
  at 0x5aa9edc8f030: data    1 next: 0x5aa9edc8f050
  at 0x5aa9edc8f050: data    2 next: 0x5aa9edc8f070
  at 0x5aa9edc8f070: data    3 next: 0x5aa9edc8f090
  at 0x5aa9edc8f090: data    4 next: 0
set + 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f110
list contains 4 elements:
  at 0x5aa9edc8f110: data    1 next: 0x5aa9edc8f130
  at 0x5aa9edc8f130: data    2 next: 0x5aa9edc8f150
  at 0x5aa9edc8f150: data    3 next: 0x5aa9edc8f170
  at 0x5aa9edc8f170: data    4 next: 0
 expecting:        {  1,  2,  3,  4 }
 against received: {  1,  2,  3,  4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba60 and contained 4 objects 
 list was at address 0x7ffe72e0ba60 m_head points to 0x5aa9edc8f030
  at 0x5aa9edc8f030: data    1 next: 0x5aa9edc8f050
  at 0x5aa9edc8f050: data    2 next: 0x5aa9edc8f070
  at 0x5aa9edc8f070: data    3 next: 0x5aa9edc8f090
  at 0x5aa9edc8f090: data    4 next: 0

after_set:  @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f110
list contains 4 elements:
  at 0x5aa9edc8f110: data    1 next: 0x5aa9edc8f130
  at 0x5aa9edc8f130: data    2 next: 0x5aa9edc8f150
  at 0x5aa9edc8f150: data    3 next: 0x5aa9edc8f170
  at 0x5aa9edc8f170: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 11 of 11 tests


***************************** Test Name  ******************************

*                         operator-(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -
buildSet @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f150
list contains 7 elements:
  at 0x5aa9edc8f150: data    1 next: 0x5aa9edc8f130
  at 0x5aa9edc8f130: data    2 next: 0x5aa9edc8f110
  at 0x5aa9edc8f110: data    3 next: 0x5aa9edc8f090
  at 0x5aa9edc8f090: data    4 next: 0x5aa9edc8f070
  at 0x5aa9edc8f070: data    5 next: 0x5aa9edc8f050
  at 0x5aa9edc8f050: data    6 next: 0x5aa9edc8f030
  at 0x5aa9edc8f030: data    8 next: 0
set - 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f2a0
list contains 6 elements:
  at 0x5aa9edc8f2a0: data    2 next: 0x5aa9edc8f2c0
  at 0x5aa9edc8f2c0: data    3 next: 0x5aa9edc8f2e0
  at 0x5aa9edc8f2e0: data    4 next: 0x5aa9edc8f300
  at 0x5aa9edc8f300: data    5 next: 0x5aa9edc8f320
  at 0x5aa9edc8f320: data    6 next: 0x5aa9edc8f340
  at 0x5aa9edc8f340: data    8 next: 0
set - 2 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f030
list contains 5 elements:
  at 0x5aa9edc8f030: data    3 next: 0x5aa9edc8f3d0
  at 0x5aa9edc8f3d0: data    4 next: 0x5aa9edc8f3f0
  at 0x5aa9edc8f3f0: data    5 next: 0x5aa9edc8f410
  at 0x5aa9edc8f410: data    6 next: 0x5aa9edc8f430
  at 0x5aa9edc8f430: data    8 next: 0
set - 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f2a0
list contains 4 elements:
  at 0x5aa9edc8f2a0: data    3 next: 0x5aa9edc8f4f0
  at 0x5aa9edc8f4f0: data    5 next: 0x5aa9edc8f510
  at 0x5aa9edc8f510: data    6 next: 0x5aa9edc8f530
  at 0x5aa9edc8f530: data    8 next: 0
set - 5 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f030
list contains 3 elements:
  at 0x5aa9edc8f030: data    3 next: 0x5aa9edc8f5b0
  at 0x5aa9edc8f5b0: data    6 next: 0x5aa9edc8f5d0
  at 0x5aa9edc8f5d0: data    8 next: 0
set - 7 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f280
list contains 3 elements:
  at 0x5aa9edc8f280: data    3 next: 0x5aa9edc8f620
  at 0x5aa9edc8f620: data    6 next: 0x5aa9edc8f640
  at 0x5aa9edc8f640: data    8 next: 0
set - 8 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f6b0
list contains 2 elements:
  at 0x5aa9edc8f6b0: data    3 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    6 next: 0
 expecting:        {  3,  6 }
 against received: {  3,  6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 12 of 12 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f6d0
list contains 1 elements:
  at 0x5aa9edc8f6d0: data    5 next: 0
set += 3 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f620
list contains 2 elements:
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0
set += 7 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f620
list contains 3 elements:
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0
set += 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f620
list contains 4 elements:
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0
set += 6 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f620
list contains 5 elements:
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f990
  at 0x5aa9edc8f990: data    6 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0
set += 8 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f620
list contains 6 elements:
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f990
  at 0x5aa9edc8f990: data    6 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    8 next: 0
set += 2 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8fbc0
list contains 7 elements:
  at 0x5aa9edc8fbc0: data    2 next: 0x5aa9edc8f620
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f990
  at 0x5aa9edc8f990: data    6 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    8 next: 0
set += 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8fd30
list contains 8 elements:
  at 0x5aa9edc8fd30: data    1 next: 0x5aa9edc8fbc0
  at 0x5aa9edc8fbc0: data    2 next: 0x5aa9edc8f620
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f990
  at 0x5aa9edc8f990: data    6 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    8 next: 0
 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba60 and contained 7 objects 
 list was at address 0x7ffe72e0ba60 m_head points to 0x5aa9edc8fbc0
  at 0x5aa9edc8fbc0: data    2 next: 0x5aa9edc8f620
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f990
  at 0x5aa9edc8f990: data    6 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8fd30
list contains 8 elements:
  at 0x5aa9edc8fd30: data    1 next: 0x5aa9edc8fbc0
  at 0x5aa9edc8fbc0: data    2 next: 0x5aa9edc8f620
  at 0x5aa9edc8f620: data    3 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    4 next: 0x5aa9edc8f6d0
  at 0x5aa9edc8f6d0: data    5 next: 0x5aa9edc8f990
  at 0x5aa9edc8f990: data    6 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    7 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    8 next: 0

 returns true 

passed   operation +=

Passed 13 of 13 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 1 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0
set += 2 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 2 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0
set += 3 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 3 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0
set += 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 4 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0
set += 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 4 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0
set += 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 4 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0
set += 3 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 4 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0
set += 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 4 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0
 expecting:        {  1,  2,  3,  4 }
 against received: {  1,  2,  3,  4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba60 and contained 4 objects 
 list was at address 0x7ffe72e0ba60 m_head points to 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f7c0
list contains 4 elements:
  at 0x5aa9edc8f7c0: data    1 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    2 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    3 next: 0x5aa9edc8fed0
  at 0x5aa9edc8fed0: data    4 next: 0

 returns true 

passed   operation +=

Passed 14 of 14 tests


***************************** Test Name  ******************************

*                        operator-=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -=
buildSet @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8fed0
list contains 8 elements:
  at 0x5aa9edc8fed0: data    1 next: 0x5aa9edc8fab0
  at 0x5aa9edc8fab0: data    2 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    4 next: 0x5aa9edc902a0
  at 0x5aa9edc902a0: data    5 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0x5aa9edc902e0
  at 0x5aa9edc902e0: data    7 next: 0x5aa9edc90300
  at 0x5aa9edc90300: data    8 next: 0
set -= 1 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8fab0
list contains 7 elements:
  at 0x5aa9edc8fab0: data    2 next: 0x5aa9edc8f890
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    4 next: 0x5aa9edc902a0
  at 0x5aa9edc902a0: data    5 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0x5aa9edc902e0
  at 0x5aa9edc902e0: data    7 next: 0x5aa9edc90300
  at 0x5aa9edc90300: data    8 next: 0
set -= 2 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f890
list contains 6 elements:
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc8f7c0
  at 0x5aa9edc8f7c0: data    4 next: 0x5aa9edc902a0
  at 0x5aa9edc902a0: data    5 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0x5aa9edc902e0
  at 0x5aa9edc902e0: data    7 next: 0x5aa9edc90300
  at 0x5aa9edc90300: data    8 next: 0
set -= 4 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f890
list contains 5 elements:
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc902a0
  at 0x5aa9edc902a0: data    5 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0x5aa9edc902e0
  at 0x5aa9edc902e0: data    7 next: 0x5aa9edc90300
  at 0x5aa9edc90300: data    8 next: 0
set -= 5 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f890
list contains 4 elements:
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0x5aa9edc902e0
  at 0x5aa9edc902e0: data    7 next: 0x5aa9edc90300
  at 0x5aa9edc90300: data    8 next: 0
set -= 7 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f890
list contains 3 elements:
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0x5aa9edc90300
  at 0x5aa9edc90300: data    8 next: 0
set -= 8 results in set @0x7ffe72e0ba60
set contains a list at 0x7ffe72e0ba60: m_head points to 0x5aa9edc8f890
list contains 2 elements:
  at 0x5aa9edc8f890: data    3 next: 0x5aa9edc902c0
  at 0x5aa9edc902c0: data    6 next: 0
 expecting:        {  3,  6 }
 against received: {  3,  6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 15 of 15 tests


***************************** Test Name  ******************************

*                            .isMember(T)                             *

***************************** Test Name  ******************************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 16 of 16 tests


***************************** Test Name  ******************************

*                        relational operators                         *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *              { empty }.operator==({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } == { <empty list> } returns true 

    ************************ Test Phase *************************
    *              { empty }.operator!=({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } != { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator==({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator!=({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != { <empty list> } returns true 

    ************************ Test Phase *************************
    *               { empty }.operator==({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *               { empty }.operator!=({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } != {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 

    ************************ Test Phase *************************
    *                { 5-8 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 5-8 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 

Passed 30 of 30 tests

passed : relational operators == !=

Passed 30 of 30 tests


***************************** Test Name  ******************************

*                       operator+(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90990
list contains 7 elements:
  at 0x5aa9edc90990: data    1 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    2 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    3 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    5 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    6 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    7 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90990
  at 0x5aa9edc90990: data    1 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    2 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    3 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    5 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    6 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    7 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90b10
list contains 7 elements:
  at 0x5aa9edc90b10: data    1 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    2 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    3 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    7 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 0 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90b10
list contains 7 elements:
  at 0x5aa9edc90b10: data    1 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    2 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    3 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    7 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 31 of 31 tests

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90af0
list contains 7 elements:
  at 0x5aa9edc90af0: data    1 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    2 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    3 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    5 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    6 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    7 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 0 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90a10
list contains 7 elements:
  at 0x5aa9edc90a10: data    1 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    2 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    3 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    5 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    6 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    7 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 7 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    1 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    2 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    3 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    5 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    6 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    7 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90a10
list contains 7 elements:
  at 0x5aa9edc90a10: data    1 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    2 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    3 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    5 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    6 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    7 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 32 of 32 tests

    ************************ Test Phase *************************
    *      operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc909f0
list contains 7 elements:
  at 0x5aa9edc909f0: data    1 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    2 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    3 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    5 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc909b0
list contains 3 elements:
  at 0x5aa9edc909b0: data    3 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    4 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    5 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    1 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    2 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    3 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    5 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90c90
list contains 8 elements:
  at 0x5aa9edc90c90: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    3 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    4 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    5 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 3 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    3 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    4 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    5 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90c90
list contains 8 elements:
  at 0x5aa9edc90c90: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    3 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    4 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    5 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 33 of 33 tests


***************************** Test Name  ******************************

*                       operator|(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90a10
list contains 7 elements:
  at 0x5aa9edc90a10: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    5 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    6 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    7 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    5 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    6 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    7 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90bd0
list contains 7 elements:
  at 0x5aa9edc90bd0: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    3 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    5 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    6 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 0 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90bd0
list contains 7 elements:
  at 0x5aa9edc90bd0: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    3 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    5 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    6 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 34 of 34 tests

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90950
list contains 7 elements:
  at 0x5aa9edc90950: data    1 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    2 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    3 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    5 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    6 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    7 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 0 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90ab0
list contains 7 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    2 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    3 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    5 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    6 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    7 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 7 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc90950
  at 0x5aa9edc90950: data    1 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    2 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    3 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    5 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    6 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    7 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90ab0
list contains 7 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    2 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    3 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    5 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    6 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    7 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 35 of 35 tests

    ************************ Test Phase *************************
    *      operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90a50
list contains 7 elements:
  at 0x5aa9edc90a50: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    3 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    5 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    6 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    7 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc909b0
list contains 3 elements:
  at 0x5aa9edc909b0: data    3 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    4 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    3 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    5 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    6 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    7 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90990
list contains 8 elements:
  at 0x5aa9edc90990: data    1 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    4 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    5 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    6 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    7 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 3 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    3 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    4 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90990
list contains 8 elements:
  at 0x5aa9edc90990: data    1 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    4 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    5 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    6 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    7 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 36 of 36 tests


***************************** Test Name  ******************************

*                       operator^(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90a70
list contains 7 elements:
  at 0x5aa9edc90a70: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    3 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    5 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    6 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    7 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    3 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    5 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    6 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    7 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90d70
list contains 7 elements:
  at 0x5aa9edc90d70: data    1 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    6 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    7 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 0 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90d70
list contains 7 elements:
  at 0x5aa9edc90d70: data    1 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    6 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    7 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 37 of 37 tests

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90a10
list contains 7 elements:
  at 0x5aa9edc90a10: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    6 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    7 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 0 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc909f0
list contains 7 elements:
  at 0x5aa9edc909f0: data    1 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    2 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    6 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 7 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    6 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    7 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc909f0
list contains 7 elements:
  at 0x5aa9edc909f0: data    1 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    2 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    6 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 38 of 38 tests

    ************************ Test Phase *************************
    *      operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90d50
list contains 7 elements:
  at 0x5aa9edc90d50: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    3 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    5 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    6 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    7 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc909b0
list contains 3 elements:
  at 0x5aa9edc909b0: data    3 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    4 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    5 next: 0

 expecting:        {  1,  2,  4,  6,  7,  8 }
 against received: {  1,  2,  4,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    3 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    5 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    6 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    7 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90ad0
list contains 6 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    2 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    4 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    6 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    7 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 3 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    3 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    4 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    5 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90ad0
list contains 6 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    2 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    4 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    6 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    7 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 39 of 39 tests


***************************** Test Name  ******************************

*                       operator&(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90bb0
list contains 7 elements:
  at 0x5aa9edc90bb0: data    1 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    2 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    3 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    5 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    6 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    7 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 40 of 40 tests

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90b50
list contains 7 elements:
  at 0x5aa9edc90b50: data    1 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    2 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    3 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    5 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    6 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    7 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    8 next: 0

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 41 of 41 tests

    ************************ Test Phase *************************
    *      operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90a50
list contains 7 elements:
  at 0x5aa9edc90a50: data    1 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    2 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    3 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    5 next: 0x5aa9edc909d0
  at 0x5aa9edc909d0: data    6 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    7 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90c90
list contains 3 elements:
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    4 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    5 next: 0

 expecting:        {  3,  5 }
 against received: {  3,  5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 42 of 42 tests


***************************** Test Name  ******************************

*                       operator-(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90a70
list contains 7 elements:
  at 0x5aa9edc90a70: data    1 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    2 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    3 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    5 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    6 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    1 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    2 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    3 next: 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    5 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    6 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90990
list contains 7 elements:
  at 0x5aa9edc90990: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    3 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    5 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    6 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    7 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 0 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90990
list contains 7 elements:
  at 0x5aa9edc90990: data    1 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    2 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    3 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    5 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    6 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    7 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 43 of 43 tests

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90cf0
list contains 7 elements:
  at 0x5aa9edc90cf0: data    1 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    5 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    6 next: 0x5aa9edc909b0
  at 0x5aa9edc909b0: data    7 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    8 next: 0

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 44 of 44 tests

    ************************ Test Phase *************************
    *      operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffe72e0ba10: m_head points to 0x5aa9edc90a30
list contains 7 elements:
  at 0x5aa9edc90a30: data    1 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    2 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    3 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    5 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffe72e0ba20: m_head points to 0x5aa9edc90c90
list contains 3 elements:
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    4 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    5 next: 0

 expecting:        {  1,  2,  6,  7,  8 }
 against received: {  1,  2,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba10 and contained 7 objects 
 list was at address 0x7ffe72e0ba10 m_head points to 0x5aa9edc90a30
  at 0x5aa9edc90a30: data    1 next: 0x5aa9edc90cd0
  at 0x5aa9edc90cd0: data    2 next: 0x5aa9edc90af0
  at 0x5aa9edc90af0: data    3 next: 0x5aa9edc90a70
  at 0x5aa9edc90a70: data    5 next: 0x5aa9edc90a90
  at 0x5aa9edc90a90: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc90b30
  at 0x5aa9edc90b30: data    8 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90d10
list contains 5 elements:
  at 0x5aa9edc90d10: data    1 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    2 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    6 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    7 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba20 and contained 3 objects 
 list was at address 0x7ffe72e0ba20 m_head points to 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    4 next: 0x5aa9edc90cf0
  at 0x5aa9edc90cf0: data    5 next: 0

after_set:  @0x7ffe72e0ba30
set contains a list at 0x7ffe72e0ba30: m_head points to 0x5aa9edc90d10
list contains 5 elements:
  at 0x5aa9edc90d10: data    1 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    2 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    6 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    7 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 45 of 45 tests


***************************** Test Name  ******************************

*                      operator+=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ab0
list contains 7 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

 += 

set contains a list at 0x7ffe72e0ba80: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ab0
list contains 7 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ab0
list contains 7 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90ad0
list contains 7 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    2 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    3 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    5 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    6 next: 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    2 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    3 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    5 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    6 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    7 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 0 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d10
  at 0x5aa9edc90d10: data    2 next: 0x5aa9edc90970
  at 0x5aa9edc90970: data    3 next: 0x5aa9edc90d50
  at 0x5aa9edc90d50: data    5 next: 0x5aa9edc90a10
  at 0x5aa9edc90a10: data    6 next: 0x5aa9edc90b10
  at 0x5aa9edc90b10: data    7 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 47 of 47 tests

    ************************ Test Phase *************************
    *      operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ab0
list contains 7 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    8 next: 0

 += 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90c90
list contains 3 elements:
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    4 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    5 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ab0
list contains 8 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    4 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    8 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc90ab0
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ab0
list contains 8 elements:
  at 0x5aa9edc90ab0: data    1 next: 0x5aa9edc90b50
  at 0x5aa9edc90b50: data    2 next: 0x5aa9edc90a50
  at 0x5aa9edc90a50: data    3 next: 0x5aa9edc90d70
  at 0x5aa9edc90d70: data    4 next: 0x5aa9edc90950
  at 0x5aa9edc90950: data    5 next: 0x5aa9edc90b90
  at 0x5aa9edc90b90: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc909f0
  at 0x5aa9edc909f0: data    8 next: 0

 returns true 


passed   operation +=

Passed 48 of 48 tests


***************************** Test Name  ******************************

*                      operator|=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    5 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    6 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    7 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    8 next: 0

 |= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    5 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    6 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    7 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    5 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    6 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    7 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    3 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    5 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    6 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    7 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90b70
list contains 7 elements:
  at 0x5aa9edc90b70: data    1 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    2 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    6 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    7 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    8 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90bd0
list contains 7 elements:
  at 0x5aa9edc90bd0: data    1 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    2 next: 0x5aa9edc90e90
  at 0x5aa9edc90e90: data    3 next: 0x5aa9edc90eb0
  at 0x5aa9edc90eb0: data    5 next: 0x5aa9edc90ed0
  at 0x5aa9edc90ed0: data    6 next: 0x5aa9edc90ef0
  at 0x5aa9edc90ef0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 0 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90bd0
list contains 7 elements:
  at 0x5aa9edc90bd0: data    1 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    2 next: 0x5aa9edc90e90
  at 0x5aa9edc90e90: data    3 next: 0x5aa9edc90eb0
  at 0x5aa9edc90eb0: data    5 next: 0x5aa9edc90ed0
  at 0x5aa9edc90ed0: data    6 next: 0x5aa9edc90ef0
  at 0x5aa9edc90ef0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 50 of 50 tests

    ************************ Test Phase *************************
    *      operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ad0
list contains 7 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    6 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    7 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    8 next: 0

 |= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90f10
list contains 3 elements:
  at 0x5aa9edc90f10: data    3 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    4 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    5 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ad0
list contains 8 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    3 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    4 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    6 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    7 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    8 next: 0

 expecting:        {  1,  2,  3,  4,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  4,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    3 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    6 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    7 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90ad0
list contains 8 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    3 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    4 next: 0x5aa9edc90c90
  at 0x5aa9edc90c90: data    5 next: 0x5aa9edc90bb0
  at 0x5aa9edc90bb0: data    6 next: 0x5aa9edc90990
  at 0x5aa9edc90990: data    7 next: 0x5aa9edc90b70
  at 0x5aa9edc90b70: data    8 next: 0

 returns true 


passed   operation |=

Passed 51 of 51 tests


***************************** Test Name  ******************************

*                      operator^=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91000
list contains 7 elements:
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 ^= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91000
list contains 7 elements:
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc91000
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91000
list contains 7 elements:
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 returns true 


passed   operation ^=

Passed 52 of 52 tests

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { empty } ^ { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 ^= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90f10
list contains 7 elements:
  at 0x5aa9edc90f10: data    1 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    2 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    8 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91120
list contains 7 elements:
  at 0x5aa9edc91120: data    1 next: 0x5aa9edc91140
  at 0x5aa9edc91140: data    2 next: 0x5aa9edc91160
  at 0x5aa9edc91160: data    3 next: 0x5aa9edc91180
  at 0x5aa9edc91180: data    5 next: 0x5aa9edc911a0
  at 0x5aa9edc911a0: data    6 next: 0x5aa9edc911c0
  at 0x5aa9edc911c0: data    7 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 0 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91120
list contains 7 elements:
  at 0x5aa9edc91120: data    1 next: 0x5aa9edc91140
  at 0x5aa9edc91140: data    2 next: 0x5aa9edc91160
  at 0x5aa9edc91160: data    3 next: 0x5aa9edc91180
  at 0x5aa9edc91180: data    5 next: 0x5aa9edc911a0
  at 0x5aa9edc911a0: data    6 next: 0x5aa9edc911c0
  at 0x5aa9edc911c0: data    7 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    8 next: 0

 returns true b/c before_set was empty


passed   operation ^=

Passed 53 of 53 tests

    ************************ Test Phase *************************
    *      operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91000
list contains 7 elements:
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 ^= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc911e0
list contains 3 elements:
  at 0x5aa9edc911e0: data    3 next: 0x5aa9edc91120
  at 0x5aa9edc91120: data    4 next: 0x5aa9edc91140
  at 0x5aa9edc91140: data    5 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91000
list contains 6 elements:
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    4 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 expecting:        {  1,  2,  4,  6,  7,  8 }
 against received: {  1,  2,  4,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc91000
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91000
list contains 6 elements:
  at 0x5aa9edc91000: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    4 next: 0x5aa9edc90e70
  at 0x5aa9edc90e70: data    6 next: 0x5aa9edc90bd0
  at 0x5aa9edc90bd0: data    7 next: 0x5aa9edc90f10
  at 0x5aa9edc90f10: data    8 next: 0

 returns true 


passed   operation ^=

Passed 54 of 54 tests


***************************** Test Name  ******************************

*                      operator&=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { 1-3, 5-8 } & { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    2 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    3 next: 0x5aa9edc91140
  at 0x5aa9edc91140: data    5 next: 0x5aa9edc91120
  at 0x5aa9edc91120: data    6 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    7 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    8 next: 0

 &= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 55 of 55 tests

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { empty } & { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 &= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90ad0
list contains 7 elements:
  at 0x5aa9edc90ad0: data    1 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    2 next: 0x5aa9edc91120
  at 0x5aa9edc91120: data    3 next: 0x5aa9edc91140
  at 0x5aa9edc91140: data    5 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    8 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 56 of 56 tests

    ************************ Test Phase *************************
    *      operator&=(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90d30
list contains 7 elements:
  at 0x5aa9edc90d30: data    1 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    2 next: 0x5aa9edc91140
  at 0x5aa9edc91140: data    3 next: 0x5aa9edc91120
  at 0x5aa9edc91120: data    5 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    6 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    7 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    8 next: 0

 &= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90cb0
list contains 3 elements:
  at 0x5aa9edc90cb0: data    3 next: 0x5aa9edc91410
  at 0x5aa9edc91410: data    4 next: 0x5aa9edc91430
  at 0x5aa9edc91430: data    5 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91140
list contains 2 elements:
  at 0x5aa9edc91140: data    3 next: 0x5aa9edc91120
  at 0x5aa9edc91120: data    5 next: 0

 expecting:        {  3,  5 }
 against received: {  3,  5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

set location test not run, result is too small: 2

passed   operation &=

Passed 57 of 57 tests


***************************** Test Name  ******************************

*                      operator-=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { 1-3, 5-8 } - { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91410
list contains 7 elements:
  at 0x5aa9edc91410: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    6 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

 -= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91410
list contains 7 elements:
  at 0x5aa9edc91410: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    6 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

 expecting:        {  1,  2,  3,  5,  6,  7,  8 }
 against received: {  1,  2,  3,  5,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc91410
  at 0x5aa9edc91410: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    6 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc91410
list contains 7 elements:
  at 0x5aa9edc91410: data    1 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    2 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    6 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    7 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    8 next: 0

 returns true 


passed   operation -=

Passed 58 of 58 tests

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { empty } - { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 -= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc90d30
list contains 7 elements:
  at 0x5aa9edc90d30: data    1 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    2 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    3 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    5 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    6 next: 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    7 next: 0x5aa9edc91410
  at 0x5aa9edc91410: data    8 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0
list contains 0 elements:
  empty list

 expecting:        { empty }
 against received: { empty }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation -=

Passed 59 of 59 tests

    ************************ Test Phase *************************
    *      operator-=(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 7 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    2 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    3 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    5 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc916c0
  at 0x5aa9edc916c0: data    8 next: 0

 -= 

set contains a list at 0x7ffe72e0ba80: m_head points to 0x5aa9edc91410
list contains 3 elements:
  at 0x5aa9edc91410: data    3 next: 0x5aa9edc916e0
  at 0x5aa9edc916e0: data    4 next: 0x5aa9edc91700
  at 0x5aa9edc91700: data    5 next: 0

yields

set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 5 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    2 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc916c0
  at 0x5aa9edc916c0: data    8 next: 0

 expecting:        {  1,  2,  6,  7,  8 }
 against received: {  1,  2,  6,  7,  8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffe72e0ba70 and contained 7 objects 
 list was at address 0x7ffe72e0ba70 m_head points to 0x5aa9edc90cb0
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    2 next: 0x5aa9edc90ad0
  at 0x5aa9edc90ad0: data    3 next: 0x5aa9edc911e0
  at 0x5aa9edc911e0: data    5 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc916c0
  at 0x5aa9edc916c0: data    8 next: 0

after_set:  
set contains a list at 0x7ffe72e0ba70: m_head points to 0x5aa9edc90cb0
list contains 5 elements:
  at 0x5aa9edc90cb0: data    1 next: 0x5aa9edc913f0
  at 0x5aa9edc913f0: data    2 next: 0x5aa9edc91000
  at 0x5aa9edc91000: data    6 next: 0x5aa9edc90d30
  at 0x5aa9edc90d30: data    7 next: 0x5aa9edc916c0
  at 0x5aa9edc916c0: data    8 next: 0

 returns true 


passed   operation -=

Passed 60 of 60 tests

testMyOrderedSet(): Passed 60 of 60 tests

JoesSetTestBench.cpp done
