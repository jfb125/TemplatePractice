/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 25 2025 at 14:37:43



***************************** Test Name  ******************************

*                         Default Constructor                         *

***************************** Test Name  ******************************

passed default constructor produced empty set &0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


***************************** Test Name  ******************************

*                            operator+=(T)                            *

***************************** Test Name  ******************************

 .. added 5 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c56780
list contains 1 elements:
  at 0x608660c56780: data    5 next: 0

 .. added 3 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c56ac0
list contains 2 elements:
  at 0x608660c56ac0: data    3 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0

 .. added 7 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c56ac0
list contains 3 elements:
  at 0x608660c56ac0: data    3 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0

 .. added 4 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c56ac0
list contains 4 elements:
  at 0x608660c56ac0: data    3 next: 0x608660c56e50
  at 0x608660c56e50: data    4 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0

 .. added 6 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c56ac0
list contains 5 elements:
  at 0x608660c56ac0: data    3 next: 0x608660c56e50
  at 0x608660c56e50: data    4 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c57090
  at 0x608660c57090: data    6 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0

 .. added 8 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c56ac0
list contains 6 elements:
  at 0x608660c56ac0: data    3 next: 0x608660c56e50
  at 0x608660c56e50: data    4 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c57090
  at 0x608660c57090: data    6 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0x608660c57330
  at 0x608660c57330: data    8 next: 0

 .. added 2 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c57640
list contains 7 elements:
  at 0x608660c57640: data    2 next: 0x608660c56ac0
  at 0x608660c56ac0: data    3 next: 0x608660c56e50
  at 0x608660c56e50: data    4 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c57090
  at 0x608660c57090: data    6 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0x608660c57330
  at 0x608660c57330: data    8 next: 0

 .. added 1 to set produces @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c579c0
list contains 8 elements:
  at 0x608660c579c0: data    1 next: 0x608660c57640
  at 0x608660c57640: data    2 next: 0x608660c56ac0
  at 0x608660c56ac0: data    3 next: 0x608660c56e50
  at 0x608660c56e50: data    4 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c57090
  at 0x608660c57090: data    6 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0x608660c57330
  at 0x608660c57330: data    8 next: 0

Test adding stressing inputs
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2e40 and contained 0 objects 
 list was at address 0x7fff13ef2e40 m_head points to 0

after_set:  
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c579c0
list contains 8 elements:
  at 0x608660c579c0: data    1 next: 0x608660c57640
  at 0x608660c57640: data    2 next: 0x608660c56ac0
  at 0x608660c56ac0: data    3 next: 0x608660c56e50
  at 0x608660c56e50: data    4 next: 0x608660c56780
  at 0x608660c56780: data    5 next: 0x608660c57090
  at 0x608660c57090: data    6 next: 0x608660c56c70
  at 0x608660c56c70: data    7 next: 0x608660c57330
  at 0x608660c57330: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


***************************** Test Name  ******************************

*                             buildSet()                              *

***************************** Test Name  ******************************

Test buildSet(stressing_inputs)
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


***************************** Test Name  ******************************

*                             set.clear()                             *

***************************** Test Name  ******************************

buildSet @0x7fff13ef2e40
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c57330
list contains 8 elements:
  at 0x608660c57330: data    1 next: 0x608660c579c0
  at 0x608660c579c0: data    2 next: 0x608660c56780
  at 0x608660c56780: data    3 next: 0x608660c56c70
  at 0x608660c56c70: data    4 next: 0x608660c56e50
  at 0x608660c56e50: data    5 next: 0x608660c56ac0
  at 0x608660c56ac0: data    6 next: 0x608660c57090
  at 0x608660c57090: data    7 next: 0x608660c57640
  at 0x608660c57640: data    8 next: 0
passed after set.clear()set is @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


***************************** Test Name  ******************************

*                             set.reset()                             *

***************************** Test Name  ******************************

buildSet @0x7fff13ef2e40
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c57640
list contains 8 elements:
  at 0x608660c57640: data    1 next: 0x608660c57330
  at 0x608660c57330: data    2 next: 0x608660c56ac0
  at 0x608660c56ac0: data    3 next: 0x608660c56c70
  at 0x608660c56c70: data    4 next: 0x608660c57090
  at 0x608660c57090: data    5 next: 0x608660c56780
  at 0x608660c56780: data    6 next: 0x608660c56e50
  at 0x608660c56e50: data    7 next: 0x608660c579c0
  at 0x608660c579c0: data    8 next: 0
passed after set.reset(),
set  @0x7fff13ef2e40: 
set contains a list at 0x7fff13ef2e40: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


***************************** Test Name  ******************************

*                          copy constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2e40 and contained 8 objects 
 list was at address 0x7fff13ef2e40 m_head points to 0x608660c579c0
  at 0x608660c579c0: data    1 next: 0x608660c57640
  at 0x608660c57640: data    2 next: 0x608660c56780
  at 0x608660c56780: data    3 next: 0x608660c56c70
  at 0x608660c56c70: data    4 next: 0x608660c56e50
  at 0x608660c56e50: data    5 next: 0x608660c56ac0
  at 0x608660c56ac0: data    6 next: 0x608660c57090
  at 0x608660c57090: data    7 next: 0x608660c57330
  at 0x608660c57330: data    8 next: 0

after_set:  @0x7fff13ef2e50
set contains a list at 0x7fff13ef2e50: m_head points to 0x608660c57f30
list contains 8 elements:
  at 0x608660c57f30: data    1 next: 0x608660c57f50
  at 0x608660c57f50: data    2 next: 0x608660c57f70
  at 0x608660c57f70: data    3 next: 0x608660c57f90
  at 0x608660c57f90: data    4 next: 0x608660c57fb0
  at 0x608660c57fb0: data    5 next: 0x608660c57fd0
  at 0x608660c57fd0: data    6 next: 0x608660c57ff0
  at 0x608660c57ff0: data    7 next: 0x608660c58010
  at 0x608660c58010: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed : 
set      @0x7fff13ef2e40 :
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c579c0
list contains 8 elements:
  at 0x608660c579c0: data    1 next: 0x608660c57640
  at 0x608660c57640: data    2 next: 0x608660c56780
  at 0x608660c56780: data    3 next: 0x608660c56c70
  at 0x608660c56c70: data    4 next: 0x608660c56e50
  at 0x608660c56e50: data    5 next: 0x608660c56ac0
  at 0x608660c56ac0: data    6 next: 0x608660c57090
  at 0x608660c57090: data    7 next: 0x608660c57330
  at 0x608660c57330: data    8 next: 0

copy_set @0x7fff13ef2e50 :
set contains a list at 0x7fff13ef2e50: m_head points to 0x608660c57f30
list contains 8 elements:
  at 0x608660c57f30: data    1 next: 0x608660c57f50
  at 0x608660c57f50: data    2 next: 0x608660c57f70
  at 0x608660c57f70: data    3 next: 0x608660c57f90
  at 0x608660c57f90: data    4 next: 0x608660c57fb0
  at 0x608660c57fb0: data    5 next: 0x608660c57fd0
  at 0x608660c57fd0: data    6 next: 0x608660c57ff0
  at 0x608660c57ff0: data    7 next: 0x608660c58010
  at 0x608660c58010: data    8 next: 0


Passed 6 of 6 tests


***************************** Test Name  ******************************

*                       operator=(MyOrderedSet)                       *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2e40 and contained 8 objects 
 list was at address 0x7fff13ef2e40 m_head points to 0x608660c57330
  at 0x608660c57330: data    1 next: 0x608660c57e30
  at 0x608660c57e30: data    2 next: 0x608660c57ed0
  at 0x608660c57ed0: data    3 next: 0x608660c57e90
  at 0x608660c57e90: data    4 next: 0x608660c57ef0
  at 0x608660c57ef0: data    5 next: 0x608660c57e70
  at 0x608660c57e70: data    6 next: 0x608660c57eb0
  at 0x608660c57eb0: data    7 next: 0x608660c57e50
  at 0x608660c57e50: data    8 next: 0

after_set:  @0x7fff13ef2e60
set contains a list at 0x7fff13ef2e60: m_head points to 0x608660c58030
list contains 8 elements:
  at 0x608660c58030: data    1 next: 0x608660c58050
  at 0x608660c58050: data    2 next: 0x608660c58070
  at 0x608660c58070: data    3 next: 0x608660c58090
  at 0x608660c58090: data    4 next: 0x608660c580b0
  at 0x608660c580b0: data    5 next: 0x608660c580d0
  at 0x608660c580d0: data    6 next: 0x608660c580f0
  at 0x608660c580f0: data    7 next: 0x608660c58110
  at 0x608660c58110: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

set          @0x7fff13ef2e40 :
set contains a list at 0x7fff13ef2e40: m_head points to 0x608660c57330
list contains 8 elements:
  at 0x608660c57330: data    1 next: 0x608660c57e30
  at 0x608660c57e30: data    2 next: 0x608660c57ed0
  at 0x608660c57ed0: data    3 next: 0x608660c57e90
  at 0x608660c57e90: data    4 next: 0x608660c57ef0
  at 0x608660c57ef0: data    5 next: 0x608660c57e70
  at 0x608660c57e70: data    6 next: 0x608660c57eb0
  at 0x608660c57eb0: data    7 next: 0x608660c57e50
  at 0x608660c57e50: data    8 next: 0

assigned_set @0x7fff13ef2e60 :
set contains a list at 0x7fff13ef2e50: m_head points to 0x608660c57f30
list contains 8 elements:
  at 0x608660c57f30: data    1 next: 0x608660c57f50
  at 0x608660c57f50: data    2 next: 0x608660c57f70
  at 0x608660c57f70: data    3 next: 0x608660c57f90
  at 0x608660c57f90: data    4 next: 0x608660c57fb0
  at 0x608660c57fb0: data    5 next: 0x608660c57fd0
  at 0x608660c57fd0: data    6 next: 0x608660c57ff0
  at 0x608660c57ff0: data    7 next: 0x608660c58010
  at 0x608660c58010: data    8 next: 0

passed 

Passed 7 of 7 tests


***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c57090
list contains 1 elements:
  at 0x608660c57090: data    5 next: 0
set + 3 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c56780
list contains 2 elements:
  at 0x608660c56780: data    3 next: 0x608660c56c70
  at 0x608660c56c70: data    5 next: 0
set + 7 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c57e50
list contains 3 elements:
  at 0x608660c57e50: data    3 next: 0x608660c57330
  at 0x608660c57330: data    5 next: 0x608660c57e30
  at 0x608660c57e30: data    7 next: 0
set + 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c57ef0
list contains 4 elements:
  at 0x608660c57ef0: data    3 next: 0x608660c57f10
  at 0x608660c57f10: data    4 next: 0x608660c57e70
  at 0x608660c57e70: data    5 next: 0x608660c57eb0
  at 0x608660c57eb0: data    7 next: 0
set + 6 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58210
list contains 5 elements:
  at 0x608660c58210: data    3 next: 0x608660c58230
  at 0x608660c58230: data    4 next: 0x608660c58250
  at 0x608660c58250: data    5 next: 0x608660c58290
  at 0x608660c58290: data    6 next: 0x608660c58270
  at 0x608660c58270: data    7 next: 0
set + 8 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58330
list contains 6 elements:
  at 0x608660c58330: data    3 next: 0x608660c58350
  at 0x608660c58350: data    4 next: 0x608660c58370
  at 0x608660c58370: data    5 next: 0x608660c58390
  at 0x608660c58390: data    6 next: 0x608660c583b0
  at 0x608660c583b0: data    7 next: 0x608660c583d0
  at 0x608660c583d0: data    8 next: 0
set + 2 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58500
list contains 7 elements:
  at 0x608660c58500: data    2 next: 0x608660c58440
  at 0x608660c58440: data    3 next: 0x608660c58460
  at 0x608660c58460: data    4 next: 0x608660c58480
  at 0x608660c58480: data    5 next: 0x608660c584a0
  at 0x608660c584a0: data    6 next: 0x608660c584c0
  at 0x608660c584c0: data    7 next: 0x608660c584e0
  at 0x608660c584e0: data    8 next: 0
set + 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58690
list contains 8 elements:
  at 0x608660c58690: data    1 next: 0x608660c585b0
  at 0x608660c585b0: data    2 next: 0x608660c585d0
  at 0x608660c585d0: data    3 next: 0x608660c585f0
  at 0x608660c585f0: data    4 next: 0x608660c58610
  at 0x608660c58610: data    5 next: 0x608660c58630
  at 0x608660c58630: data    6 next: 0x608660c58650
  at 0x608660c58650: data    7 next: 0x608660c58670
  at 0x608660c58670: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2ca0 and contained 7 objects 
 list was at address 0x7fff13ef2ca0 m_head points to 0x608660c58500
  at 0x608660c58500: data    2 next: 0x608660c58440
  at 0x608660c58440: data    3 next: 0x608660c58460
  at 0x608660c58460: data    4 next: 0x608660c58480
  at 0x608660c58480: data    5 next: 0x608660c584a0
  at 0x608660c584a0: data    6 next: 0x608660c584c0
  at 0x608660c584c0: data    7 next: 0x608660c584e0
  at 0x608660c584e0: data    8 next: 0

after_set:  @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58690
list contains 8 elements:
  at 0x608660c58690: data    1 next: 0x608660c585b0
  at 0x608660c585b0: data    2 next: 0x608660c585d0
  at 0x608660c585d0: data    3 next: 0x608660c585f0
  at 0x608660c585f0: data    4 next: 0x608660c58610
  at 0x608660c58610: data    5 next: 0x608660c58630
  at 0x608660c58630: data    6 next: 0x608660c58650
  at 0x608660c58650: data    7 next: 0x608660c58670
  at 0x608660c58670: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c584e0
list contains 1 elements:
  at 0x608660c584e0: data    1 next: 0
set + 2 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58480
list contains 2 elements:
  at 0x608660c58480: data    1 next: 0x608660c58460
  at 0x608660c58460: data    2 next: 0
set + 3 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58670
list contains 3 elements:
  at 0x608660c58670: data    1 next: 0x608660c58690
  at 0x608660c58690: data    2 next: 0x608660c585b0
  at 0x608660c585b0: data    3 next: 0
set + 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58610
list contains 4 elements:
  at 0x608660c58610: data    1 next: 0x608660c58630
  at 0x608660c58630: data    2 next: 0x608660c58650
  at 0x608660c58650: data    3 next: 0x608660c587b0
  at 0x608660c587b0: data    4 next: 0
set + 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58850
list contains 4 elements:
  at 0x608660c58850: data    1 next: 0x608660c58870
  at 0x608660c58870: data    2 next: 0x608660c58890
  at 0x608660c58890: data    3 next: 0x608660c588b0
  at 0x608660c588b0: data    4 next: 0
set + 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58930
list contains 4 elements:
  at 0x608660c58930: data    1 next: 0x608660c58950
  at 0x608660c58950: data    2 next: 0x608660c58970
  at 0x608660c58970: data    3 next: 0x608660c58990
  at 0x608660c58990: data    4 next: 0
set + 3 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58a10
list contains 4 elements:
  at 0x608660c58a10: data    1 next: 0x608660c58a30
  at 0x608660c58a30: data    2 next: 0x608660c58a50
  at 0x608660c58a50: data    3 next: 0x608660c58a70
  at 0x608660c58a70: data    4 next: 0
set + 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58af0
list contains 4 elements:
  at 0x608660c58af0: data    1 next: 0x608660c58b10
  at 0x608660c58b10: data    2 next: 0x608660c58b30
  at 0x608660c58b30: data    3 next: 0x608660c58b50
  at 0x608660c58b50: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2ca0 and contained 4 objects 
 list was at address 0x7fff13ef2ca0 m_head points to 0x608660c58a10
  at 0x608660c58a10: data    1 next: 0x608660c58a30
  at 0x608660c58a30: data    2 next: 0x608660c58a50
  at 0x608660c58a50: data    3 next: 0x608660c58a70
  at 0x608660c58a70: data    4 next: 0

after_set:  @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58af0
list contains 4 elements:
  at 0x608660c58af0: data    1 next: 0x608660c58b10
  at 0x608660c58b10: data    2 next: 0x608660c58b30
  at 0x608660c58b30: data    3 next: 0x608660c58b50
  at 0x608660c58b50: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 9 of 9 tests


***************************** Test Name  ******************************

*                         operator-(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -
buildSet @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58b30
list contains 7 elements:
  at 0x608660c58b30: data    1 next: 0x608660c58b10
  at 0x608660c58b10: data    2 next: 0x608660c58af0
  at 0x608660c58af0: data    3 next: 0x608660c58a70
  at 0x608660c58a70: data    4 next: 0x608660c58a50
  at 0x608660c58a50: data    5 next: 0x608660c58a30
  at 0x608660c58a30: data    6 next: 0x608660c58a10
  at 0x608660c58a10: data    8 next: 0
set - 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58c80
list contains 6 elements:
  at 0x608660c58c80: data    2 next: 0x608660c58ca0
  at 0x608660c58ca0: data    3 next: 0x608660c58cc0
  at 0x608660c58cc0: data    4 next: 0x608660c58ce0
  at 0x608660c58ce0: data    5 next: 0x608660c58d00
  at 0x608660c58d00: data    6 next: 0x608660c58d20
  at 0x608660c58d20: data    8 next: 0
set - 2 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58a10
list contains 5 elements:
  at 0x608660c58a10: data    3 next: 0x608660c58db0
  at 0x608660c58db0: data    4 next: 0x608660c58dd0
  at 0x608660c58dd0: data    5 next: 0x608660c58df0
  at 0x608660c58df0: data    6 next: 0x608660c58e10
  at 0x608660c58e10: data    8 next: 0
set - 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58c80
list contains 4 elements:
  at 0x608660c58c80: data    3 next: 0x608660c58ed0
  at 0x608660c58ed0: data    5 next: 0x608660c58ef0
  at 0x608660c58ef0: data    6 next: 0x608660c58f10
  at 0x608660c58f10: data    8 next: 0
set - 5 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58a10
list contains 3 elements:
  at 0x608660c58a10: data    3 next: 0x608660c58f90
  at 0x608660c58f90: data    6 next: 0x608660c58fb0
  at 0x608660c58fb0: data    8 next: 0
set - 7 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c58c60
list contains 3 elements:
  at 0x608660c58c60: data    3 next: 0x608660c59000
  at 0x608660c59000: data    6 next: 0x608660c59020
  at 0x608660c59020: data    8 next: 0
set - 8 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59090
list contains 2 elements:
  at 0x608660c59090: data    3 next: 0x608660c590b0
  at 0x608660c590b0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 10 of 10 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c590b0
list contains 1 elements:
  at 0x608660c590b0: data    5 next: 0
set += 3 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59000
list contains 2 elements:
  at 0x608660c59000: data    3 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0
set += 7 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59000
list contains 3 elements:
  at 0x608660c59000: data    3 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0
set += 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59000
list contains 4 elements:
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0
set += 6 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59000
list contains 5 elements:
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c59370
  at 0x608660c59370: data    6 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0
set += 8 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59000
list contains 6 elements:
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c59370
  at 0x608660c59370: data    6 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0x608660c59490
  at 0x608660c59490: data    8 next: 0
set += 2 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c595a0
list contains 7 elements:
  at 0x608660c595a0: data    2 next: 0x608660c59000
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c59370
  at 0x608660c59370: data    6 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0x608660c59490
  at 0x608660c59490: data    8 next: 0
set += 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59710
list contains 8 elements:
  at 0x608660c59710: data    1 next: 0x608660c595a0
  at 0x608660c595a0: data    2 next: 0x608660c59000
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c59370
  at 0x608660c59370: data    6 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0x608660c59490
  at 0x608660c59490: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2ca0 and contained 7 objects 
 list was at address 0x7fff13ef2ca0 m_head points to 0x608660c595a0
  at 0x608660c595a0: data    2 next: 0x608660c59000
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c59370
  at 0x608660c59370: data    6 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0x608660c59490
  at 0x608660c59490: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59710
list contains 8 elements:
  at 0x608660c59710: data    1 next: 0x608660c595a0
  at 0x608660c595a0: data    2 next: 0x608660c59000
  at 0x608660c59000: data    3 next: 0x608660c59270
  at 0x608660c59270: data    4 next: 0x608660c590b0
  at 0x608660c590b0: data    5 next: 0x608660c59370
  at 0x608660c59370: data    6 next: 0x608660c591a0
  at 0x608660c591a0: data    7 next: 0x608660c59490
  at 0x608660c59490: data    8 next: 0

 returns true 

passed   operation +=

Passed 11 of 11 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 1 elements:
  at 0x608660c591a0: data    1 next: 0
set += 2 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 2 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0
set += 3 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 3 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0
set += 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 4 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0
set += 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 4 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0
set += 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 4 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0
set += 3 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 4 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0
set += 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 4 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2ca0 and contained 4 objects 
 list was at address 0x7fff13ef2ca0 m_head points to 0x608660c591a0
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0

after_set:  
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c591a0
list contains 4 elements:
  at 0x608660c591a0: data    1 next: 0x608660c59270
  at 0x608660c59270: data    2 next: 0x608660c59490
  at 0x608660c59490: data    3 next: 0x608660c598b0
  at 0x608660c598b0: data    4 next: 0

 returns true 

passed   operation +=

Passed 12 of 12 tests


***************************** Test Name  ******************************

*                        operator-=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -=
buildSet @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c598b0
list contains 8 elements:
  at 0x608660c598b0: data    1 next: 0x608660c59490
  at 0x608660c59490: data    2 next: 0x608660c59270
  at 0x608660c59270: data    3 next: 0x608660c591a0
  at 0x608660c591a0: data    4 next: 0x608660c59c80
  at 0x608660c59c80: data    5 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0x608660c59cc0
  at 0x608660c59cc0: data    7 next: 0x608660c59ce0
  at 0x608660c59ce0: data    8 next: 0
set -= 1 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59490
list contains 7 elements:
  at 0x608660c59490: data    2 next: 0x608660c59270
  at 0x608660c59270: data    3 next: 0x608660c591a0
  at 0x608660c591a0: data    4 next: 0x608660c59c80
  at 0x608660c59c80: data    5 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0x608660c59cc0
  at 0x608660c59cc0: data    7 next: 0x608660c59ce0
  at 0x608660c59ce0: data    8 next: 0
set -= 2 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59270
list contains 6 elements:
  at 0x608660c59270: data    3 next: 0x608660c591a0
  at 0x608660c591a0: data    4 next: 0x608660c59c80
  at 0x608660c59c80: data    5 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0x608660c59cc0
  at 0x608660c59cc0: data    7 next: 0x608660c59ce0
  at 0x608660c59ce0: data    8 next: 0
set -= 4 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59270
list contains 5 elements:
  at 0x608660c59270: data    3 next: 0x608660c59c80
  at 0x608660c59c80: data    5 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0x608660c59cc0
  at 0x608660c59cc0: data    7 next: 0x608660c59ce0
  at 0x608660c59ce0: data    8 next: 0
set -= 5 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59270
list contains 4 elements:
  at 0x608660c59270: data    3 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0x608660c59cc0
  at 0x608660c59cc0: data    7 next: 0x608660c59ce0
  at 0x608660c59ce0: data    8 next: 0
set -= 7 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59270
list contains 3 elements:
  at 0x608660c59270: data    3 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0x608660c59ce0
  at 0x608660c59ce0: data    8 next: 0
set -= 8 results in set @0x7fff13ef2ca0
set contains a list at 0x7fff13ef2ca0: m_head points to 0x608660c59270
list contains 2 elements:
  at 0x608660c59270: data    3 next: 0x608660c59ca0
  at 0x608660c59ca0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 13 of 13 tests


***************************** Test Name  ******************************

*                            .isMember(T)                             *

***************************** Test Name  ******************************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 14 of 14 tests


***************************** Test Name  ******************************

*                        relational operators                         *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *              { empty }.operator==({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } == { <empty list> } returns true 

    ************************ Test Phase *************************
    *              { empty }.operator!=({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } != { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator==({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator!=({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != { <empty list> } returns true 

    ************************ Test Phase *************************
    *               { empty }.operator==({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *               { empty }.operator!=({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } != {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 

    ************************ Test Phase *************************
    *                { 5-8 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 5-8 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 

Passed 28 of 28 tests

passed : relational operators == !=

Passed 28 of 28 tests


***************************** Test Name  ******************************

*                       operator+(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a330
list contains 7 elements:
  at 0x608660c5a330: data    1 next: 0x608660c5a310
  at 0x608660c5a310: data    2 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    3 next: 0x608660c5a370
  at 0x608660c5a370: data    5 next: 0x608660c5a390
  at 0x608660c5a390: data    6 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    7 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a330
  at 0x608660c5a330: data    1 next: 0x608660c5a310
  at 0x608660c5a310: data    2 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    3 next: 0x608660c5a370
  at 0x608660c5a370: data    5 next: 0x608660c5a390
  at 0x608660c5a390: data    6 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    7 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a4b0
list contains 7 elements:
  at 0x608660c5a4b0: data    1 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    2 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    3 next: 0x608660c5a510
  at 0x608660c5a510: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a550
  at 0x608660c5a550: data    7 next: 0x608660c5a570
  at 0x608660c5a570: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 0 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a4b0
list contains 7 elements:
  at 0x608660c5a4b0: data    1 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    2 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    3 next: 0x608660c5a510
  at 0x608660c5a510: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a550
  at 0x608660c5a550: data    7 next: 0x608660c5a570
  at 0x608660c5a570: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 29 of 29 tests

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a490
list contains 7 elements:
  at 0x608660c5a490: data    1 next: 0x608660c5a470
  at 0x608660c5a470: data    2 next: 0x608660c5a450
  at 0x608660c5a450: data    3 next: 0x608660c5a430
  at 0x608660c5a430: data    5 next: 0x608660c5a410
  at 0x608660c5a410: data    6 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    7 next: 0x608660c5a350
  at 0x608660c5a350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 0 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a3b0
list contains 7 elements:
  at 0x608660c5a3b0: data    1 next: 0x608660c5a550
  at 0x608660c5a550: data    2 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    3 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    5 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    6 next: 0x608660c5a510
  at 0x608660c5a510: data    7 next: 0x608660c5a530
  at 0x608660c5a530: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 7 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a490
  at 0x608660c5a490: data    1 next: 0x608660c5a470
  at 0x608660c5a470: data    2 next: 0x608660c5a450
  at 0x608660c5a450: data    3 next: 0x608660c5a430
  at 0x608660c5a430: data    5 next: 0x608660c5a410
  at 0x608660c5a410: data    6 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    7 next: 0x608660c5a350
  at 0x608660c5a350: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a3b0
list contains 7 elements:
  at 0x608660c5a3b0: data    1 next: 0x608660c5a550
  at 0x608660c5a550: data    2 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    3 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    5 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    6 next: 0x608660c5a510
  at 0x608660c5a510: data    7 next: 0x608660c5a530
  at 0x608660c5a530: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 30 of 30 tests

    ************************ Test Phase *************************
    *      operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a390
list contains 7 elements:
  at 0x608660c5a390: data    1 next: 0x608660c5a370
  at 0x608660c5a370: data    2 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    3 next: 0x608660c5a310
  at 0x608660c5a310: data    5 next: 0x608660c5a330
  at 0x608660c5a330: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a350
list contains 3 elements:
  at 0x608660c5a350: data    3 next: 0x608660c5a530
  at 0x608660c5a530: data    4 next: 0x608660c5a490
  at 0x608660c5a490: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a390
  at 0x608660c5a390: data    1 next: 0x608660c5a370
  at 0x608660c5a370: data    2 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    3 next: 0x608660c5a310
  at 0x608660c5a310: data    5 next: 0x608660c5a330
  at 0x608660c5a330: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a630
list contains 8 elements:
  at 0x608660c5a630: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5a670
  at 0x608660c5a670: data    3 next: 0x608660c5a710
  at 0x608660c5a710: data    4 next: 0x608660c5a690
  at 0x608660c5a690: data    5 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 3 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a350
  at 0x608660c5a350: data    3 next: 0x608660c5a530
  at 0x608660c5a530: data    4 next: 0x608660c5a490
  at 0x608660c5a490: data    5 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a630
list contains 8 elements:
  at 0x608660c5a630: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5a670
  at 0x608660c5a670: data    3 next: 0x608660c5a710
  at 0x608660c5a710: data    4 next: 0x608660c5a690
  at 0x608660c5a690: data    5 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 31 of 31 tests


***************************** Test Name  ******************************

*                       operator|(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a3b0
list contains 7 elements:
  at 0x608660c5a3b0: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a410
  at 0x608660c5a410: data    5 next: 0x608660c5a430
  at 0x608660c5a430: data    6 next: 0x608660c5a450
  at 0x608660c5a450: data    7 next: 0x608660c5a470
  at 0x608660c5a470: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a3b0
  at 0x608660c5a3b0: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a410
  at 0x608660c5a410: data    5 next: 0x608660c5a430
  at 0x608660c5a430: data    6 next: 0x608660c5a450
  at 0x608660c5a450: data    7 next: 0x608660c5a470
  at 0x608660c5a470: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a570
list contains 7 elements:
  at 0x608660c5a570: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a670
  at 0x608660c5a670: data    3 next: 0x608660c5a710
  at 0x608660c5a710: data    5 next: 0x608660c5a690
  at 0x608660c5a690: data    6 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 0 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a570
list contains 7 elements:
  at 0x608660c5a570: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a670
  at 0x608660c5a670: data    3 next: 0x608660c5a710
  at 0x608660c5a710: data    5 next: 0x608660c5a690
  at 0x608660c5a690: data    6 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 32 of 32 tests

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a2f0
list contains 7 elements:
  at 0x608660c5a2f0: data    1 next: 0x608660c5a370
  at 0x608660c5a370: data    2 next: 0x608660c5a390
  at 0x608660c5a390: data    3 next: 0x608660c5a490
  at 0x608660c5a490: data    5 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    6 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    7 next: 0x608660c5a350
  at 0x608660c5a350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 0 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a450
list contains 7 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    2 next: 0x608660c5a310
  at 0x608660c5a310: data    3 next: 0x608660c5a330
  at 0x608660c5a330: data    5 next: 0x608660c5a570
  at 0x608660c5a570: data    6 next: 0x608660c5a530
  at 0x608660c5a530: data    7 next: 0x608660c5a670
  at 0x608660c5a670: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 7 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a2f0
  at 0x608660c5a2f0: data    1 next: 0x608660c5a370
  at 0x608660c5a370: data    2 next: 0x608660c5a390
  at 0x608660c5a390: data    3 next: 0x608660c5a490
  at 0x608660c5a490: data    5 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    6 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    7 next: 0x608660c5a350
  at 0x608660c5a350: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a450
list contains 7 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    2 next: 0x608660c5a310
  at 0x608660c5a310: data    3 next: 0x608660c5a330
  at 0x608660c5a330: data    5 next: 0x608660c5a570
  at 0x608660c5a570: data    6 next: 0x608660c5a530
  at 0x608660c5a530: data    7 next: 0x608660c5a670
  at 0x608660c5a670: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 33 of 33 tests

    ************************ Test Phase *************************
    *      operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a3f0
list contains 7 elements:
  at 0x608660c5a3f0: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    3 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    5 next: 0x608660c5a470
  at 0x608660c5a470: data    6 next: 0x608660c5a710
  at 0x608660c5a710: data    7 next: 0x608660c5a690
  at 0x608660c5a690: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a350
list contains 3 elements:
  at 0x608660c5a350: data    3 next: 0x608660c5a670
  at 0x608660c5a670: data    4 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a3f0
  at 0x608660c5a3f0: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    3 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    5 next: 0x608660c5a470
  at 0x608660c5a470: data    6 next: 0x608660c5a710
  at 0x608660c5a710: data    7 next: 0x608660c5a690
  at 0x608660c5a690: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a330
list contains 8 elements:
  at 0x608660c5a330: data    1 next: 0x608660c5a570
  at 0x608660c5a570: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    4 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    5 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    6 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    7 next: 0x608660c5a550
  at 0x608660c5a550: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 3 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a350
  at 0x608660c5a350: data    3 next: 0x608660c5a670
  at 0x608660c5a670: data    4 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a330
list contains 8 elements:
  at 0x608660c5a330: data    1 next: 0x608660c5a570
  at 0x608660c5a570: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    4 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    5 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    6 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    7 next: 0x608660c5a550
  at 0x608660c5a550: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 34 of 34 tests


***************************** Test Name  ******************************

*                       operator^(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a410
list contains 7 elements:
  at 0x608660c5a410: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    3 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    5 next: 0x608660c5a490
  at 0x608660c5a490: data    6 next: 0x608660c5a390
  at 0x608660c5a390: data    7 next: 0x608660c5a370
  at 0x608660c5a370: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a410
  at 0x608660c5a410: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    3 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    5 next: 0x608660c5a490
  at 0x608660c5a490: data    6 next: 0x608660c5a390
  at 0x608660c5a390: data    7 next: 0x608660c5a370
  at 0x608660c5a370: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a710
list contains 7 elements:
  at 0x608660c5a710: data    1 next: 0x608660c5a670
  at 0x608660c5a670: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    6 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    7 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 0 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a710
list contains 7 elements:
  at 0x608660c5a710: data    1 next: 0x608660c5a670
  at 0x608660c5a670: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    6 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    7 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 35 of 35 tests

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a3b0
list contains 7 elements:
  at 0x608660c5a3b0: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a690
  at 0x608660c5a690: data    6 next: 0x608660c5a550
  at 0x608660c5a550: data    7 next: 0x608660c5a350
  at 0x608660c5a350: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 0 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a390
list contains 7 elements:
  at 0x608660c5a390: data    1 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    2 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a710
  at 0x608660c5a710: data    6 next: 0x608660c5a670
  at 0x608660c5a670: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 7 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a3b0
  at 0x608660c5a3b0: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a690
  at 0x608660c5a690: data    6 next: 0x608660c5a550
  at 0x608660c5a550: data    7 next: 0x608660c5a350
  at 0x608660c5a350: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a390
list contains 7 elements:
  at 0x608660c5a390: data    1 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    2 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a710
  at 0x608660c5a710: data    6 next: 0x608660c5a670
  at 0x608660c5a670: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 36 of 36 tests

    ************************ Test Phase *************************
    *      operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a6f0
list contains 7 elements:
  at 0x608660c5a6f0: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a410
  at 0x608660c5a410: data    3 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    5 next: 0x608660c5a370
  at 0x608660c5a370: data    6 next: 0x608660c5a630
  at 0x608660c5a630: data    7 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a350
list contains 3 elements:
  at 0x608660c5a350: data    3 next: 0x608660c5a650
  at 0x608660c5a650: data    4 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    5 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a6f0
  at 0x608660c5a6f0: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a410
  at 0x608660c5a410: data    3 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    5 next: 0x608660c5a370
  at 0x608660c5a370: data    6 next: 0x608660c5a630
  at 0x608660c5a630: data    7 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a470
list contains 6 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5a710
  at 0x608660c5a710: data    2 next: 0x608660c5a570
  at 0x608660c5a570: data    4 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    6 next: 0x608660c5a310
  at 0x608660c5a310: data    7 next: 0x608660c5a430
  at 0x608660c5a430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 3 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a350
  at 0x608660c5a350: data    3 next: 0x608660c5a650
  at 0x608660c5a650: data    4 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    5 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a470
list contains 6 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5a710
  at 0x608660c5a710: data    2 next: 0x608660c5a570
  at 0x608660c5a570: data    4 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    6 next: 0x608660c5a310
  at 0x608660c5a310: data    7 next: 0x608660c5a430
  at 0x608660c5a430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 37 of 37 tests


***************************** Test Name  ******************************

*                       operator&(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a550
list contains 7 elements:
  at 0x608660c5a550: data    1 next: 0x608660c5a690
  at 0x608660c5a690: data    2 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    3 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    5 next: 0x608660c5a510
  at 0x608660c5a510: data    6 next: 0x608660c5a450
  at 0x608660c5a450: data    7 next: 0x608660c5a330
  at 0x608660c5a330: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 38 of 38 tests

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a4f0
list contains 7 elements:
  at 0x608660c5a4f0: data    1 next: 0x608660c5a410
  at 0x608660c5a410: data    2 next: 0x608660c5a530
  at 0x608660c5a530: data    3 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    5 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    6 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    7 next: 0x608660c5a630
  at 0x608660c5a630: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 39 of 39 tests

    ************************ Test Phase *************************
    *      operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a3f0
list contains 7 elements:
  at 0x608660c5a3f0: data    1 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    2 next: 0x608660c5a690
  at 0x608660c5a690: data    3 next: 0x608660c5a550
  at 0x608660c5a550: data    5 next: 0x608660c5a370
  at 0x608660c5a370: data    6 next: 0x608660c5a330
  at 0x608660c5a330: data    7 next: 0x608660c5a450
  at 0x608660c5a450: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a630
list contains 3 elements:
  at 0x608660c5a630: data    3 next: 0x608660c5a510
  at 0x608660c5a510: data    4 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 40 of 40 tests


***************************** Test Name  ******************************

*                       operator-(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a410
list contains 7 elements:
  at 0x608660c5a410: data    1 next: 0x608660c5a490
  at 0x608660c5a490: data    2 next: 0x608660c5a670
  at 0x608660c5a670: data    3 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    5 next: 0x608660c5a390
  at 0x608660c5a390: data    6 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a410
  at 0x608660c5a410: data    1 next: 0x608660c5a490
  at 0x608660c5a490: data    2 next: 0x608660c5a670
  at 0x608660c5a670: data    3 next: 0x608660c5a3d0
  at 0x608660c5a3d0: data    5 next: 0x608660c5a390
  at 0x608660c5a390: data    6 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a330
list contains 7 elements:
  at 0x608660c5a330: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a570
  at 0x608660c5a570: data    3 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    5 next: 0x608660c5a310
  at 0x608660c5a310: data    6 next: 0x608660c5a710
  at 0x608660c5a710: data    7 next: 0x608660c5a430
  at 0x608660c5a430: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 0 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a330
list contains 7 elements:
  at 0x608660c5a330: data    1 next: 0x608660c5a510
  at 0x608660c5a510: data    2 next: 0x608660c5a570
  at 0x608660c5a570: data    3 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    5 next: 0x608660c5a310
  at 0x608660c5a310: data    6 next: 0x608660c5a710
  at 0x608660c5a710: data    7 next: 0x608660c5a430
  at 0x608660c5a430: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 41 of 41 tests

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a690
list contains 7 elements:
  at 0x608660c5a690: data    1 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    5 next: 0x608660c5a450
  at 0x608660c5a450: data    6 next: 0x608660c5a350
  at 0x608660c5a350: data    7 next: 0x608660c5a630
  at 0x608660c5a630: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 42 of 42 tests

    ************************ Test Phase *************************
    *      operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7fff13ef2c50: m_head points to 0x608660c5a3d0
list contains 7 elements:
  at 0x608660c5a3d0: data    1 next: 0x608660c5a670
  at 0x608660c5a670: data    2 next: 0x608660c5a490
  at 0x608660c5a490: data    3 next: 0x608660c5a410
  at 0x608660c5a410: data    5 next: 0x608660c5a430
  at 0x608660c5a430: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7fff13ef2c60: m_head points to 0x608660c5a630
list contains 3 elements:
  at 0x608660c5a630: data    3 next: 0x608660c5a390
  at 0x608660c5a390: data    4 next: 0x608660c5a690
  at 0x608660c5a690: data    5 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c50 and contained 7 objects 
 list was at address 0x7fff13ef2c50 m_head points to 0x608660c5a3d0
  at 0x608660c5a3d0: data    1 next: 0x608660c5a670
  at 0x608660c5a670: data    2 next: 0x608660c5a490
  at 0x608660c5a490: data    3 next: 0x608660c5a410
  at 0x608660c5a410: data    5 next: 0x608660c5a430
  at 0x608660c5a430: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5a4d0
  at 0x608660c5a4d0: data    8 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a6b0
list contains 5 elements:
  at 0x608660c5a6b0: data    1 next: 0x608660c5a310
  at 0x608660c5a310: data    2 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    6 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    7 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2c60 and contained 3 objects 
 list was at address 0x7fff13ef2c60 m_head points to 0x608660c5a630
  at 0x608660c5a630: data    3 next: 0x608660c5a390
  at 0x608660c5a390: data    4 next: 0x608660c5a690
  at 0x608660c5a690: data    5 next: 0

after_set:  @0x7fff13ef2c70
set contains a list at 0x7fff13ef2c70: m_head points to 0x608660c5a6b0
list contains 5 elements:
  at 0x608660c5a6b0: data    1 next: 0x608660c5a310
  at 0x608660c5a310: data    2 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    6 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    7 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 43 of 43 tests


***************************** Test Name  ******************************

*                      operator+=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a450
list contains 7 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

 += 

set contains a list at 0x7fff13ef2cc0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a450
list contains 7 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a450
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a450
list contains 7 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

 returns true 


passed   operation +=

Passed 44 of 44 tests

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a470
list contains 7 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5a530
  at 0x608660c5a530: data    2 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    3 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    5 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    6 next: 0x608660c5a450
  at 0x608660c5a450: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    2 next: 0x608660c5a310
  at 0x608660c5a310: data    3 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    5 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    6 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    7 next: 0x608660c5a630
  at 0x608660c5a630: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 0 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5a6b0
  at 0x608660c5a6b0: data    2 next: 0x608660c5a310
  at 0x608660c5a310: data    3 next: 0x608660c5a6f0
  at 0x608660c5a6f0: data    5 next: 0x608660c5a3b0
  at 0x608660c5a3b0: data    6 next: 0x608660c5a4b0
  at 0x608660c5a4b0: data    7 next: 0x608660c5a630
  at 0x608660c5a630: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 45 of 45 tests

    ************************ Test Phase *************************
    *      operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a450
list contains 7 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a390
  at 0x608660c5a390: data    8 next: 0

 += 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a630
list contains 3 elements:
  at 0x608660c5a630: data    3 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    4 next: 0x608660c5a650
  at 0x608660c5a650: data    5 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a450
list contains 8 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a710
  at 0x608660c5a710: data    4 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a390
  at 0x608660c5a390: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a450
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a390
  at 0x608660c5a390: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a450
list contains 8 elements:
  at 0x608660c5a450: data    1 next: 0x608660c5a4f0
  at 0x608660c5a4f0: data    2 next: 0x608660c5a3f0
  at 0x608660c5a3f0: data    3 next: 0x608660c5a710
  at 0x608660c5a710: data    4 next: 0x608660c5a2f0
  at 0x608660c5a2f0: data    5 next: 0x608660c5a530
  at 0x608660c5a530: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5a390
  at 0x608660c5a390: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests


***************************** Test Name  ******************************

*                      operator|=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a630
  at 0x608660c5a630: data    3 next: 0x608660c5a550
  at 0x608660c5a550: data    5 next: 0x608660c5a330
  at 0x608660c5a330: data    6 next: 0x608660c5a510
  at 0x608660c5a510: data    7 next: 0x608660c5a570
  at 0x608660c5a570: data    8 next: 0

 |= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a630
  at 0x608660c5a630: data    3 next: 0x608660c5a550
  at 0x608660c5a550: data    5 next: 0x608660c5a330
  at 0x608660c5a330: data    6 next: 0x608660c5a510
  at 0x608660c5a510: data    7 next: 0x608660c5a570
  at 0x608660c5a570: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a650
  at 0x608660c5a650: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a630
  at 0x608660c5a630: data    3 next: 0x608660c5a550
  at 0x608660c5a550: data    5 next: 0x608660c5a330
  at 0x608660c5a330: data    6 next: 0x608660c5a510
  at 0x608660c5a510: data    7 next: 0x608660c5a570
  at 0x608660c5a570: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a630
  at 0x608660c5a630: data    3 next: 0x608660c5a550
  at 0x608660c5a550: data    5 next: 0x608660c5a330
  at 0x608660c5a330: data    6 next: 0x608660c5a510
  at 0x608660c5a510: data    7 next: 0x608660c5a570
  at 0x608660c5a570: data    8 next: 0

 returns true 


passed   operation |=

Passed 47 of 47 tests

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a510
list contains 7 elements:
  at 0x608660c5a510: data    1 next: 0x608660c5a330
  at 0x608660c5a330: data    2 next: 0x608660c5a550
  at 0x608660c5a550: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    6 next: 0x608660c5a650
  at 0x608660c5a650: data    7 next: 0x608660c5a470
  at 0x608660c5a470: data    8 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a570
list contains 7 elements:
  at 0x608660c5a570: data    1 next: 0x608660c5a810
  at 0x608660c5a810: data    2 next: 0x608660c5a830
  at 0x608660c5a830: data    3 next: 0x608660c5a850
  at 0x608660c5a850: data    5 next: 0x608660c5a870
  at 0x608660c5a870: data    6 next: 0x608660c5a890
  at 0x608660c5a890: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 0 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a570
list contains 7 elements:
  at 0x608660c5a570: data    1 next: 0x608660c5a810
  at 0x608660c5a810: data    2 next: 0x608660c5a830
  at 0x608660c5a830: data    3 next: 0x608660c5a850
  at 0x608660c5a850: data    5 next: 0x608660c5a870
  at 0x608660c5a870: data    6 next: 0x608660c5a890
  at 0x608660c5a890: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 48 of 48 tests

    ************************ Test Phase *************************
    *      operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a470
list contains 7 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a550
  at 0x608660c5a550: data    6 next: 0x608660c5a330
  at 0x608660c5a330: data    7 next: 0x608660c5a510
  at 0x608660c5a510: data    8 next: 0

 |= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a8b0
list contains 3 elements:
  at 0x608660c5a8b0: data    3 next: 0x608660c5a570
  at 0x608660c5a570: data    4 next: 0x608660c5a810
  at 0x608660c5a810: data    5 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a470
list contains 8 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    3 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    4 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a550
  at 0x608660c5a550: data    6 next: 0x608660c5a330
  at 0x608660c5a330: data    7 next: 0x608660c5a510
  at 0x608660c5a510: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a470
  at 0x608660c5a470: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    3 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a550
  at 0x608660c5a550: data    6 next: 0x608660c5a330
  at 0x608660c5a330: data    7 next: 0x608660c5a510
  at 0x608660c5a510: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a470
list contains 8 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    3 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    4 next: 0x608660c5a630
  at 0x608660c5a630: data    5 next: 0x608660c5a550
  at 0x608660c5a550: data    6 next: 0x608660c5a330
  at 0x608660c5a330: data    7 next: 0x608660c5a510
  at 0x608660c5a510: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests


***************************** Test Name  ******************************

*                      operator^=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a9a0
list contains 7 elements:
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 ^= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a9a0
list contains 7 elements:
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a9a0
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a9a0
list contains 7 elements:
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 returns true 


passed   operation ^=

Passed 50 of 50 tests

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { empty } ^ { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 ^= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a8b0
list contains 7 elements:
  at 0x608660c5a8b0: data    1 next: 0x608660c5a570
  at 0x608660c5a570: data    2 next: 0x608660c5a810
  at 0x608660c5a810: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a650
  at 0x608660c5a650: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    8 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5aac0
list contains 7 elements:
  at 0x608660c5aac0: data    1 next: 0x608660c5aae0
  at 0x608660c5aae0: data    2 next: 0x608660c5ab00
  at 0x608660c5ab00: data    3 next: 0x608660c5ab20
  at 0x608660c5ab20: data    5 next: 0x608660c5ab40
  at 0x608660c5ab40: data    6 next: 0x608660c5ab60
  at 0x608660c5ab60: data    7 next: 0x608660c5ab80
  at 0x608660c5ab80: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 0 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5aac0
list contains 7 elements:
  at 0x608660c5aac0: data    1 next: 0x608660c5aae0
  at 0x608660c5aae0: data    2 next: 0x608660c5ab00
  at 0x608660c5ab00: data    3 next: 0x608660c5ab20
  at 0x608660c5ab20: data    5 next: 0x608660c5ab40
  at 0x608660c5ab40: data    6 next: 0x608660c5ab60
  at 0x608660c5ab60: data    7 next: 0x608660c5ab80
  at 0x608660c5ab80: data    8 next: 0

 returns true b/c before_set was empty


passed   operation ^=

Passed 51 of 51 tests

    ************************ Test Phase *************************
    *      operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a9a0
list contains 7 elements:
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 ^= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5ab80
list contains 3 elements:
  at 0x608660c5ab80: data    3 next: 0x608660c5aac0
  at 0x608660c5aac0: data    4 next: 0x608660c5aae0
  at 0x608660c5aae0: data    5 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a9a0
list contains 6 elements:
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    4 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a9a0
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a9a0
list contains 6 elements:
  at 0x608660c5a9a0: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a650
  at 0x608660c5a650: data    4 next: 0x608660c5a810
  at 0x608660c5a810: data    6 next: 0x608660c5a570
  at 0x608660c5a570: data    7 next: 0x608660c5a8b0
  at 0x608660c5a8b0: data    8 next: 0

 returns true 


passed   operation ^=

Passed 52 of 52 tests


***************************** Test Name  ******************************

*                      operator&=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { 1-3, 5-8 } & { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    2 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    3 next: 0x608660c5aae0
  at 0x608660c5aae0: data    5 next: 0x608660c5aac0
  at 0x608660c5aac0: data    6 next: 0x608660c5ab80
  at 0x608660c5ab80: data    7 next: 0x608660c5a470
  at 0x608660c5a470: data    8 next: 0

 &= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 53 of 53 tests

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { empty } & { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 &= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a470
list contains 7 elements:
  at 0x608660c5a470: data    1 next: 0x608660c5ab80
  at 0x608660c5ab80: data    2 next: 0x608660c5aac0
  at 0x608660c5aac0: data    3 next: 0x608660c5aae0
  at 0x608660c5aae0: data    5 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5a650
  at 0x608660c5a650: data    8 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 54 of 54 tests

    ************************ Test Phase *************************
    *      operator&=(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a6d0
list contains 7 elements:
  at 0x608660c5a6d0: data    1 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    2 next: 0x608660c5aae0
  at 0x608660c5aae0: data    3 next: 0x608660c5aac0
  at 0x608660c5aac0: data    5 next: 0x608660c5ab80
  at 0x608660c5ab80: data    6 next: 0x608660c5a470
  at 0x608660c5a470: data    7 next: 0x608660c5ad90
  at 0x608660c5ad90: data    8 next: 0

 &= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a650
list contains 3 elements:
  at 0x608660c5a650: data    3 next: 0x608660c5adb0
  at 0x608660c5adb0: data    4 next: 0x608660c5add0
  at 0x608660c5add0: data    5 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5aae0
list contains 2 elements:
  at 0x608660c5aae0: data    3 next: 0x608660c5aac0
  at 0x608660c5aac0: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

set location test not run, result is too small: 2

passed   operation &=

Passed 55 of 55 tests


***************************** Test Name  ******************************

*                      operator-=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { 1-3, 5-8 } - { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5adb0
list contains 7 elements:
  at 0x608660c5adb0: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5ad90
  at 0x608660c5ad90: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5ab80
  at 0x608660c5ab80: data    6 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

 -= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5adb0
list contains 7 elements:
  at 0x608660c5adb0: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5ad90
  at 0x608660c5ad90: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5ab80
  at 0x608660c5ab80: data    6 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5adb0
  at 0x608660c5adb0: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5ad90
  at 0x608660c5ad90: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5ab80
  at 0x608660c5ab80: data    6 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5adb0
list contains 7 elements:
  at 0x608660c5adb0: data    1 next: 0x608660c5a650
  at 0x608660c5a650: data    2 next: 0x608660c5ad90
  at 0x608660c5ad90: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5ab80
  at 0x608660c5ab80: data    6 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    7 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    8 next: 0

 returns true 


passed   operation -=

Passed 56 of 56 tests

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { empty } - { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 -= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5a6d0
list contains 7 elements:
  at 0x608660c5a6d0: data    1 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    2 next: 0x608660c5ab80
  at 0x608660c5ab80: data    3 next: 0x608660c5a470
  at 0x608660c5a470: data    5 next: 0x608660c5ad90
  at 0x608660c5ad90: data    6 next: 0x608660c5a650
  at 0x608660c5a650: data    7 next: 0x608660c5adb0
  at 0x608660c5adb0: data    8 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation -=

Passed 57 of 57 tests

    ************************ Test Phase *************************
    *      operator-=(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 7 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5ad90
  at 0x608660c5ad90: data    2 next: 0x608660c5a470
  at 0x608660c5a470: data    3 next: 0x608660c5ab80
  at 0x608660c5ab80: data    5 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5b060
  at 0x608660c5b060: data    8 next: 0

 -= 

set contains a list at 0x7fff13ef2cc0: m_head points to 0x608660c5adb0
list contains 3 elements:
  at 0x608660c5adb0: data    3 next: 0x608660c5b080
  at 0x608660c5b080: data    4 next: 0x608660c5b0a0
  at 0x608660c5b0a0: data    5 next: 0

yields

set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 5 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5ad90
  at 0x608660c5ad90: data    2 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5b060
  at 0x608660c5b060: data    8 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff13ef2cb0 and contained 7 objects 
 list was at address 0x7fff13ef2cb0 m_head points to 0x608660c5a650
  at 0x608660c5a650: data    1 next: 0x608660c5ad90
  at 0x608660c5ad90: data    2 next: 0x608660c5a470
  at 0x608660c5a470: data    3 next: 0x608660c5ab80
  at 0x608660c5ab80: data    5 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5b060
  at 0x608660c5b060: data    8 next: 0

after_set:  
set contains a list at 0x7fff13ef2cb0: m_head points to 0x608660c5a650
list contains 5 elements:
  at 0x608660c5a650: data    1 next: 0x608660c5ad90
  at 0x608660c5ad90: data    2 next: 0x608660c5a9a0
  at 0x608660c5a9a0: data    6 next: 0x608660c5a6d0
  at 0x608660c5a6d0: data    7 next: 0x608660c5b060
  at 0x608660c5b060: data    8 next: 0

 returns true 


passed   operation -=

Passed 58 of 58 tests

testWrappedUnsignedSet(): Passed 58 of 58 tests

JoesSetTestBench.cpp done
