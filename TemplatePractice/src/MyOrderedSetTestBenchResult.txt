/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 24 2025 at 18:18:39



****************** Test Name  *******************

*              Default Constructor              *

****************** Test Name  *******************

passed default constructor produced empty set &0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


****************** Test Name  *******************

*                 operator+=(T)                 *

****************** Test Name  *******************

 .. added 5 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc8780
list contains 1 elements:
  at 0x56626efc8780: data    5 next: 0

 .. added 3 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc8ac0
list contains 2 elements:
  at 0x56626efc8ac0: data    3 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0

 .. added 7 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc8ac0
list contains 3 elements:
  at 0x56626efc8ac0: data    3 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0

 .. added 4 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc8ac0
list contains 4 elements:
  at 0x56626efc8ac0: data    3 next: 0x56626efc8e50
  at 0x56626efc8e50: data    4 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0

 .. added 6 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc8ac0
list contains 5 elements:
  at 0x56626efc8ac0: data    3 next: 0x56626efc8e50
  at 0x56626efc8e50: data    4 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc9090
  at 0x56626efc9090: data    6 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0

 .. added 8 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc8ac0
list contains 6 elements:
  at 0x56626efc8ac0: data    3 next: 0x56626efc8e50
  at 0x56626efc8e50: data    4 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc9090
  at 0x56626efc9090: data    6 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0x56626efc9330
  at 0x56626efc9330: data    8 next: 0

 .. added 2 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc9640
list contains 7 elements:
  at 0x56626efc9640: data    2 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    3 next: 0x56626efc8e50
  at 0x56626efc8e50: data    4 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc9090
  at 0x56626efc9090: data    6 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0x56626efc9330
  at 0x56626efc9330: data    8 next: 0

 .. added 1 to set produces @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc99c0
list contains 8 elements:
  at 0x56626efc99c0: data    1 next: 0x56626efc9640
  at 0x56626efc9640: data    2 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    3 next: 0x56626efc8e50
  at 0x56626efc8e50: data    4 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc9090
  at 0x56626efc9090: data    6 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0x56626efc9330
  at 0x56626efc9330: data    8 next: 0

Test adding stressing inputs
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854c00 and contained 0 objects 
 list was at address 0x7ffff8854c00 m_head points to 0

after_set:  
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc99c0
list contains 8 elements:
  at 0x56626efc99c0: data    1 next: 0x56626efc9640
  at 0x56626efc9640: data    2 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    3 next: 0x56626efc8e50
  at 0x56626efc8e50: data    4 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0x56626efc9090
  at 0x56626efc9090: data    6 next: 0x56626efc8c70
  at 0x56626efc8c70: data    7 next: 0x56626efc9330
  at 0x56626efc9330: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


****************** Test Name  *******************

*                  buildSet()                   *

****************** Test Name  *******************

Test buildSet(stressing_inputs)
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


****************** Test Name  *******************

*                  set.clear()                  *

****************** Test Name  *******************

buildSet @0x7ffff8854c00
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc9330
list contains 8 elements:
  at 0x56626efc9330: data    1 next: 0x56626efc99c0
  at 0x56626efc99c0: data    2 next: 0x56626efc8780
  at 0x56626efc8780: data    3 next: 0x56626efc8c70
  at 0x56626efc8c70: data    4 next: 0x56626efc8e50
  at 0x56626efc8e50: data    5 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    6 next: 0x56626efc9090
  at 0x56626efc9090: data    7 next: 0x56626efc9640
  at 0x56626efc9640: data    8 next: 0
passed after set.clear()set is @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


****************** Test Name  *******************

*                  set.reset()                  *

****************** Test Name  *******************

buildSet @0x7ffff8854c00
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc9640
list contains 8 elements:
  at 0x56626efc9640: data    1 next: 0x56626efc9330
  at 0x56626efc9330: data    2 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    3 next: 0x56626efc8c70
  at 0x56626efc8c70: data    4 next: 0x56626efc9090
  at 0x56626efc9090: data    5 next: 0x56626efc8780
  at 0x56626efc8780: data    6 next: 0x56626efc8e50
  at 0x56626efc8e50: data    7 next: 0x56626efc99c0
  at 0x56626efc99c0: data    8 next: 0
passed after set.reset(),
set  @0x7ffff8854c00: 
set contains a list at 0x7ffff8854c00: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


****************** Test Name  *******************

*               copy constructor                *

****************** Test Name  *******************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854c00 and contained 8 objects 
 list was at address 0x7ffff8854c00 m_head points to 0x56626efc99c0
  at 0x56626efc99c0: data    1 next: 0x56626efc9640
  at 0x56626efc9640: data    2 next: 0x56626efc8780
  at 0x56626efc8780: data    3 next: 0x56626efc8c70
  at 0x56626efc8c70: data    4 next: 0x56626efc8e50
  at 0x56626efc8e50: data    5 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    6 next: 0x56626efc9090
  at 0x56626efc9090: data    7 next: 0x56626efc9330
  at 0x56626efc9330: data    8 next: 0

after_set:  @0x7ffff8854c10
set contains a list at 0x7ffff8854c10: m_head points to 0x56626efc9f30
list contains 8 elements:
  at 0x56626efc9f30: data    1 next: 0x56626efc9f50
  at 0x56626efc9f50: data    2 next: 0x56626efc9f70
  at 0x56626efc9f70: data    3 next: 0x56626efc9f90
  at 0x56626efc9f90: data    4 next: 0x56626efc9fb0
  at 0x56626efc9fb0: data    5 next: 0x56626efc9fd0
  at 0x56626efc9fd0: data    6 next: 0x56626efc9ff0
  at 0x56626efc9ff0: data    7 next: 0x56626efca010
  at 0x56626efca010: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed : 
set      @0x7ffff8854c00 :
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc99c0
list contains 8 elements:
  at 0x56626efc99c0: data    1 next: 0x56626efc9640
  at 0x56626efc9640: data    2 next: 0x56626efc8780
  at 0x56626efc8780: data    3 next: 0x56626efc8c70
  at 0x56626efc8c70: data    4 next: 0x56626efc8e50
  at 0x56626efc8e50: data    5 next: 0x56626efc8ac0
  at 0x56626efc8ac0: data    6 next: 0x56626efc9090
  at 0x56626efc9090: data    7 next: 0x56626efc9330
  at 0x56626efc9330: data    8 next: 0

copy_set @0x7ffff8854c10 :
set contains a list at 0x7ffff8854c10: m_head points to 0x56626efc9f30
list contains 8 elements:
  at 0x56626efc9f30: data    1 next: 0x56626efc9f50
  at 0x56626efc9f50: data    2 next: 0x56626efc9f70
  at 0x56626efc9f70: data    3 next: 0x56626efc9f90
  at 0x56626efc9f90: data    4 next: 0x56626efc9fb0
  at 0x56626efc9fb0: data    5 next: 0x56626efc9fd0
  at 0x56626efc9fd0: data    6 next: 0x56626efc9ff0
  at 0x56626efc9ff0: data    7 next: 0x56626efca010
  at 0x56626efca010: data    8 next: 0


Passed 6 of 6 tests


****************** Test Name  *******************

*            operator=(MyOrderedSet)            *

****************** Test Name  *******************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854c00 and contained 8 objects 
 list was at address 0x7ffff8854c00 m_head points to 0x56626efc9330
  at 0x56626efc9330: data    1 next: 0x56626efc9e30
  at 0x56626efc9e30: data    2 next: 0x56626efc9ed0
  at 0x56626efc9ed0: data    3 next: 0x56626efc9e90
  at 0x56626efc9e90: data    4 next: 0x56626efc9ef0
  at 0x56626efc9ef0: data    5 next: 0x56626efc9e70
  at 0x56626efc9e70: data    6 next: 0x56626efc9eb0
  at 0x56626efc9eb0: data    7 next: 0x56626efc9e50
  at 0x56626efc9e50: data    8 next: 0

after_set:  @0x7ffff8854c20
set contains a list at 0x7ffff8854c20: m_head points to 0x56626efca030
list contains 8 elements:
  at 0x56626efca030: data    1 next: 0x56626efca050
  at 0x56626efca050: data    2 next: 0x56626efca070
  at 0x56626efca070: data    3 next: 0x56626efca090
  at 0x56626efca090: data    4 next: 0x56626efca0b0
  at 0x56626efca0b0: data    5 next: 0x56626efca0d0
  at 0x56626efca0d0: data    6 next: 0x56626efca0f0
  at 0x56626efca0f0: data    7 next: 0x56626efca110
  at 0x56626efca110: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

set          @0x7ffff8854c00 :
set contains a list at 0x7ffff8854c00: m_head points to 0x56626efc9330
list contains 8 elements:
  at 0x56626efc9330: data    1 next: 0x56626efc9e30
  at 0x56626efc9e30: data    2 next: 0x56626efc9ed0
  at 0x56626efc9ed0: data    3 next: 0x56626efc9e90
  at 0x56626efc9e90: data    4 next: 0x56626efc9ef0
  at 0x56626efc9ef0: data    5 next: 0x56626efc9e70
  at 0x56626efc9e70: data    6 next: 0x56626efc9eb0
  at 0x56626efc9eb0: data    7 next: 0x56626efc9e50
  at 0x56626efc9e50: data    8 next: 0

assigned_set @0x7ffff8854c20 :
set contains a list at 0x7ffff8854c10: m_head points to 0x56626efc9f30
list contains 8 elements:
  at 0x56626efc9f30: data    1 next: 0x56626efc9f50
  at 0x56626efc9f50: data    2 next: 0x56626efc9f70
  at 0x56626efc9f70: data    3 next: 0x56626efc9f90
  at 0x56626efc9f90: data    4 next: 0x56626efc9fb0
  at 0x56626efc9fb0: data    5 next: 0x56626efc9fd0
  at 0x56626efc9fd0: data    6 next: 0x56626efc9ff0
  at 0x56626efc9ff0: data    7 next: 0x56626efca010
  at 0x56626efca010: data    8 next: 0

passed 

Passed 7 of 7 tests


****************** Test Name  *******************

*              operator+(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efc8ac0
list contains 1 elements:
  at 0x56626efc8ac0: data    5 next: 0
set + 3 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efc9640
list contains 2 elements:
  at 0x56626efc9640: data    3 next: 0x56626efc8780
  at 0x56626efc8780: data    5 next: 0
set + 7 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efc9330
list contains 3 elements:
  at 0x56626efc9330: data    3 next: 0x56626efc9e30
  at 0x56626efc9e30: data    5 next: 0x56626efc9ed0
  at 0x56626efc9ed0: data    7 next: 0
set + 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efc9e70
list contains 4 elements:
  at 0x56626efc9e70: data    3 next: 0x56626efca1c0
  at 0x56626efca1c0: data    4 next: 0x56626efc9eb0
  at 0x56626efc9eb0: data    5 next: 0x56626efc9f10
  at 0x56626efc9f10: data    7 next: 0
set + 6 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca230
list contains 5 elements:
  at 0x56626efca230: data    3 next: 0x56626efca250
  at 0x56626efca250: data    4 next: 0x56626efca270
  at 0x56626efca270: data    5 next: 0x56626efca2b0
  at 0x56626efca2b0: data    6 next: 0x56626efca290
  at 0x56626efca290: data    7 next: 0
set + 8 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca350
list contains 6 elements:
  at 0x56626efca350: data    3 next: 0x56626efca370
  at 0x56626efca370: data    4 next: 0x56626efca390
  at 0x56626efca390: data    5 next: 0x56626efca3b0
  at 0x56626efca3b0: data    6 next: 0x56626efca3d0
  at 0x56626efca3d0: data    7 next: 0x56626efca3f0
  at 0x56626efca3f0: data    8 next: 0
set + 2 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca520
list contains 7 elements:
  at 0x56626efca520: data    2 next: 0x56626efca460
  at 0x56626efca460: data    3 next: 0x56626efca480
  at 0x56626efca480: data    4 next: 0x56626efca4a0
  at 0x56626efca4a0: data    5 next: 0x56626efca4c0
  at 0x56626efca4c0: data    6 next: 0x56626efca4e0
  at 0x56626efca4e0: data    7 next: 0x56626efca500
  at 0x56626efca500: data    8 next: 0
set + 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca6b0
list contains 8 elements:
  at 0x56626efca6b0: data    1 next: 0x56626efca5d0
  at 0x56626efca5d0: data    2 next: 0x56626efca5f0
  at 0x56626efca5f0: data    3 next: 0x56626efca610
  at 0x56626efca610: data    4 next: 0x56626efca630
  at 0x56626efca630: data    5 next: 0x56626efca650
  at 0x56626efca650: data    6 next: 0x56626efca670
  at 0x56626efca670: data    7 next: 0x56626efca690
  at 0x56626efca690: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854aa0 and contained 7 objects 
 list was at address 0x7ffff8854aa0 m_head points to 0x56626efca520
  at 0x56626efca520: data    2 next: 0x56626efca460
  at 0x56626efca460: data    3 next: 0x56626efca480
  at 0x56626efca480: data    4 next: 0x56626efca4a0
  at 0x56626efca4a0: data    5 next: 0x56626efca4c0
  at 0x56626efca4c0: data    6 next: 0x56626efca4e0
  at 0x56626efca4e0: data    7 next: 0x56626efca500
  at 0x56626efca500: data    8 next: 0

after_set:  @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca6b0
list contains 8 elements:
  at 0x56626efca6b0: data    1 next: 0x56626efca5d0
  at 0x56626efca5d0: data    2 next: 0x56626efca5f0
  at 0x56626efca5f0: data    3 next: 0x56626efca610
  at 0x56626efca610: data    4 next: 0x56626efca630
  at 0x56626efca630: data    5 next: 0x56626efca650
  at 0x56626efca650: data    6 next: 0x56626efca670
  at 0x56626efca670: data    7 next: 0x56626efca690
  at 0x56626efca690: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

****************** Test Name  *******************

*              operator+(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca4e0
list contains 1 elements:
  at 0x56626efca4e0: data    1 next: 0
set + 2 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca480
list contains 2 elements:
  at 0x56626efca480: data    1 next: 0x56626efca460
  at 0x56626efca460: data    2 next: 0
set + 3 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca5d0
list contains 3 elements:
  at 0x56626efca5d0: data    1 next: 0x56626efca5f0
  at 0x56626efca5f0: data    2 next: 0x56626efca610
  at 0x56626efca610: data    3 next: 0
set + 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca670
list contains 4 elements:
  at 0x56626efca670: data    1 next: 0x56626efca690
  at 0x56626efca690: data    2 next: 0x56626efca6b0
  at 0x56626efca6b0: data    3 next: 0x56626efca7d0
  at 0x56626efca7d0: data    4 next: 0
set + 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca870
list contains 4 elements:
  at 0x56626efca870: data    1 next: 0x56626efca890
  at 0x56626efca890: data    2 next: 0x56626efca8b0
  at 0x56626efca8b0: data    3 next: 0x56626efca8d0
  at 0x56626efca8d0: data    4 next: 0
set + 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efca950
list contains 4 elements:
  at 0x56626efca950: data    1 next: 0x56626efca970
  at 0x56626efca970: data    2 next: 0x56626efca990
  at 0x56626efca990: data    3 next: 0x56626efca9b0
  at 0x56626efca9b0: data    4 next: 0
set + 3 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcaa30
list contains 4 elements:
  at 0x56626efcaa30: data    1 next: 0x56626efcaa50
  at 0x56626efcaa50: data    2 next: 0x56626efcaa70
  at 0x56626efcaa70: data    3 next: 0x56626efcaa90
  at 0x56626efcaa90: data    4 next: 0
set + 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcab10
list contains 4 elements:
  at 0x56626efcab10: data    1 next: 0x56626efcab30
  at 0x56626efcab30: data    2 next: 0x56626efcab50
  at 0x56626efcab50: data    3 next: 0x56626efcab70
  at 0x56626efcab70: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854aa0 and contained 4 objects 
 list was at address 0x7ffff8854aa0 m_head points to 0x56626efcaa30
  at 0x56626efcaa30: data    1 next: 0x56626efcaa50
  at 0x56626efcaa50: data    2 next: 0x56626efcaa70
  at 0x56626efcaa70: data    3 next: 0x56626efcaa90
  at 0x56626efcaa90: data    4 next: 0

after_set:  @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcab10
list contains 4 elements:
  at 0x56626efcab10: data    1 next: 0x56626efcab30
  at 0x56626efcab30: data    2 next: 0x56626efcab50
  at 0x56626efcab50: data    3 next: 0x56626efcab70
  at 0x56626efcab70: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 9 of 9 tests


****************** Test Name  *******************

*              operator-(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -
buildSet @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcab10
list contains 8 elements:
  at 0x56626efcab10: data    1 next: 0x56626efcaa90
  at 0x56626efcaa90: data    2 next: 0x56626efcaa70
  at 0x56626efcaa70: data    3 next: 0x56626efcaa50
  at 0x56626efcaa50: data    4 next: 0x56626efcaa30
  at 0x56626efcaa30: data    5 next: 0x56626efca500
  at 0x56626efca500: data    6 next: 0x56626efcab70
  at 0x56626efcab70: data    7 next: 0x56626efcabc0
  at 0x56626efcabc0: data    8 next: 0
set - 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcad10
list contains 7 elements:
  at 0x56626efcad10: data    1 next: 0x56626efcad30
  at 0x56626efcad30: data    2 next: 0x56626efcad50
  at 0x56626efcad50: data    3 next: 0x56626efcad90
  at 0x56626efcad90: data    5 next: 0x56626efcadb0
  at 0x56626efcadb0: data    6 next: 0x56626efcadd0
  at 0x56626efcadd0: data    7 next: 0x56626efcadf0
  at 0x56626efcadf0: data    8 next: 0
set - 5 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcabc0
list contains 6 elements:
  at 0x56626efcabc0: data    1 next: 0x56626efcab70
  at 0x56626efcab70: data    2 next: 0x56626efcae40
  at 0x56626efcae40: data    3 next: 0x56626efcae80
  at 0x56626efcae80: data    6 next: 0x56626efcaea0
  at 0x56626efcaea0: data    7 next: 0x56626efcaec0
  at 0x56626efcaec0: data    8 next: 0
set - 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcadf0
list contains 5 elements:
  at 0x56626efcadf0: data    2 next: 0x56626efcaf50
  at 0x56626efcaf50: data    3 next: 0x56626efcaf70
  at 0x56626efcaf70: data    6 next: 0x56626efcaf90
  at 0x56626efcaf90: data    7 next: 0x56626efcafb0
  at 0x56626efcafb0: data    8 next: 0
set - 8 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcabc0
list contains 4 elements:
  at 0x56626efcabc0: data    2 next: 0x56626efcae60
  at 0x56626efcae60: data    3 next: 0x56626efcb070
  at 0x56626efcb070: data    6 next: 0x56626efcb090
  at 0x56626efcb090: data    7 next: 0
set - 2 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb0b0
list contains 3 elements:
  at 0x56626efcb0b0: data    3 next: 0x56626efcb130
  at 0x56626efcb130: data    6 next: 0x56626efcb150
  at 0x56626efcb150: data    7 next: 0
set - 7 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcadf0
list contains 2 elements:
  at 0x56626efcadf0: data    3 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 10 of 10 tests


****************** Test Name  *******************

*             operator+=(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb1a0
list contains 1 elements:
  at 0x56626efcb1a0: data    5 next: 0
set += 3 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb130
list contains 2 elements:
  at 0x56626efcb130: data    3 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0
set += 7 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb130
list contains 3 elements:
  at 0x56626efcb130: data    3 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0
set += 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb130
list contains 4 elements:
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0
set += 6 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb130
list contains 5 elements:
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb460
  at 0x56626efcb460: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0
set += 8 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb130
list contains 6 elements:
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb460
  at 0x56626efcb460: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcb580
  at 0x56626efcb580: data    8 next: 0
set += 2 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb690
list contains 7 elements:
  at 0x56626efcb690: data    2 next: 0x56626efcb130
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb460
  at 0x56626efcb460: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcb580
  at 0x56626efcb580: data    8 next: 0
set += 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb800
list contains 8 elements:
  at 0x56626efcb800: data    1 next: 0x56626efcb690
  at 0x56626efcb690: data    2 next: 0x56626efcb130
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb460
  at 0x56626efcb460: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcb580
  at 0x56626efcb580: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854aa0 and contained 7 objects 
 list was at address 0x7ffff8854aa0 m_head points to 0x56626efcb690
  at 0x56626efcb690: data    2 next: 0x56626efcb130
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb460
  at 0x56626efcb460: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcb580
  at 0x56626efcb580: data    8 next: 0

after_set:  
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb800
list contains 8 elements:
  at 0x56626efcb800: data    1 next: 0x56626efcb690
  at 0x56626efcb690: data    2 next: 0x56626efcb130
  at 0x56626efcb130: data    3 next: 0x56626efcb360
  at 0x56626efcb360: data    4 next: 0x56626efcb1a0
  at 0x56626efcb1a0: data    5 next: 0x56626efcb460
  at 0x56626efcb460: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcb580
  at 0x56626efcb580: data    8 next: 0

 returns true 

passed   operation +=

Passed 11 of 11 tests


****************** Test Name  *******************

*             operator+=(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 1 elements:
  at 0x56626efcb460: data    1 next: 0
set += 2 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 2 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0
set += 3 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 3 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0
set += 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0
set += 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0
set += 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0
set += 3 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0
set += 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854aa0 and contained 4 objects 
 list was at address 0x7ffff8854aa0 m_head points to 0x56626efcb460
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0

after_set:  
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb580
  at 0x56626efcb580: data    3 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    4 next: 0

 returns true 

passed   operation +=

Passed 12 of 12 tests


****************** Test Name  *******************

*             operator-=(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -=
buildSet @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb580
list contains 8 elements:
  at 0x56626efcb580: data    1 next: 0x56626efcb130
  at 0x56626efcb130: data    2 next: 0x56626efcb460
  at 0x56626efcb460: data    3 next: 0x56626efcbd70
  at 0x56626efcbd70: data    4 next: 0x56626efcbd90
  at 0x56626efcbd90: data    5 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0x56626efcbdd0
  at 0x56626efcbdd0: data    7 next: 0x56626efcbdf0
  at 0x56626efcbdf0: data    8 next: 0
set -= 1 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb130
list contains 7 elements:
  at 0x56626efcb130: data    2 next: 0x56626efcb460
  at 0x56626efcb460: data    3 next: 0x56626efcbd70
  at 0x56626efcbd70: data    4 next: 0x56626efcbd90
  at 0x56626efcbd90: data    5 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0x56626efcbdd0
  at 0x56626efcbdd0: data    7 next: 0x56626efcbdf0
  at 0x56626efcbdf0: data    8 next: 0
set -= 2 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 6 elements:
  at 0x56626efcb460: data    3 next: 0x56626efcbd70
  at 0x56626efcbd70: data    4 next: 0x56626efcbd90
  at 0x56626efcbd90: data    5 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0x56626efcbdd0
  at 0x56626efcbdd0: data    7 next: 0x56626efcbdf0
  at 0x56626efcbdf0: data    8 next: 0
set -= 8 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 5 elements:
  at 0x56626efcb460: data    3 next: 0x56626efcbd70
  at 0x56626efcbd70: data    4 next: 0x56626efcbd90
  at 0x56626efcbd90: data    5 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0x56626efcbdd0
  at 0x56626efcbdd0: data    7 next: 0
set -= 5 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 4 elements:
  at 0x56626efcb460: data    3 next: 0x56626efcbd70
  at 0x56626efcbd70: data    4 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0x56626efcbdd0
  at 0x56626efcbdd0: data    7 next: 0
set -= 4 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 3 elements:
  at 0x56626efcb460: data    3 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0x56626efcbdd0
  at 0x56626efcbdd0: data    7 next: 0
set -= 7 results in set @0x7ffff8854aa0
set contains a list at 0x7ffff8854aa0: m_head points to 0x56626efcb460
list contains 2 elements:
  at 0x56626efcb460: data    3 next: 0x56626efcbdb0
  at 0x56626efcbdb0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 13 of 13 tests


****************** Test Name  *******************

*                 .isMember(T)                  *

****************** Test Name  *******************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 14 of 14 tests


****************** Test Name  *******************

*             relational operators              *

****************** Test Name  *******************

    ************* Test Phase **************
    *   { empty }.operator==({ empty })   *
    ************* Test Phase **************

      { <empty list> } == { <empty list> } returns true 

    ************* Test Phase **************
    *   { empty }.operator!=({ empty })   *
    ************* Test Phase **************

      { <empty list> } != { <empty list> } returns false
    ************* Test Phase **************
    *    { 1-4 }.operator==({ empty })    *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == { <empty list> } returns false
    ************* Test Phase **************
    *    { 1-4 }.operator!=({ empty })    *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != { <empty list> } returns true 
    ************* Test Phase **************
    *    { empty }.operator==({ 1-4 })    *
    ************* Test Phase **************

      { <empty list> } == {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *    { empty }.operator!=({ 1-4 })    *
    ************* Test Phase **************

      { <empty list> } != {  1,  2,  3, 4 } returns true 
    ************* Test Phase **************
    *     { 1-4 }.operator==({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 
    ************* Test Phase **************
    *     { 1-4 }.operator!=({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *     { 1-4 }.operator==({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 
    ************* Test Phase **************
    *     { 1-4 }.operator!=({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *     { 1-4 }.operator==({ 5-8 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false
    ************* Test Phase **************
    *     { 1-4 }.operator!=({ 5-8 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 
    ************* Test Phase **************
    *     { 5-8 }.operator==({ 1-4 })     *
    ************* Test Phase **************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *     { 5-8 }.operator!=({ 1-4 })     *
    ************* Test Phase **************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 
Passed 28 of 28 tests

passed : relational operators == !=

Passed 28 of 28 tests


****************** Test Name  *******************

*            operator+(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcb9a0
list contains 7 elements:
  at 0x56626efcb9a0: data    1 next: 0x56626efcb290
  at 0x56626efcb290: data    2 next: 0x56626efcc440
  at 0x56626efcc440: data    3 next: 0x56626efcc460
  at 0x56626efcc460: data    5 next: 0x56626efcc480
  at 0x56626efcc480: data    6 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    7 next: 0x56626efcc420
  at 0x56626efcc420: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcb9a0
  at 0x56626efcb9a0: data    1 next: 0x56626efcb290
  at 0x56626efcb290: data    2 next: 0x56626efcc440
  at 0x56626efcc440: data    3 next: 0x56626efcc460
  at 0x56626efcc460: data    5 next: 0x56626efcc480
  at 0x56626efcc480: data    6 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    7 next: 0x56626efcc420
  at 0x56626efcc420: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc600
list contains 7 elements:
  at 0x56626efcc600: data    1 next: 0x56626efcc620
  at 0x56626efcc620: data    2 next: 0x56626efcc640
  at 0x56626efcc640: data    3 next: 0x56626efcc660
  at 0x56626efcc660: data    5 next: 0x56626efcc680
  at 0x56626efcc680: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 0 objects 
 list was at address 0x7ffff8854a60 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc600
list contains 7 elements:
  at 0x56626efcc600: data    1 next: 0x56626efcc620
  at 0x56626efcc620: data    2 next: 0x56626efcc640
  at 0x56626efcc640: data    3 next: 0x56626efcc660
  at 0x56626efcc660: data    5 next: 0x56626efcc680
  at 0x56626efcc680: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 29 of 29 tests

    ************* Test Phase **************
    *operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc590
list contains 7 elements:
  at 0x56626efcc590: data    1 next: 0x56626efcc570
  at 0x56626efcc570: data    2 next: 0x56626efcc550
  at 0x56626efcc550: data    3 next: 0x56626efcc530
  at 0x56626efcc530: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    7 next: 0x56626efcc400
  at 0x56626efcc400: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 0 objects 
 list was at address 0x7ffff8854a50 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc6c0
list contains 7 elements:
  at 0x56626efcc6c0: data    1 next: 0x56626efcc600
  at 0x56626efcc600: data    2 next: 0x56626efcc620
  at 0x56626efcc620: data    3 next: 0x56626efcc640
  at 0x56626efcc640: data    5 next: 0x56626efcc660
  at 0x56626efcc660: data    6 next: 0x56626efcc680
  at 0x56626efcc680: data    7 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 7 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcc590
  at 0x56626efcc590: data    1 next: 0x56626efcc570
  at 0x56626efcc570: data    2 next: 0x56626efcc550
  at 0x56626efcc550: data    3 next: 0x56626efcc530
  at 0x56626efcc530: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    7 next: 0x56626efcc400
  at 0x56626efcc400: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc6c0
list contains 7 elements:
  at 0x56626efcc6c0: data    1 next: 0x56626efcc600
  at 0x56626efcc600: data    2 next: 0x56626efcc620
  at 0x56626efcc620: data    3 next: 0x56626efcc640
  at 0x56626efcc640: data    5 next: 0x56626efcc660
  at 0x56626efcc660: data    6 next: 0x56626efcc680
  at 0x56626efcc680: data    7 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 30 of 30 tests

    ************* Test Phase **************
    *operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc4a0
list contains 7 elements:
  at 0x56626efcc4a0: data    1 next: 0x56626efcc480
  at 0x56626efcc480: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc440
  at 0x56626efcc440: data    5 next: 0x56626efcb290
  at 0x56626efcb290: data    6 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    7 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc590
list contains 3 elements:
  at 0x56626efcc590: data    3 next: 0x56626efcc570
  at 0x56626efcc570: data    4 next: 0x56626efcc550
  at 0x56626efcc550: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc4a0
  at 0x56626efcc4a0: data    1 next: 0x56626efcc480
  at 0x56626efcc480: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc440
  at 0x56626efcc440: data    5 next: 0x56626efcb290
  at 0x56626efcb290: data    6 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    7 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc780
list contains 8 elements:
  at 0x56626efcc780: data    1 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    2 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    3 next: 0x56626efcc860
  at 0x56626efcc860: data    4 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    5 next: 0x56626efcc800
  at 0x56626efcc800: data    6 next: 0x56626efcc820
  at 0x56626efcc820: data    7 next: 0x56626efcc840
  at 0x56626efcc840: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 3 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcc590
  at 0x56626efcc590: data    3 next: 0x56626efcc570
  at 0x56626efcc570: data    4 next: 0x56626efcc550
  at 0x56626efcc550: data    5 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc780
list contains 8 elements:
  at 0x56626efcc780: data    1 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    2 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    3 next: 0x56626efcc860
  at 0x56626efcc860: data    4 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    5 next: 0x56626efcc800
  at 0x56626efcc800: data    6 next: 0x56626efcc820
  at 0x56626efcc820: data    7 next: 0x56626efcc840
  at 0x56626efcc840: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 31 of 31 tests


****************** Test Name  *******************

*            operator|(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc6c0
list contains 7 elements:
  at 0x56626efcc6c0: data    1 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    2 next: 0x56626efcc400
  at 0x56626efcc400: data    3 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc530
  at 0x56626efcc530: data    7 next: 0x56626efcc420
  at 0x56626efcc420: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc6c0
  at 0x56626efcc6c0: data    1 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    2 next: 0x56626efcc400
  at 0x56626efcc400: data    3 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc530
  at 0x56626efcc530: data    7 next: 0x56626efcc420
  at 0x56626efcc420: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc550
list contains 7 elements:
  at 0x56626efcc550: data    1 next: 0x56626efcc860
  at 0x56626efcc860: data    2 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    3 next: 0x56626efcc800
  at 0x56626efcc800: data    5 next: 0x56626efcc820
  at 0x56626efcc820: data    6 next: 0x56626efcc840
  at 0x56626efcc840: data    7 next: 0x56626efcc590
  at 0x56626efcc590: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 0 objects 
 list was at address 0x7ffff8854a60 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc550
list contains 7 elements:
  at 0x56626efcc550: data    1 next: 0x56626efcc860
  at 0x56626efcc860: data    2 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    3 next: 0x56626efcc800
  at 0x56626efcc800: data    5 next: 0x56626efcc820
  at 0x56626efcc820: data    6 next: 0x56626efcc840
  at 0x56626efcc840: data    7 next: 0x56626efcc590
  at 0x56626efcc590: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 32 of 32 tests

    ************* Test Phase **************
    *operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcb290
list contains 7 elements:
  at 0x56626efcb290: data    1 next: 0x56626efcc440
  at 0x56626efcc440: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc480
  at 0x56626efcc480: data    5 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    6 next: 0x56626efcc570
  at 0x56626efcc570: data    7 next: 0x56626efcc600
  at 0x56626efcc600: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 0 objects 
 list was at address 0x7ffff8854a50 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc590
list contains 7 elements:
  at 0x56626efcc590: data    1 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    2 next: 0x56626efcc550
  at 0x56626efcc550: data    3 next: 0x56626efcc860
  at 0x56626efcc860: data    5 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    6 next: 0x56626efcc800
  at 0x56626efcc800: data    7 next: 0x56626efcc820
  at 0x56626efcc820: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 7 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcb290
  at 0x56626efcb290: data    1 next: 0x56626efcc440
  at 0x56626efcc440: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc480
  at 0x56626efcc480: data    5 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    6 next: 0x56626efcc570
  at 0x56626efcc570: data    7 next: 0x56626efcc600
  at 0x56626efcc600: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc590
list contains 7 elements:
  at 0x56626efcc590: data    1 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    2 next: 0x56626efcc550
  at 0x56626efcc550: data    3 next: 0x56626efcc860
  at 0x56626efcc860: data    5 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    6 next: 0x56626efcc800
  at 0x56626efcc800: data    7 next: 0x56626efcc820
  at 0x56626efcc820: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 33 of 33 tests

    ************* Test Phase **************
    *operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc510
list contains 7 elements:
  at 0x56626efcc510: data    1 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    2 next: 0x56626efcc400
  at 0x56626efcc400: data    3 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    5 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    6 next: 0x56626efcc840
  at 0x56626efcc840: data    7 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcb290
list contains 3 elements:
  at 0x56626efcb290: data    3 next: 0x56626efcc440
  at 0x56626efcc440: data    4 next: 0x56626efcc460
  at 0x56626efcc460: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc510
  at 0x56626efcc510: data    1 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    2 next: 0x56626efcc400
  at 0x56626efcc400: data    3 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    5 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    6 next: 0x56626efcc840
  at 0x56626efcc840: data    7 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc800
list contains 8 elements:
  at 0x56626efcc800: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc640
  at 0x56626efcc640: data    3 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    4 next: 0x56626efcc660
  at 0x56626efcc660: data    5 next: 0x56626efcc680
  at 0x56626efcc680: data    6 next: 0x56626efcc620
  at 0x56626efcc620: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 3 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcb290
  at 0x56626efcb290: data    3 next: 0x56626efcc440
  at 0x56626efcc440: data    4 next: 0x56626efcc460
  at 0x56626efcc460: data    5 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc800
list contains 8 elements:
  at 0x56626efcc800: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc640
  at 0x56626efcc640: data    3 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    4 next: 0x56626efcc660
  at 0x56626efcc660: data    5 next: 0x56626efcc680
  at 0x56626efcc680: data    6 next: 0x56626efcc620
  at 0x56626efcc620: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 34 of 34 tests


****************** Test Name  *******************

*            operator^(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc420
list contains 7 elements:
  at 0x56626efcc420: data    1 next: 0x56626efcc820
  at 0x56626efcc820: data    2 next: 0x56626efcc600
  at 0x56626efcc600: data    3 next: 0x56626efcc570
  at 0x56626efcc570: data    5 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    6 next: 0x56626efcc480
  at 0x56626efcc480: data    7 next: 0x56626efcc530
  at 0x56626efcc530: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc420
  at 0x56626efcc420: data    1 next: 0x56626efcc820
  at 0x56626efcc820: data    2 next: 0x56626efcc600
  at 0x56626efcc600: data    3 next: 0x56626efcc570
  at 0x56626efcc570: data    5 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    6 next: 0x56626efcc480
  at 0x56626efcc480: data    7 next: 0x56626efcc530
  at 0x56626efcc530: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc460
list contains 7 elements:
  at 0x56626efcc460: data    1 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    2 next: 0x56626efcc660
  at 0x56626efcc660: data    3 next: 0x56626efcc680
  at 0x56626efcc680: data    5 next: 0x56626efcc620
  at 0x56626efcc620: data    6 next: 0x56626efcc780
  at 0x56626efcc780: data    7 next: 0x56626efcb290
  at 0x56626efcb290: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 0 objects 
 list was at address 0x7ffff8854a60 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc460
list contains 7 elements:
  at 0x56626efcc460: data    1 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    2 next: 0x56626efcc660
  at 0x56626efcc660: data    3 next: 0x56626efcc680
  at 0x56626efcc680: data    5 next: 0x56626efcc620
  at 0x56626efcc620: data    6 next: 0x56626efcc780
  at 0x56626efcc780: data    7 next: 0x56626efcb290
  at 0x56626efcb290: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 35 of 35 tests

    ************* Test Phase **************
    *operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc6c0
list contains 7 elements:
  at 0x56626efcc6c0: data    1 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    2 next: 0x56626efcc400
  at 0x56626efcc400: data    3 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc440
  at 0x56626efcc440: data    7 next: 0x56626efcc590
  at 0x56626efcc590: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 0 objects 
 list was at address 0x7ffff8854a50 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcb290
list contains 7 elements:
  at 0x56626efcb290: data    1 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    5 next: 0x56626efcc660
  at 0x56626efcc660: data    6 next: 0x56626efcc680
  at 0x56626efcc680: data    7 next: 0x56626efcc620
  at 0x56626efcc620: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 7 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcc6c0
  at 0x56626efcc6c0: data    1 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    2 next: 0x56626efcc400
  at 0x56626efcc400: data    3 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc440
  at 0x56626efcc440: data    7 next: 0x56626efcc590
  at 0x56626efcc590: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcb290
list contains 7 elements:
  at 0x56626efcb290: data    1 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    5 next: 0x56626efcc660
  at 0x56626efcc660: data    6 next: 0x56626efcc680
  at 0x56626efcc680: data    7 next: 0x56626efcc620
  at 0x56626efcc620: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 36 of 36 tests

    ************* Test Phase **************
    *operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc600
  at 0x56626efcc600: data    2 next: 0x56626efcc820
  at 0x56626efcc820: data    3 next: 0x56626efcc420
  at 0x56626efcc420: data    5 next: 0x56626efcc780
  at 0x56626efcc780: data    6 next: 0x56626efcc840
  at 0x56626efcc840: data    7 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc6a0
list contains 3 elements:
  at 0x56626efcc6a0: data    3 next: 0x56626efcc400
  at 0x56626efcc400: data    4 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    5 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc570
  at 0x56626efcc570: data    1 next: 0x56626efcc600
  at 0x56626efcc600: data    2 next: 0x56626efcc820
  at 0x56626efcc820: data    3 next: 0x56626efcc420
  at 0x56626efcc420: data    5 next: 0x56626efcc780
  at 0x56626efcc780: data    6 next: 0x56626efcc840
  at 0x56626efcc840: data    7 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc640
list contains 6 elements:
  at 0x56626efcc640: data    1 next: 0x56626efcc550
  at 0x56626efcc550: data    2 next: 0x56626efcc860
  at 0x56626efcc860: data    4 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    6 next: 0x56626efcc800
  at 0x56626efcc800: data    7 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 3 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcc6a0
  at 0x56626efcc6a0: data    3 next: 0x56626efcc400
  at 0x56626efcc400: data    4 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    5 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc640
list contains 6 elements:
  at 0x56626efcc640: data    1 next: 0x56626efcc550
  at 0x56626efcc550: data    2 next: 0x56626efcc860
  at 0x56626efcc860: data    4 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    6 next: 0x56626efcc800
  at 0x56626efcc800: data    7 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 37 of 37 tests


****************** Test Name  *******************

*            operator&(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc620
list contains 7 elements:
  at 0x56626efcc620: data    1 next: 0x56626efcc590
  at 0x56626efcc590: data    2 next: 0x56626efcc440
  at 0x56626efcc440: data    3 next: 0x56626efcc510
  at 0x56626efcc510: data    5 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    6 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    7 next: 0x56626efcc600
  at 0x56626efcc600: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 38 of 38 tests

    ************* Test Phase **************
    *operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc6a0
list contains 7 elements:
  at 0x56626efcc6a0: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc800
  at 0x56626efcc800: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcc860
  at 0x56626efcc860: data    6 next: 0x56626efcc530
  at 0x56626efcc530: data    7 next: 0x56626efcc590
  at 0x56626efcc590: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 39 of 39 tests

    ************* Test Phase **************
    *operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc780
list contains 7 elements:
  at 0x56626efcc780: data    1 next: 0x56626efcc840
  at 0x56626efcc840: data    2 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    3 next: 0x56626efcc480
  at 0x56626efcc480: data    5 next: 0x56626efcc570
  at 0x56626efcc570: data    6 next: 0x56626efcc400
  at 0x56626efcc400: data    7 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc800
list contains 3 elements:
  at 0x56626efcc800: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    4 next: 0x56626efcc860
  at 0x56626efcc860: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 40 of 40 tests


****************** Test Name  *******************

*            operator-(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc530
list contains 7 elements:
  at 0x56626efcc530: data    1 next: 0x56626efcc640
  at 0x56626efcc640: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc680
  at 0x56626efcc680: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcc550
  at 0x56626efcc550: data    7 next: 0x56626efcc420
  at 0x56626efcc420: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc530
  at 0x56626efcc530: data    1 next: 0x56626efcc640
  at 0x56626efcc640: data    2 next: 0x56626efcc460
  at 0x56626efcc460: data    3 next: 0x56626efcc680
  at 0x56626efcc680: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcc550
  at 0x56626efcc550: data    7 next: 0x56626efcc420
  at 0x56626efcc420: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc780
list contains 7 elements:
  at 0x56626efcc780: data    1 next: 0x56626efcc620
  at 0x56626efcc620: data    2 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    3 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    5 next: 0x56626efcc660
  at 0x56626efcc660: data    6 next: 0x56626efcc800
  at 0x56626efcc800: data    7 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 0 objects 
 list was at address 0x7ffff8854a60 m_head points to 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcc780
list contains 7 elements:
  at 0x56626efcc780: data    1 next: 0x56626efcc620
  at 0x56626efcc620: data    2 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    3 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    5 next: 0x56626efcc660
  at 0x56626efcc660: data    6 next: 0x56626efcc800
  at 0x56626efcc800: data    7 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 41 of 41 tests

    ************* Test Phase **************
    *operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc480
  at 0x56626efcc480: data    2 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    3 next: 0x56626efcc840
  at 0x56626efcc840: data    5 next: 0x56626efcc860
  at 0x56626efcc860: data    6 next: 0x56626efcc590
  at 0x56626efcc590: data    7 next: 0x56626efcc530
  at 0x56626efcc530: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 42 of 42 tests

    ************* Test Phase **************
    *operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffff8854a50: m_head points to 0x56626efcc620
list contains 7 elements:
  at 0x56626efcc620: data    1 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    2 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    3 next: 0x56626efcc660
  at 0x56626efcc660: data    5 next: 0x56626efcc800
  at 0x56626efcc800: data    6 next: 0x56626efcc400
  at 0x56626efcc400: data    7 next: 0x56626efcc480
  at 0x56626efcc480: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffff8854a60: m_head points to 0x56626efcc6c0
list contains 3 elements:
  at 0x56626efcc6c0: data    3 next: 0x56626efcc840
  at 0x56626efcc840: data    4 next: 0x56626efcc860
  at 0x56626efcc860: data    5 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a50 and contained 7 objects 
 list was at address 0x7ffff8854a50 m_head points to 0x56626efcc620
  at 0x56626efcc620: data    1 next: 0x56626efcc4a0
  at 0x56626efcc4a0: data    2 next: 0x56626efcc7a0
  at 0x56626efcc7a0: data    3 next: 0x56626efcc660
  at 0x56626efcc660: data    5 next: 0x56626efcc800
  at 0x56626efcc800: data    6 next: 0x56626efcc400
  at 0x56626efcc400: data    7 next: 0x56626efcc480
  at 0x56626efcc480: data    8 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcb290
list contains 5 elements:
  at 0x56626efcb290: data    1 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    2 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    7 next: 0x56626efcc600
  at 0x56626efcc600: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854a60 and contained 3 objects 
 list was at address 0x7ffff8854a60 m_head points to 0x56626efcc6c0
  at 0x56626efcc6c0: data    3 next: 0x56626efcc840
  at 0x56626efcc840: data    4 next: 0x56626efcc860
  at 0x56626efcc860: data    5 next: 0

after_set:  @0x7ffff8854a70
set contains a list at 0x7ffff8854a70: m_head points to 0x56626efcb290
list contains 5 elements:
  at 0x56626efcb290: data    1 next: 0x56626efcc4f0
  at 0x56626efcc4f0: data    2 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    7 next: 0x56626efcc600
  at 0x56626efcc600: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 43 of 43 tests


****************** Test Name  *******************

*           operator+=(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 += 

set contains a list at 0x7ffff8854ac0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854ab0 and contained 7 objects 
 list was at address 0x7ffff8854ab0 m_head points to 0x56626efcc570
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

after_set:  
set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 returns true 


passed   operation +=

Passed 44 of 44 tests

    ************* Test Phase **************
    *operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffff8854ab0: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7ffff8854ac0: m_head points to 0x56626efcc6a0
list contains 7 elements:
  at 0x56626efcc6a0: data    1 next: 0x56626efcc440
  at 0x56626efcc440: data    2 next: 0x56626efcc590
  at 0x56626efcc590: data    3 next: 0x56626efcc530
  at 0x56626efcc530: data    5 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    6 next: 0x56626efcc570
  at 0x56626efcc570: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

yields

set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc510
list contains 7 elements:
  at 0x56626efcc510: data    1 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    2 next: 0x56626efcc600
  at 0x56626efcc600: data    3 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    5 next: 0x56626efcc840
  at 0x56626efcc840: data    6 next: 0x56626efcc860
  at 0x56626efcc860: data    7 next: 0x56626efcc620
  at 0x56626efcc620: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854ab0 and contained 0 objects 
 list was at address 0x7ffff8854ab0 m_head points to 0

after_set:  
set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc510
list contains 7 elements:
  at 0x56626efcc510: data    1 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    2 next: 0x56626efcc600
  at 0x56626efcc600: data    3 next: 0x56626efcc6c0
  at 0x56626efcc6c0: data    5 next: 0x56626efcc840
  at 0x56626efcc840: data    6 next: 0x56626efcc860
  at 0x56626efcc860: data    7 next: 0x56626efcc620
  at 0x56626efcc620: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 45 of 45 tests

    ************* Test Phase **************
    *operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 += 

set contains a list at 0x7ffff8854ac0: m_head points to 0x56626efcc510
list contains 3 elements:
  at 0x56626efcc510: data    3 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    4 next: 0x56626efcc600
  at 0x56626efcc600: data    5 next: 0

yields

set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 8 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc550
  at 0x56626efcc550: data    4 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854ab0 and contained 7 objects 
 list was at address 0x7ffff8854ab0 m_head points to 0x56626efcc570
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

after_set:  
set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 8 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc7c0
  at 0x56626efcc7c0: data    2 next: 0x56626efcc530
  at 0x56626efcc530: data    3 next: 0x56626efcc550
  at 0x56626efcc550: data    4 next: 0x56626efcc590
  at 0x56626efcc590: data    5 next: 0x56626efcc440
  at 0x56626efcc440: data    6 next: 0x56626efcc6a0
  at 0x56626efcc6a0: data    7 next: 0x56626efcc780
  at 0x56626efcc780: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests


****************** Test Name  *******************

*           operator|=(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc7e0
list contains 7 elements:
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

 |= 

set contains a list at 0x7ffff8854ac0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc7e0
list contains 7 elements:
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854ab0 and contained 7 objects 
 list was at address 0x7ffff8854ab0 m_head points to 0x56626efcc7e0
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

after_set:  
set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc7e0
list contains 7 elements:
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

 returns true 


passed   operation |=

Passed 47 of 47 tests

    ************* Test Phase **************
    *operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffff8854ab0: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7ffff8854ac0: m_head points to 0x56626efcb290
list contains 7 elements:
  at 0x56626efcb290: data    1 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    2 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    3 next: 0x56626efcc420
  at 0x56626efcc420: data    5 next: 0x56626efcc510
  at 0x56626efcc510: data    6 next: 0x56626efcc7e0
  at 0x56626efcc7e0: data    7 next: 0x56626efcc600
  at 0x56626efcc600: data    8 next: 0

yields

set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc960
  at 0x56626efcc960: data    2 next: 0x56626efcc980
  at 0x56626efcc980: data    3 next: 0x56626efcc9a0
  at 0x56626efcc9a0: data    5 next: 0x56626efcc9c0
  at 0x56626efcc9c0: data    6 next: 0x56626efcc9e0
  at 0x56626efcc9e0: data    7 next: 0x56626efcca00
  at 0x56626efcca00: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854ab0 and contained 0 objects 
 list was at address 0x7ffff8854ab0 m_head points to 0

after_set:  
set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc570
list contains 7 elements:
  at 0x56626efcc570: data    1 next: 0x56626efcc960
  at 0x56626efcc960: data    2 next: 0x56626efcc980
  at 0x56626efcc980: data    3 next: 0x56626efcc9a0
  at 0x56626efcc9a0: data    5 next: 0x56626efcc9c0
  at 0x56626efcc9c0: data    6 next: 0x56626efcc9e0
  at 0x56626efcc9e0: data    7 next: 0x56626efcca00
  at 0x56626efcca00: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 48 of 48 tests

    ************* Test Phase **************
    *operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc7e0
list contains 7 elements:
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

 |= 

set contains a list at 0x7ffff8854ac0: m_head points to 0x56626efcc570
list contains 3 elements:
  at 0x56626efcc570: data    3 next: 0x56626efcc960
  at 0x56626efcc960: data    4 next: 0x56626efcc980
  at 0x56626efcc980: data    5 next: 0

yields

set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc7e0
list contains 8 elements:
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efccaf0
  at 0x56626efccaf0: data    4 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffff8854ab0 and contained 7 objects 
 list was at address 0x7ffff8854ab0 m_head points to 0x56626efcc7e0
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

after_set:  
set contains a list at 0x7ffff8854ab0: m_head points to 0x56626efcc7e0
list contains 8 elements:
  at 0x56626efcc7e0: data    1 next: 0x56626efcc510
  at 0x56626efcc510: data    2 next: 0x56626efcc420
  at 0x56626efcc420: data    3 next: 0x56626efccaf0
  at 0x56626efccaf0: data    4 next: 0x56626efcc5b0
  at 0x56626efcc5b0: data    5 next: 0x56626efcb9a0
  at 0x56626efcb9a0: data    6 next: 0x56626efcb290
  at 0x56626efcb290: data    7 next: 0x56626efcc640
  at 0x56626efcc640: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests

Passed 49 of 49 tests

JoesSetTestBench.cpp done
