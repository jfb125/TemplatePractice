/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 25 2025 at 14:49:10



***************************** Test Name  ******************************

*                         Default Constructor                         *

***************************** Test Name  ******************************

passed default constructor produced empty set &0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


***************************** Test Name  ******************************

*                            operator+=(T)                            *

***************************** Test Name  ******************************

 .. added 5 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea7780
list contains 1 elements:
  at 0x568635ea7780: data    5 next: 0

 .. added 3 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea7ac0
list contains 2 elements:
  at 0x568635ea7ac0: data    3 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0

 .. added 7 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea7ac0
list contains 3 elements:
  at 0x568635ea7ac0: data    3 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0

 .. added 4 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea7ac0
list contains 4 elements:
  at 0x568635ea7ac0: data    3 next: 0x568635ea7e50
  at 0x568635ea7e50: data    4 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0

 .. added 6 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea7ac0
list contains 5 elements:
  at 0x568635ea7ac0: data    3 next: 0x568635ea7e50
  at 0x568635ea7e50: data    4 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea8090
  at 0x568635ea8090: data    6 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0

 .. added 8 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea7ac0
list contains 6 elements:
  at 0x568635ea7ac0: data    3 next: 0x568635ea7e50
  at 0x568635ea7e50: data    4 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea8090
  at 0x568635ea8090: data    6 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0x568635ea8330
  at 0x568635ea8330: data    8 next: 0

 .. added 2 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea8640
list contains 7 elements:
  at 0x568635ea8640: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7e50
  at 0x568635ea7e50: data    4 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea8090
  at 0x568635ea8090: data    6 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0x568635ea8330
  at 0x568635ea8330: data    8 next: 0

 .. added 1 to set produces @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea89c0
list contains 8 elements:
  at 0x568635ea89c0: data    1 next: 0x568635ea8640
  at 0x568635ea8640: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7e50
  at 0x568635ea7e50: data    4 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea8090
  at 0x568635ea8090: data    6 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0x568635ea8330
  at 0x568635ea8330: data    8 next: 0

Test adding stressing inputs
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd440 and contained 0 objects 
 list was at address 0x7ffc324cd440 m_head points to 0

after_set:  
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea89c0
list contains 8 elements:
  at 0x568635ea89c0: data    1 next: 0x568635ea8640
  at 0x568635ea8640: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7e50
  at 0x568635ea7e50: data    4 next: 0x568635ea7780
  at 0x568635ea7780: data    5 next: 0x568635ea8090
  at 0x568635ea8090: data    6 next: 0x568635ea7c70
  at 0x568635ea7c70: data    7 next: 0x568635ea8330
  at 0x568635ea8330: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


***************************** Test Name  ******************************

*                             buildSet()                              *

***************************** Test Name  ******************************

Test buildSet(stressing_inputs)
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


***************************** Test Name  ******************************

*                             set.clear()                             *

***************************** Test Name  ******************************

buildSet @0x7ffc324cd440
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea8330
list contains 8 elements:
  at 0x568635ea8330: data    1 next: 0x568635ea89c0
  at 0x568635ea89c0: data    2 next: 0x568635ea7780
  at 0x568635ea7780: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea7e50
  at 0x568635ea7e50: data    5 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    6 next: 0x568635ea8090
  at 0x568635ea8090: data    7 next: 0x568635ea8640
  at 0x568635ea8640: data    8 next: 0
passed after set.clear()set is @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


***************************** Test Name  ******************************

*                             set.reset()                             *

***************************** Test Name  ******************************

buildSet @0x7ffc324cd440
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea8640
list contains 8 elements:
  at 0x568635ea8640: data    1 next: 0x568635ea8330
  at 0x568635ea8330: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea8090
  at 0x568635ea8090: data    5 next: 0x568635ea7780
  at 0x568635ea7780: data    6 next: 0x568635ea7e50
  at 0x568635ea7e50: data    7 next: 0x568635ea89c0
  at 0x568635ea89c0: data    8 next: 0
passed after set.reset(),
set  @0x7ffc324cd440: 
set contains a list at 0x7ffc324cd440: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


***************************** Test Name  ******************************

*                          copy constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd440 and contained 8 objects 
 list was at address 0x7ffc324cd440 m_head points to 0x568635ea89c0
  at 0x568635ea89c0: data    1 next: 0x568635ea8640
  at 0x568635ea8640: data    2 next: 0x568635ea7780
  at 0x568635ea7780: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea7e50
  at 0x568635ea7e50: data    5 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    6 next: 0x568635ea8090
  at 0x568635ea8090: data    7 next: 0x568635ea8330
  at 0x568635ea8330: data    8 next: 0

after_set:  @0x7ffc324cd450
set contains a list at 0x7ffc324cd450: m_head points to 0x568635ea8f30
list contains 8 elements:
  at 0x568635ea8f30: data    1 next: 0x568635ea8f50
  at 0x568635ea8f50: data    2 next: 0x568635ea8f70
  at 0x568635ea8f70: data    3 next: 0x568635ea8f90
  at 0x568635ea8f90: data    4 next: 0x568635ea8fb0
  at 0x568635ea8fb0: data    5 next: 0x568635ea8fd0
  at 0x568635ea8fd0: data    6 next: 0x568635ea8ff0
  at 0x568635ea8ff0: data    7 next: 0x568635ea9010
  at 0x568635ea9010: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed : 
set      @0x7ffc324cd440 :
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea89c0
list contains 8 elements:
  at 0x568635ea89c0: data    1 next: 0x568635ea8640
  at 0x568635ea8640: data    2 next: 0x568635ea7780
  at 0x568635ea7780: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea7e50
  at 0x568635ea7e50: data    5 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    6 next: 0x568635ea8090
  at 0x568635ea8090: data    7 next: 0x568635ea8330
  at 0x568635ea8330: data    8 next: 0

copy_set @0x7ffc324cd450 :
set contains a list at 0x7ffc324cd450: m_head points to 0x568635ea8f30
list contains 8 elements:
  at 0x568635ea8f30: data    1 next: 0x568635ea8f50
  at 0x568635ea8f50: data    2 next: 0x568635ea8f70
  at 0x568635ea8f70: data    3 next: 0x568635ea8f90
  at 0x568635ea8f90: data    4 next: 0x568635ea8fb0
  at 0x568635ea8fb0: data    5 next: 0x568635ea8fd0
  at 0x568635ea8fd0: data    6 next: 0x568635ea8ff0
  at 0x568635ea8ff0: data    7 next: 0x568635ea9010
  at 0x568635ea9010: data    8 next: 0


Passed 6 of 6 tests


***************************** Test Name  ******************************

*                       operator=(MyOrderedSet)                       *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd440 and contained 8 objects 
 list was at address 0x7ffc324cd440 m_head points to 0x568635ea8330
  at 0x568635ea8330: data    1 next: 0x568635ea8e30
  at 0x568635ea8e30: data    2 next: 0x568635ea8ed0
  at 0x568635ea8ed0: data    3 next: 0x568635ea8e90
  at 0x568635ea8e90: data    4 next: 0x568635ea8ef0
  at 0x568635ea8ef0: data    5 next: 0x568635ea8e70
  at 0x568635ea8e70: data    6 next: 0x568635ea8eb0
  at 0x568635ea8eb0: data    7 next: 0x568635ea8e50
  at 0x568635ea8e50: data    8 next: 0

after_set:  @0x7ffc324cd460
set contains a list at 0x7ffc324cd460: m_head points to 0x568635ea9030
list contains 8 elements:
  at 0x568635ea9030: data    1 next: 0x568635ea9050
  at 0x568635ea9050: data    2 next: 0x568635ea9070
  at 0x568635ea9070: data    3 next: 0x568635ea9090
  at 0x568635ea9090: data    4 next: 0x568635ea90b0
  at 0x568635ea90b0: data    5 next: 0x568635ea90d0
  at 0x568635ea90d0: data    6 next: 0x568635ea90f0
  at 0x568635ea90f0: data    7 next: 0x568635ea9110
  at 0x568635ea9110: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

set               @0x7ffc324cd440 :
set contains a list at 0x7ffc324cd440: m_head points to 0x568635ea8330
list contains 8 elements:
  at 0x568635ea8330: data    1 next: 0x568635ea8e30
  at 0x568635ea8e30: data    2 next: 0x568635ea8ed0
  at 0x568635ea8ed0: data    3 next: 0x568635ea8e90
  at 0x568635ea8e90: data    4 next: 0x568635ea8ef0
  at 0x568635ea8ef0: data    5 next: 0x568635ea8e70
  at 0x568635ea8e70: data    6 next: 0x568635ea8eb0
  at 0x568635ea8eb0: data    7 next: 0x568635ea8e50
  at 0x568635ea8e50: data    8 next: 0

copy assigned_set @0x7ffc324cd460 :
set contains a list at 0x7ffc324cd450: m_head points to 0x568635ea8f30
list contains 8 elements:
  at 0x568635ea8f30: data    1 next: 0x568635ea8f50
  at 0x568635ea8f50: data    2 next: 0x568635ea8f70
  at 0x568635ea8f70: data    3 next: 0x568635ea8f90
  at 0x568635ea8f90: data    4 next: 0x568635ea8fb0
  at 0x568635ea8fb0: data    5 next: 0x568635ea8fd0
  at 0x568635ea8fd0: data    6 next: 0x568635ea8ff0
  at 0x568635ea8ff0: data    7 next: 0x568635ea9010
  at 0x568635ea9010: data    8 next: 0

passed 

Passed 7 of 7 tests


***************************** Test Name  ******************************

*                          move constructor                           *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd440 and contained 8 objects 
 list was at address 0x7ffc324cd440 m_head points to 0x568635ea8e50
  at 0x568635ea8e50: data    1 next: 0x568635ea89c0
  at 0x568635ea89c0: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea8090
  at 0x568635ea8090: data    5 next: 0x568635ea7780
  at 0x568635ea7780: data    6 next: 0x568635ea7e50
  at 0x568635ea7e50: data    7 next: 0x568635ea8640
  at 0x568635ea8640: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd470: m_head points to 0x568635ea8e50
list contains 8 elements:
  at 0x568635ea8e50: data    1 next: 0x568635ea89c0
  at 0x568635ea89c0: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea8090
  at 0x568635ea8090: data    5 next: 0x568635ea7780
  at 0x568635ea7780: data    6 next: 0x568635ea7e50
  at 0x568635ea7e50: data    7 next: 0x568635ea8640
  at 0x568635ea8640: data    8 next: 0

 returns true 

passed : 
set      @0x7ffc324cd440 :
set contains a list at 0x7ffc324cd440: m_head points to 0
list contains 0 elements:
  empty list

move_set @0x7ffc324cd470 :
set contains a list at 0x7ffc324cd470: m_head points to 0x568635ea8e50
list contains 8 elements:
  at 0x568635ea8e50: data    1 next: 0x568635ea89c0
  at 0x568635ea89c0: data    2 next: 0x568635ea7ac0
  at 0x568635ea7ac0: data    3 next: 0x568635ea7c70
  at 0x568635ea7c70: data    4 next: 0x568635ea8090
  at 0x568635ea8090: data    5 next: 0x568635ea7780
  at 0x568635ea7780: data    6 next: 0x568635ea7e50
  at 0x568635ea7e50: data    7 next: 0x568635ea8640
  at 0x568635ea8640: data    8 next: 0


Passed 8 of 8 tests


***************************** Test Name  ******************************

*                    operator=(move(MyOrderedSet))                    *

***************************** Test Name  ******************************

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd440 and contained 8 objects 
 list was at address 0x7ffc324cd440 m_head points to 0x568635ea8f10
  at 0x568635ea8f10: data    1 next: 0x568635ea8330
  at 0x568635ea8330: data    2 next: 0x568635ea8e70
  at 0x568635ea8e70: data    3 next: 0x568635ea8e90
  at 0x568635ea8e90: data    4 next: 0x568635ea8eb0
  at 0x568635ea8eb0: data    5 next: 0x568635ea8ed0
  at 0x568635ea8ed0: data    6 next: 0x568635ea8ef0
  at 0x568635ea8ef0: data    7 next: 0x568635ea8e30
  at 0x568635ea8e30: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd480: m_head points to 0x568635ea8f10
list contains 8 elements:
  at 0x568635ea8f10: data    1 next: 0x568635ea8330
  at 0x568635ea8330: data    2 next: 0x568635ea8e70
  at 0x568635ea8e70: data    3 next: 0x568635ea8e90
  at 0x568635ea8e90: data    4 next: 0x568635ea8eb0
  at 0x568635ea8eb0: data    5 next: 0x568635ea8ed0
  at 0x568635ea8ed0: data    6 next: 0x568635ea8ef0
  at 0x568635ea8ef0: data    7 next: 0x568635ea8e30
  at 0x568635ea8e30: data    8 next: 0

 returns true 

set               @0x7ffc324cd440 :
set contains a list at 0x7ffc324cd440: m_head points to 0
list contains 0 elements:
  empty list

move_assigned_set @0x7ffc324cd480 :
set contains a list at 0x7ffc324cd480: m_head points to 0x568635ea8f10
list contains 8 elements:
  at 0x568635ea8f10: data    1 next: 0x568635ea8330
  at 0x568635ea8330: data    2 next: 0x568635ea8e70
  at 0x568635ea8e70: data    3 next: 0x568635ea8e90
  at 0x568635ea8e90: data    4 next: 0x568635ea8eb0
  at 0x568635ea8eb0: data    5 next: 0x568635ea8ed0
  at 0x568635ea8ed0: data    6 next: 0x568635ea8ef0
  at 0x568635ea8ef0: data    7 next: 0x568635ea8e30
  at 0x568635ea8e30: data    8 next: 0

passed 

Passed 9 of 9 tests


***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea91f0
list contains 1 elements:
  at 0x568635ea91f0: data    5 next: 0
set + 3 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9170
list contains 2 elements:
  at 0x568635ea9170: data    3 next: 0x568635ea9190
  at 0x568635ea9190: data    5 next: 0
set + 7 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9210
list contains 3 elements:
  at 0x568635ea9210: data    3 next: 0x568635ea92c0
  at 0x568635ea92c0: data    5 next: 0x568635ea92e0
  at 0x568635ea92e0: data    7 next: 0
set + 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9340
list contains 4 elements:
  at 0x568635ea9340: data    3 next: 0x568635ea93a0
  at 0x568635ea93a0: data    4 next: 0x568635ea9360
  at 0x568635ea9360: data    5 next: 0x568635ea9380
  at 0x568635ea9380: data    7 next: 0
set + 6 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9410
list contains 5 elements:
  at 0x568635ea9410: data    3 next: 0x568635ea9430
  at 0x568635ea9430: data    4 next: 0x568635ea9450
  at 0x568635ea9450: data    5 next: 0x568635ea9490
  at 0x568635ea9490: data    6 next: 0x568635ea9470
  at 0x568635ea9470: data    7 next: 0
set + 8 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9530
list contains 6 elements:
  at 0x568635ea9530: data    3 next: 0x568635ea9550
  at 0x568635ea9550: data    4 next: 0x568635ea9570
  at 0x568635ea9570: data    5 next: 0x568635ea9590
  at 0x568635ea9590: data    6 next: 0x568635ea95b0
  at 0x568635ea95b0: data    7 next: 0x568635ea95d0
  at 0x568635ea95d0: data    8 next: 0
set + 2 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9700
list contains 7 elements:
  at 0x568635ea9700: data    2 next: 0x568635ea9640
  at 0x568635ea9640: data    3 next: 0x568635ea9660
  at 0x568635ea9660: data    4 next: 0x568635ea9680
  at 0x568635ea9680: data    5 next: 0x568635ea96a0
  at 0x568635ea96a0: data    6 next: 0x568635ea96c0
  at 0x568635ea96c0: data    7 next: 0x568635ea96e0
  at 0x568635ea96e0: data    8 next: 0
set + 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9890
list contains 8 elements:
  at 0x568635ea9890: data    1 next: 0x568635ea97b0
  at 0x568635ea97b0: data    2 next: 0x568635ea97d0
  at 0x568635ea97d0: data    3 next: 0x568635ea97f0
  at 0x568635ea97f0: data    4 next: 0x568635ea9810
  at 0x568635ea9810: data    5 next: 0x568635ea9830
  at 0x568635ea9830: data    6 next: 0x568635ea9850
  at 0x568635ea9850: data    7 next: 0x568635ea9870
  at 0x568635ea9870: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2a0 and contained 7 objects 
 list was at address 0x7ffc324cd2a0 m_head points to 0x568635ea9700
  at 0x568635ea9700: data    2 next: 0x568635ea9640
  at 0x568635ea9640: data    3 next: 0x568635ea9660
  at 0x568635ea9660: data    4 next: 0x568635ea9680
  at 0x568635ea9680: data    5 next: 0x568635ea96a0
  at 0x568635ea96a0: data    6 next: 0x568635ea96c0
  at 0x568635ea96c0: data    7 next: 0x568635ea96e0
  at 0x568635ea96e0: data    8 next: 0

after_set:  @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9890
list contains 8 elements:
  at 0x568635ea9890: data    1 next: 0x568635ea97b0
  at 0x568635ea97b0: data    2 next: 0x568635ea97d0
  at 0x568635ea97d0: data    3 next: 0x568635ea97f0
  at 0x568635ea97f0: data    4 next: 0x568635ea9810
  at 0x568635ea9810: data    5 next: 0x568635ea9830
  at 0x568635ea9830: data    6 next: 0x568635ea9850
  at 0x568635ea9850: data    7 next: 0x568635ea9870
  at 0x568635ea9870: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

***************************** Test Name  ******************************

*                         operator+(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +
buildSet @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea96e0
list contains 1 elements:
  at 0x568635ea96e0: data    1 next: 0
set + 2 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9680
list contains 2 elements:
  at 0x568635ea9680: data    1 next: 0x568635ea9660
  at 0x568635ea9660: data    2 next: 0
set + 3 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9870
list contains 3 elements:
  at 0x568635ea9870: data    1 next: 0x568635ea9890
  at 0x568635ea9890: data    2 next: 0x568635ea97b0
  at 0x568635ea97b0: data    3 next: 0
set + 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9810
list contains 4 elements:
  at 0x568635ea9810: data    1 next: 0x568635ea9830
  at 0x568635ea9830: data    2 next: 0x568635ea9850
  at 0x568635ea9850: data    3 next: 0x568635ea99b0
  at 0x568635ea99b0: data    4 next: 0
set + 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9a50
list contains 4 elements:
  at 0x568635ea9a50: data    1 next: 0x568635ea9a70
  at 0x568635ea9a70: data    2 next: 0x568635ea9a90
  at 0x568635ea9a90: data    3 next: 0x568635ea9ab0
  at 0x568635ea9ab0: data    4 next: 0
set + 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9b30
list contains 4 elements:
  at 0x568635ea9b30: data    1 next: 0x568635ea9b50
  at 0x568635ea9b50: data    2 next: 0x568635ea9b70
  at 0x568635ea9b70: data    3 next: 0x568635ea9b90
  at 0x568635ea9b90: data    4 next: 0
set + 3 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9c10
list contains 4 elements:
  at 0x568635ea9c10: data    1 next: 0x568635ea9c30
  at 0x568635ea9c30: data    2 next: 0x568635ea9c50
  at 0x568635ea9c50: data    3 next: 0x568635ea9c70
  at 0x568635ea9c70: data    4 next: 0
set + 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9cf0
list contains 4 elements:
  at 0x568635ea9cf0: data    1 next: 0x568635ea9d10
  at 0x568635ea9d10: data    2 next: 0x568635ea9d30
  at 0x568635ea9d30: data    3 next: 0x568635ea9d50
  at 0x568635ea9d50: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2a0 and contained 4 objects 
 list was at address 0x7ffc324cd2a0 m_head points to 0x568635ea9c10
  at 0x568635ea9c10: data    1 next: 0x568635ea9c30
  at 0x568635ea9c30: data    2 next: 0x568635ea9c50
  at 0x568635ea9c50: data    3 next: 0x568635ea9c70
  at 0x568635ea9c70: data    4 next: 0

after_set:  @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9cf0
list contains 4 elements:
  at 0x568635ea9cf0: data    1 next: 0x568635ea9d10
  at 0x568635ea9d10: data    2 next: 0x568635ea9d30
  at 0x568635ea9d30: data    3 next: 0x568635ea9d50
  at 0x568635ea9d50: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 11 of 11 tests


***************************** Test Name  ******************************

*                         operator-(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -
buildSet @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9d30
list contains 7 elements:
  at 0x568635ea9d30: data    1 next: 0x568635ea9d10
  at 0x568635ea9d10: data    2 next: 0x568635ea9cf0
  at 0x568635ea9cf0: data    3 next: 0x568635ea9c70
  at 0x568635ea9c70: data    4 next: 0x568635ea9c50
  at 0x568635ea9c50: data    5 next: 0x568635ea9c30
  at 0x568635ea9c30: data    6 next: 0x568635ea9c10
  at 0x568635ea9c10: data    8 next: 0
set - 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9e80
list contains 6 elements:
  at 0x568635ea9e80: data    2 next: 0x568635ea9ea0
  at 0x568635ea9ea0: data    3 next: 0x568635ea9ec0
  at 0x568635ea9ec0: data    4 next: 0x568635ea9ee0
  at 0x568635ea9ee0: data    5 next: 0x568635ea9f00
  at 0x568635ea9f00: data    6 next: 0x568635ea9f20
  at 0x568635ea9f20: data    8 next: 0
set - 2 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9c10
list contains 5 elements:
  at 0x568635ea9c10: data    3 next: 0x568635ea9fb0
  at 0x568635ea9fb0: data    4 next: 0x568635ea9fd0
  at 0x568635ea9fd0: data    5 next: 0x568635ea9ff0
  at 0x568635ea9ff0: data    6 next: 0x568635eaa010
  at 0x568635eaa010: data    8 next: 0
set - 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9e80
list contains 4 elements:
  at 0x568635ea9e80: data    3 next: 0x568635eaa0d0
  at 0x568635eaa0d0: data    5 next: 0x568635eaa0f0
  at 0x568635eaa0f0: data    6 next: 0x568635eaa110
  at 0x568635eaa110: data    8 next: 0
set - 5 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9c10
list contains 3 elements:
  at 0x568635ea9c10: data    3 next: 0x568635eaa190
  at 0x568635eaa190: data    6 next: 0x568635eaa1b0
  at 0x568635eaa1b0: data    8 next: 0
set - 7 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635ea9e60
list contains 3 elements:
  at 0x568635ea9e60: data    3 next: 0x568635eaa200
  at 0x568635eaa200: data    6 next: 0x568635eaa220
  at 0x568635eaa220: data    8 next: 0
set - 8 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa290
list contains 2 elements:
  at 0x568635eaa290: data    3 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 12 of 12 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa2b0
list contains 1 elements:
  at 0x568635eaa2b0: data    5 next: 0
set += 3 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa200
list contains 2 elements:
  at 0x568635eaa200: data    3 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0
set += 7 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa200
list contains 3 elements:
  at 0x568635eaa200: data    3 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0
set += 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa200
list contains 4 elements:
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0
set += 6 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa200
list contains 5 elements:
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa570
  at 0x568635eaa570: data    6 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0
set += 8 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa200
list contains 6 elements:
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa570
  at 0x568635eaa570: data    6 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0x568635eaa690
  at 0x568635eaa690: data    8 next: 0
set += 2 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa7a0
list contains 7 elements:
  at 0x568635eaa7a0: data    2 next: 0x568635eaa200
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa570
  at 0x568635eaa570: data    6 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0x568635eaa690
  at 0x568635eaa690: data    8 next: 0
set += 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa910
list contains 8 elements:
  at 0x568635eaa910: data    1 next: 0x568635eaa7a0
  at 0x568635eaa7a0: data    2 next: 0x568635eaa200
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa570
  at 0x568635eaa570: data    6 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0x568635eaa690
  at 0x568635eaa690: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2a0 and contained 7 objects 
 list was at address 0x7ffc324cd2a0 m_head points to 0x568635eaa7a0
  at 0x568635eaa7a0: data    2 next: 0x568635eaa200
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa570
  at 0x568635eaa570: data    6 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0x568635eaa690
  at 0x568635eaa690: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa910
list contains 8 elements:
  at 0x568635eaa910: data    1 next: 0x568635eaa7a0
  at 0x568635eaa7a0: data    2 next: 0x568635eaa200
  at 0x568635eaa200: data    3 next: 0x568635eaa470
  at 0x568635eaa470: data    4 next: 0x568635eaa2b0
  at 0x568635eaa2b0: data    5 next: 0x568635eaa570
  at 0x568635eaa570: data    6 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    7 next: 0x568635eaa690
  at 0x568635eaa690: data    8 next: 0

 returns true 

passed   operation +=

Passed 13 of 13 tests


***************************** Test Name  ******************************

*                        operator+=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator +=
buildSet @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 1 elements:
  at 0x568635eaa3a0: data    1 next: 0
set += 2 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 2 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0
set += 3 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 3 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0
set += 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 4 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0
set += 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 4 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0
set += 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 4 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0
set += 3 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 4 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0
set += 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 4 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2a0 and contained 4 objects 
 list was at address 0x7ffc324cd2a0 m_head points to 0x568635eaa3a0
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0

after_set:  
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa3a0
list contains 4 elements:
  at 0x568635eaa3a0: data    1 next: 0x568635eaa470
  at 0x568635eaa470: data    2 next: 0x568635eaa690
  at 0x568635eaa690: data    3 next: 0x568635eaaab0
  at 0x568635eaaab0: data    4 next: 0

 returns true 

passed   operation +=

Passed 14 of 14 tests


***************************** Test Name  ******************************

*                        operator-=(T object)                         *

***************************** Test Name  ******************************

Test_Results* runObjectOperationTest(Test_Arguments<T>*) [with T = int] operator -=
buildSet @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaaab0
list contains 8 elements:
  at 0x568635eaaab0: data    1 next: 0x568635eaa690
  at 0x568635eaa690: data    2 next: 0x568635eaa470
  at 0x568635eaa470: data    3 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    4 next: 0x568635eaae80
  at 0x568635eaae80: data    5 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0x568635eaaec0
  at 0x568635eaaec0: data    7 next: 0x568635eaaee0
  at 0x568635eaaee0: data    8 next: 0
set -= 1 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa690
list contains 7 elements:
  at 0x568635eaa690: data    2 next: 0x568635eaa470
  at 0x568635eaa470: data    3 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    4 next: 0x568635eaae80
  at 0x568635eaae80: data    5 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0x568635eaaec0
  at 0x568635eaaec0: data    7 next: 0x568635eaaee0
  at 0x568635eaaee0: data    8 next: 0
set -= 2 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa470
list contains 6 elements:
  at 0x568635eaa470: data    3 next: 0x568635eaa3a0
  at 0x568635eaa3a0: data    4 next: 0x568635eaae80
  at 0x568635eaae80: data    5 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0x568635eaaec0
  at 0x568635eaaec0: data    7 next: 0x568635eaaee0
  at 0x568635eaaee0: data    8 next: 0
set -= 4 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa470
list contains 5 elements:
  at 0x568635eaa470: data    3 next: 0x568635eaae80
  at 0x568635eaae80: data    5 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0x568635eaaec0
  at 0x568635eaaec0: data    7 next: 0x568635eaaee0
  at 0x568635eaaee0: data    8 next: 0
set -= 5 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa470
list contains 4 elements:
  at 0x568635eaa470: data    3 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0x568635eaaec0
  at 0x568635eaaec0: data    7 next: 0x568635eaaee0
  at 0x568635eaaee0: data    8 next: 0
set -= 7 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa470
list contains 3 elements:
  at 0x568635eaa470: data    3 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0x568635eaaee0
  at 0x568635eaaee0: data    8 next: 0
set -= 8 results in set @0x7ffc324cd2a0
set contains a list at 0x7ffc324cd2a0: m_head points to 0x568635eaa470
list contains 2 elements:
  at 0x568635eaa470: data    3 next: 0x568635eaaea0
  at 0x568635eaaea0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 15 of 15 tests


***************************** Test Name  ******************************

*                            .isMember(T)                             *

***************************** Test Name  ******************************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 16 of 16 tests


***************************** Test Name  ******************************

*                        relational operators                         *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *              { empty }.operator==({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } == { <empty list> } returns true 

    ************************ Test Phase *************************
    *              { empty }.operator!=({ empty })              *
    ************************ Test Phase *************************

      { <empty list> } != { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator==({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == { <empty list> } returns false

    ************************ Test Phase *************************
    *               { 1-4 }.operator!=({ empty })               *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != { <empty list> } returns true 

    ************************ Test Phase *************************
    *               { empty }.operator==({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *               { empty }.operator!=({ 1-4 })               *
    ************************ Test Phase *************************

      { <empty list> } != {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator==({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false

    ************************ Test Phase *************************
    *                { 1-4 }.operator!=({ 5-8 })                *
    ************************ Test Phase *************************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 

    ************************ Test Phase *************************
    *                { 5-8 }.operator==({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false

    ************************ Test Phase *************************
    *                { 5-8 }.operator!=({ 1-4 })                *
    ************************ Test Phase *************************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 

Passed 30 of 30 tests

passed : relational operators == !=

Passed 30 of 30 tests


***************************** Test Name  ******************************

*                       operator+(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab530
list contains 7 elements:
  at 0x568635eab530: data    1 next: 0x568635eab510
  at 0x568635eab510: data    2 next: 0x568635eab4f0
  at 0x568635eab4f0: data    3 next: 0x568635eab570
  at 0x568635eab570: data    5 next: 0x568635eab590
  at 0x568635eab590: data    6 next: 0x568635eab5b0
  at 0x568635eab5b0: data    7 next: 0x568635eab5d0
  at 0x568635eab5d0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab530
  at 0x568635eab530: data    1 next: 0x568635eab510
  at 0x568635eab510: data    2 next: 0x568635eab4f0
  at 0x568635eab4f0: data    3 next: 0x568635eab570
  at 0x568635eab570: data    5 next: 0x568635eab590
  at 0x568635eab590: data    6 next: 0x568635eab5b0
  at 0x568635eab5b0: data    7 next: 0x568635eab5d0
  at 0x568635eab5d0: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab6b0
list contains 7 elements:
  at 0x568635eab6b0: data    1 next: 0x568635eab6d0
  at 0x568635eab6d0: data    2 next: 0x568635eab6f0
  at 0x568635eab6f0: data    3 next: 0x568635eab710
  at 0x568635eab710: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab750
  at 0x568635eab750: data    7 next: 0x568635eab770
  at 0x568635eab770: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 0 objects 
 list was at address 0x7ffc324cd260 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab6b0
list contains 7 elements:
  at 0x568635eab6b0: data    1 next: 0x568635eab6d0
  at 0x568635eab6d0: data    2 next: 0x568635eab6f0
  at 0x568635eab6f0: data    3 next: 0x568635eab710
  at 0x568635eab710: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab750
  at 0x568635eab750: data    7 next: 0x568635eab770
  at 0x568635eab770: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 31 of 31 tests

    ************************ Test Phase *************************
    *     operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab690
list contains 7 elements:
  at 0x568635eab690: data    1 next: 0x568635eab670
  at 0x568635eab670: data    2 next: 0x568635eab650
  at 0x568635eab650: data    3 next: 0x568635eab630
  at 0x568635eab630: data    5 next: 0x568635eab610
  at 0x568635eab610: data    6 next: 0x568635eab5f0
  at 0x568635eab5f0: data    7 next: 0x568635eab550
  at 0x568635eab550: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 0 objects 
 list was at address 0x7ffc324cd250 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab5b0
list contains 7 elements:
  at 0x568635eab5b0: data    1 next: 0x568635eab750
  at 0x568635eab750: data    2 next: 0x568635eab6b0
  at 0x568635eab6b0: data    3 next: 0x568635eab6d0
  at 0x568635eab6d0: data    5 next: 0x568635eab6f0
  at 0x568635eab6f0: data    6 next: 0x568635eab710
  at 0x568635eab710: data    7 next: 0x568635eab730
  at 0x568635eab730: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 7 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab690
  at 0x568635eab690: data    1 next: 0x568635eab670
  at 0x568635eab670: data    2 next: 0x568635eab650
  at 0x568635eab650: data    3 next: 0x568635eab630
  at 0x568635eab630: data    5 next: 0x568635eab610
  at 0x568635eab610: data    6 next: 0x568635eab5f0
  at 0x568635eab5f0: data    7 next: 0x568635eab550
  at 0x568635eab550: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab5b0
list contains 7 elements:
  at 0x568635eab5b0: data    1 next: 0x568635eab750
  at 0x568635eab750: data    2 next: 0x568635eab6b0
  at 0x568635eab6b0: data    3 next: 0x568635eab6d0
  at 0x568635eab6d0: data    5 next: 0x568635eab6f0
  at 0x568635eab6f0: data    6 next: 0x568635eab710
  at 0x568635eab710: data    7 next: 0x568635eab730
  at 0x568635eab730: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 32 of 32 tests

    ************************ Test Phase *************************
    *      operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator +


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab590
list contains 7 elements:
  at 0x568635eab590: data    1 next: 0x568635eab570
  at 0x568635eab570: data    2 next: 0x568635eab4f0
  at 0x568635eab4f0: data    3 next: 0x568635eab510
  at 0x568635eab510: data    5 next: 0x568635eab530
  at 0x568635eab530: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eab5d0
  at 0x568635eab5d0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab550
list contains 3 elements:
  at 0x568635eab550: data    3 next: 0x568635eab730
  at 0x568635eab730: data    4 next: 0x568635eab690
  at 0x568635eab690: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab590
  at 0x568635eab590: data    1 next: 0x568635eab570
  at 0x568635eab570: data    2 next: 0x568635eab4f0
  at 0x568635eab4f0: data    3 next: 0x568635eab510
  at 0x568635eab510: data    5 next: 0x568635eab530
  at 0x568635eab530: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eab5d0
  at 0x568635eab5d0: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab830
list contains 8 elements:
  at 0x568635eab830: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eab870
  at 0x568635eab870: data    3 next: 0x568635eab910
  at 0x568635eab910: data    4 next: 0x568635eab890
  at 0x568635eab890: data    5 next: 0x568635eab8b0
  at 0x568635eab8b0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eab8f0
  at 0x568635eab8f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 3 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab550
  at 0x568635eab550: data    3 next: 0x568635eab730
  at 0x568635eab730: data    4 next: 0x568635eab690
  at 0x568635eab690: data    5 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab830
list contains 8 elements:
  at 0x568635eab830: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eab870
  at 0x568635eab870: data    3 next: 0x568635eab910
  at 0x568635eab910: data    4 next: 0x568635eab890
  at 0x568635eab890: data    5 next: 0x568635eab8b0
  at 0x568635eab8b0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eab8f0
  at 0x568635eab8f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 33 of 33 tests


***************************** Test Name  ******************************

*                       operator|(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab5b0
list contains 7 elements:
  at 0x568635eab5b0: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab610
  at 0x568635eab610: data    5 next: 0x568635eab630
  at 0x568635eab630: data    6 next: 0x568635eab650
  at 0x568635eab650: data    7 next: 0x568635eab670
  at 0x568635eab670: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab5b0
  at 0x568635eab5b0: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab610
  at 0x568635eab610: data    5 next: 0x568635eab630
  at 0x568635eab630: data    6 next: 0x568635eab650
  at 0x568635eab650: data    7 next: 0x568635eab670
  at 0x568635eab670: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab770
list contains 7 elements:
  at 0x568635eab770: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab870
  at 0x568635eab870: data    3 next: 0x568635eab910
  at 0x568635eab910: data    5 next: 0x568635eab890
  at 0x568635eab890: data    6 next: 0x568635eab8b0
  at 0x568635eab8b0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 0 objects 
 list was at address 0x7ffc324cd260 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab770
list contains 7 elements:
  at 0x568635eab770: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab870
  at 0x568635eab870: data    3 next: 0x568635eab910
  at 0x568635eab910: data    5 next: 0x568635eab890
  at 0x568635eab890: data    6 next: 0x568635eab8b0
  at 0x568635eab8b0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 34 of 34 tests

    ************************ Test Phase *************************
    *     operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab4f0
list contains 7 elements:
  at 0x568635eab4f0: data    1 next: 0x568635eab570
  at 0x568635eab570: data    2 next: 0x568635eab590
  at 0x568635eab590: data    3 next: 0x568635eab690
  at 0x568635eab690: data    5 next: 0x568635eab5d0
  at 0x568635eab5d0: data    6 next: 0x568635eab8f0
  at 0x568635eab8f0: data    7 next: 0x568635eab550
  at 0x568635eab550: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 0 objects 
 list was at address 0x7ffc324cd250 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab650
list contains 7 elements:
  at 0x568635eab650: data    1 next: 0x568635eab8b0
  at 0x568635eab8b0: data    2 next: 0x568635eab510
  at 0x568635eab510: data    3 next: 0x568635eab530
  at 0x568635eab530: data    5 next: 0x568635eab770
  at 0x568635eab770: data    6 next: 0x568635eab730
  at 0x568635eab730: data    7 next: 0x568635eab870
  at 0x568635eab870: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 7 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab4f0
  at 0x568635eab4f0: data    1 next: 0x568635eab570
  at 0x568635eab570: data    2 next: 0x568635eab590
  at 0x568635eab590: data    3 next: 0x568635eab690
  at 0x568635eab690: data    5 next: 0x568635eab5d0
  at 0x568635eab5d0: data    6 next: 0x568635eab8f0
  at 0x568635eab8f0: data    7 next: 0x568635eab550
  at 0x568635eab550: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab650
list contains 7 elements:
  at 0x568635eab650: data    1 next: 0x568635eab8b0
  at 0x568635eab8b0: data    2 next: 0x568635eab510
  at 0x568635eab510: data    3 next: 0x568635eab530
  at 0x568635eab530: data    5 next: 0x568635eab770
  at 0x568635eab770: data    6 next: 0x568635eab730
  at 0x568635eab730: data    7 next: 0x568635eab870
  at 0x568635eab870: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 35 of 35 tests

    ************************ Test Phase *************************
    *      operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator |


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab5f0
list contains 7 elements:
  at 0x568635eab5f0: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab5b0
  at 0x568635eab5b0: data    3 next: 0x568635eab8d0
  at 0x568635eab8d0: data    5 next: 0x568635eab670
  at 0x568635eab670: data    6 next: 0x568635eab910
  at 0x568635eab910: data    7 next: 0x568635eab890
  at 0x568635eab890: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab550
list contains 3 elements:
  at 0x568635eab550: data    3 next: 0x568635eab870
  at 0x568635eab870: data    4 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab5f0
  at 0x568635eab5f0: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab5b0
  at 0x568635eab5b0: data    3 next: 0x568635eab8d0
  at 0x568635eab8d0: data    5 next: 0x568635eab670
  at 0x568635eab670: data    6 next: 0x568635eab910
  at 0x568635eab910: data    7 next: 0x568635eab890
  at 0x568635eab890: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab530
list contains 8 elements:
  at 0x568635eab530: data    1 next: 0x568635eab770
  at 0x568635eab770: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab830
  at 0x568635eab830: data    4 next: 0x568635eab6b0
  at 0x568635eab6b0: data    5 next: 0x568635eab6d0
  at 0x568635eab6d0: data    6 next: 0x568635eab6f0
  at 0x568635eab6f0: data    7 next: 0x568635eab750
  at 0x568635eab750: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 3 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab550
  at 0x568635eab550: data    3 next: 0x568635eab870
  at 0x568635eab870: data    4 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab530
list contains 8 elements:
  at 0x568635eab530: data    1 next: 0x568635eab770
  at 0x568635eab770: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab830
  at 0x568635eab830: data    4 next: 0x568635eab6b0
  at 0x568635eab6b0: data    5 next: 0x568635eab6d0
  at 0x568635eab6d0: data    6 next: 0x568635eab6f0
  at 0x568635eab6f0: data    7 next: 0x568635eab750
  at 0x568635eab750: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 36 of 36 tests


***************************** Test Name  ******************************

*                       operator^(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab610
list contains 7 elements:
  at 0x568635eab610: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab8f0
  at 0x568635eab8f0: data    3 next: 0x568635eab5d0
  at 0x568635eab5d0: data    5 next: 0x568635eab690
  at 0x568635eab690: data    6 next: 0x568635eab590
  at 0x568635eab590: data    7 next: 0x568635eab570
  at 0x568635eab570: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab610
  at 0x568635eab610: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab8f0
  at 0x568635eab8f0: data    3 next: 0x568635eab5d0
  at 0x568635eab5d0: data    5 next: 0x568635eab690
  at 0x568635eab690: data    6 next: 0x568635eab590
  at 0x568635eab590: data    7 next: 0x568635eab570
  at 0x568635eab570: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab910
list contains 7 elements:
  at 0x568635eab910: data    1 next: 0x568635eab870
  at 0x568635eab870: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab6b0
  at 0x568635eab6b0: data    6 next: 0x568635eab6d0
  at 0x568635eab6d0: data    7 next: 0x568635eab6f0
  at 0x568635eab6f0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 0 objects 
 list was at address 0x7ffc324cd260 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab910
list contains 7 elements:
  at 0x568635eab910: data    1 next: 0x568635eab870
  at 0x568635eab870: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab6b0
  at 0x568635eab6b0: data    6 next: 0x568635eab6d0
  at 0x568635eab6d0: data    7 next: 0x568635eab6f0
  at 0x568635eab6f0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 37 of 37 tests

    ************************ Test Phase *************************
    *     operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab5b0
list contains 7 elements:
  at 0x568635eab5b0: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab890
  at 0x568635eab890: data    6 next: 0x568635eab750
  at 0x568635eab750: data    7 next: 0x568635eab550
  at 0x568635eab550: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 0 objects 
 list was at address 0x7ffc324cd250 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab590
list contains 7 elements:
  at 0x568635eab590: data    1 next: 0x568635eab6d0
  at 0x568635eab6d0: data    2 next: 0x568635eab8d0
  at 0x568635eab8d0: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eab910
  at 0x568635eab910: data    6 next: 0x568635eab870
  at 0x568635eab870: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 7 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab5b0
  at 0x568635eab5b0: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab890
  at 0x568635eab890: data    6 next: 0x568635eab750
  at 0x568635eab750: data    7 next: 0x568635eab550
  at 0x568635eab550: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab590
list contains 7 elements:
  at 0x568635eab590: data    1 next: 0x568635eab6d0
  at 0x568635eab6d0: data    2 next: 0x568635eab8d0
  at 0x568635eab8d0: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eab910
  at 0x568635eab910: data    6 next: 0x568635eab870
  at 0x568635eab870: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 38 of 38 tests

    ************************ Test Phase *************************
    *      operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator ^


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab8f0
list contains 7 elements:
  at 0x568635eab8f0: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab610
  at 0x568635eab610: data    3 next: 0x568635eab6f0
  at 0x568635eab6f0: data    5 next: 0x568635eab570
  at 0x568635eab570: data    6 next: 0x568635eab830
  at 0x568635eab830: data    7 next: 0x568635eab6b0
  at 0x568635eab6b0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab550
list contains 3 elements:
  at 0x568635eab550: data    3 next: 0x568635eab850
  at 0x568635eab850: data    4 next: 0x568635eab5b0
  at 0x568635eab5b0: data    5 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab8f0
  at 0x568635eab8f0: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab610
  at 0x568635eab610: data    3 next: 0x568635eab6f0
  at 0x568635eab6f0: data    5 next: 0x568635eab570
  at 0x568635eab570: data    6 next: 0x568635eab830
  at 0x568635eab830: data    7 next: 0x568635eab6b0
  at 0x568635eab6b0: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab670
list contains 6 elements:
  at 0x568635eab670: data    1 next: 0x568635eab910
  at 0x568635eab910: data    2 next: 0x568635eab770
  at 0x568635eab770: data    4 next: 0x568635eab8b0
  at 0x568635eab8b0: data    6 next: 0x568635eab510
  at 0x568635eab510: data    7 next: 0x568635eab630
  at 0x568635eab630: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 3 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab550
  at 0x568635eab550: data    3 next: 0x568635eab850
  at 0x568635eab850: data    4 next: 0x568635eab5b0
  at 0x568635eab5b0: data    5 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab670
list contains 6 elements:
  at 0x568635eab670: data    1 next: 0x568635eab910
  at 0x568635eab910: data    2 next: 0x568635eab770
  at 0x568635eab770: data    4 next: 0x568635eab8b0
  at 0x568635eab8b0: data    6 next: 0x568635eab510
  at 0x568635eab510: data    7 next: 0x568635eab630
  at 0x568635eab630: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 39 of 39 tests


***************************** Test Name  ******************************

*                       operator&(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab750
list contains 7 elements:
  at 0x568635eab750: data    1 next: 0x568635eab890
  at 0x568635eab890: data    2 next: 0x568635eab4f0
  at 0x568635eab4f0: data    3 next: 0x568635eab5f0
  at 0x568635eab5f0: data    5 next: 0x568635eab710
  at 0x568635eab710: data    6 next: 0x568635eab650
  at 0x568635eab650: data    7 next: 0x568635eab530
  at 0x568635eab530: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 40 of 40 tests

    ************************ Test Phase *************************
    *     operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab6f0
list contains 7 elements:
  at 0x568635eab6f0: data    1 next: 0x568635eab610
  at 0x568635eab610: data    2 next: 0x568635eab730
  at 0x568635eab730: data    3 next: 0x568635eab8f0
  at 0x568635eab8f0: data    5 next: 0x568635eab5b0
  at 0x568635eab5b0: data    6 next: 0x568635eab6b0
  at 0x568635eab6b0: data    7 next: 0x568635eab830
  at 0x568635eab830: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 41 of 41 tests

    ************************ Test Phase *************************
    *      operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator &


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab5f0
list contains 7 elements:
  at 0x568635eab5f0: data    1 next: 0x568635eab4f0
  at 0x568635eab4f0: data    2 next: 0x568635eab890
  at 0x568635eab890: data    3 next: 0x568635eab750
  at 0x568635eab750: data    5 next: 0x568635eab570
  at 0x568635eab570: data    6 next: 0x568635eab530
  at 0x568635eab530: data    7 next: 0x568635eab650
  at 0x568635eab650: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab830
list contains 3 elements:
  at 0x568635eab830: data    3 next: 0x568635eab710
  at 0x568635eab710: data    4 next: 0x568635eab6f0
  at 0x568635eab6f0: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 42 of 42 tests


***************************** Test Name  ******************************

*                       operator-(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab610
list contains 7 elements:
  at 0x568635eab610: data    1 next: 0x568635eab690
  at 0x568635eab690: data    2 next: 0x568635eab870
  at 0x568635eab870: data    3 next: 0x568635eab5d0
  at 0x568635eab5d0: data    5 next: 0x568635eab590
  at 0x568635eab590: data    6 next: 0x568635eab6d0
  at 0x568635eab6d0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab610
  at 0x568635eab610: data    1 next: 0x568635eab690
  at 0x568635eab690: data    2 next: 0x568635eab870
  at 0x568635eab870: data    3 next: 0x568635eab5d0
  at 0x568635eab5d0: data    5 next: 0x568635eab590
  at 0x568635eab590: data    6 next: 0x568635eab6d0
  at 0x568635eab6d0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab530
list contains 7 elements:
  at 0x568635eab530: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab770
  at 0x568635eab770: data    3 next: 0x568635eab8b0
  at 0x568635eab8b0: data    5 next: 0x568635eab510
  at 0x568635eab510: data    6 next: 0x568635eab910
  at 0x568635eab910: data    7 next: 0x568635eab630
  at 0x568635eab630: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 0 objects 
 list was at address 0x7ffc324cd260 m_head points to 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab530
list contains 7 elements:
  at 0x568635eab530: data    1 next: 0x568635eab710
  at 0x568635eab710: data    2 next: 0x568635eab770
  at 0x568635eab770: data    3 next: 0x568635eab8b0
  at 0x568635eab8b0: data    5 next: 0x568635eab510
  at 0x568635eab510: data    6 next: 0x568635eab910
  at 0x568635eab910: data    7 next: 0x568635eab630
  at 0x568635eab630: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 43 of 43 tests

    ************************ Test Phase *************************
    *     operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }      *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab890
list contains 7 elements:
  at 0x568635eab890: data    1 next: 0x568635eab4f0
  at 0x568635eab4f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab6f0
  at 0x568635eab6f0: data    5 next: 0x568635eab650
  at 0x568635eab650: data    6 next: 0x568635eab550
  at 0x568635eab550: data    7 next: 0x568635eab830
  at 0x568635eab830: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 44 of 44 tests

    ************************ Test Phase *************************
    *      operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }       *
    ************************ Test Phase *************************

Test_Results* runSetArithmeticOperationTest(Test_Arguments<T>*) [with T = int] operator -


 operand_1: set contains a list at 0x7ffc324cd250: m_head points to 0x568635eab5d0
list contains 7 elements:
  at 0x568635eab5d0: data    1 next: 0x568635eab870
  at 0x568635eab870: data    2 next: 0x568635eab690
  at 0x568635eab690: data    3 next: 0x568635eab610
  at 0x568635eab610: data    5 next: 0x568635eab630
  at 0x568635eab630: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eab6d0
  at 0x568635eab6d0: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7ffc324cd260: m_head points to 0x568635eab830
list contains 3 elements:
  at 0x568635eab830: data    3 next: 0x568635eab590
  at 0x568635eab590: data    4 next: 0x568635eab890
  at 0x568635eab890: data    5 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd250 and contained 7 objects 
 list was at address 0x7ffc324cd250 m_head points to 0x568635eab5d0
  at 0x568635eab5d0: data    1 next: 0x568635eab870
  at 0x568635eab870: data    2 next: 0x568635eab690
  at 0x568635eab690: data    3 next: 0x568635eab610
  at 0x568635eab610: data    5 next: 0x568635eab630
  at 0x568635eab630: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eab6d0
  at 0x568635eab6d0: data    8 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab8b0
list contains 5 elements:
  at 0x568635eab8b0: data    1 next: 0x568635eab510
  at 0x568635eab510: data    2 next: 0x568635eab8f0
  at 0x568635eab8f0: data    6 next: 0x568635eab5b0
  at 0x568635eab5b0: data    7 next: 0x568635eab6b0
  at 0x568635eab6b0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd260 and contained 3 objects 
 list was at address 0x7ffc324cd260 m_head points to 0x568635eab830
  at 0x568635eab830: data    3 next: 0x568635eab590
  at 0x568635eab590: data    4 next: 0x568635eab890
  at 0x568635eab890: data    5 next: 0

after_set:  @0x7ffc324cd270
set contains a list at 0x7ffc324cd270: m_head points to 0x568635eab8b0
list contains 5 elements:
  at 0x568635eab8b0: data    1 next: 0x568635eab510
  at 0x568635eab510: data    2 next: 0x568635eab8f0
  at 0x568635eab8f0: data    6 next: 0x568635eab5b0
  at 0x568635eab5b0: data    7 next: 0x568635eab6b0
  at 0x568635eab6b0: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 45 of 45 tests


***************************** Test Name  ******************************

*                      operator+=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab650
list contains 7 elements:
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

 += 

set contains a list at 0x7ffc324cd2c0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab650
list contains 7 elements:
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eab650
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab650
list contains 7 elements:
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests

    ************************ Test Phase *************************
    *     operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eab670
list contains 7 elements:
  at 0x568635eab670: data    1 next: 0x568635eab730
  at 0x568635eab730: data    2 next: 0x568635eab4f0
  at 0x568635eab4f0: data    3 next: 0x568635eab5f0
  at 0x568635eab5f0: data    5 next: 0x568635eab6f0
  at 0x568635eab6f0: data    6 next: 0x568635eab650
  at 0x568635eab650: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eab8b0
  at 0x568635eab8b0: data    2 next: 0x568635eab510
  at 0x568635eab510: data    3 next: 0x568635eab8f0
  at 0x568635eab8f0: data    5 next: 0x568635eab5b0
  at 0x568635eab5b0: data    6 next: 0x568635eab6b0
  at 0x568635eab6b0: data    7 next: 0x568635eab830
  at 0x568635eab830: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 0 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eab8b0
  at 0x568635eab8b0: data    2 next: 0x568635eab510
  at 0x568635eab510: data    3 next: 0x568635eab8f0
  at 0x568635eab8f0: data    5 next: 0x568635eab5b0
  at 0x568635eab5b0: data    6 next: 0x568635eab6b0
  at 0x568635eab6b0: data    7 next: 0x568635eab830
  at 0x568635eab830: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 47 of 47 tests

    ************************ Test Phase *************************
    *      operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator +=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab650
list contains 7 elements:
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab590
  at 0x568635eab590: data    8 next: 0

 += 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eab830
list contains 3 elements:
  at 0x568635eab830: data    3 next: 0x568635eab8d0
  at 0x568635eab8d0: data    4 next: 0x568635eab850
  at 0x568635eab850: data    5 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab650
list contains 8 elements:
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab910
  at 0x568635eab910: data    4 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab590
  at 0x568635eab590: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eab650
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab590
  at 0x568635eab590: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab650
list contains 8 elements:
  at 0x568635eab650: data    1 next: 0x568635eab6f0
  at 0x568635eab6f0: data    2 next: 0x568635eab5f0
  at 0x568635eab5f0: data    3 next: 0x568635eab910
  at 0x568635eab910: data    4 next: 0x568635eab4f0
  at 0x568635eab4f0: data    5 next: 0x568635eab730
  at 0x568635eab730: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eab590
  at 0x568635eab590: data    8 next: 0

 returns true 


passed   operation +=

Passed 48 of 48 tests


***************************** Test Name  ******************************

*                      operator|=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab830
  at 0x568635eab830: data    3 next: 0x568635eab750
  at 0x568635eab750: data    5 next: 0x568635eab530
  at 0x568635eab530: data    6 next: 0x568635eab710
  at 0x568635eab710: data    7 next: 0x568635eab770
  at 0x568635eab770: data    8 next: 0

 |= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab830
  at 0x568635eab830: data    3 next: 0x568635eab750
  at 0x568635eab750: data    5 next: 0x568635eab530
  at 0x568635eab530: data    6 next: 0x568635eab710
  at 0x568635eab710: data    7 next: 0x568635eab770
  at 0x568635eab770: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eab850
  at 0x568635eab850: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab830
  at 0x568635eab830: data    3 next: 0x568635eab750
  at 0x568635eab750: data    5 next: 0x568635eab530
  at 0x568635eab530: data    6 next: 0x568635eab710
  at 0x568635eab710: data    7 next: 0x568635eab770
  at 0x568635eab770: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab830
  at 0x568635eab830: data    3 next: 0x568635eab750
  at 0x568635eab750: data    5 next: 0x568635eab530
  at 0x568635eab530: data    6 next: 0x568635eab710
  at 0x568635eab710: data    7 next: 0x568635eab770
  at 0x568635eab770: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests

    ************************ Test Phase *************************
    *     operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eab710
list contains 7 elements:
  at 0x568635eab710: data    1 next: 0x568635eab530
  at 0x568635eab530: data    2 next: 0x568635eab750
  at 0x568635eab750: data    3 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab8d0
  at 0x568635eab8d0: data    6 next: 0x568635eab850
  at 0x568635eab850: data    7 next: 0x568635eab670
  at 0x568635eab670: data    8 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab770
list contains 7 elements:
  at 0x568635eab770: data    1 next: 0x568635eaba10
  at 0x568635eaba10: data    2 next: 0x568635eaba30
  at 0x568635eaba30: data    3 next: 0x568635eaba50
  at 0x568635eaba50: data    5 next: 0x568635eaba70
  at 0x568635eaba70: data    6 next: 0x568635eaba90
  at 0x568635eaba90: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 0 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab770
list contains 7 elements:
  at 0x568635eab770: data    1 next: 0x568635eaba10
  at 0x568635eaba10: data    2 next: 0x568635eaba30
  at 0x568635eaba30: data    3 next: 0x568635eaba50
  at 0x568635eaba50: data    5 next: 0x568635eaba70
  at 0x568635eaba70: data    6 next: 0x568635eaba90
  at 0x568635eaba90: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 50 of 50 tests

    ************************ Test Phase *************************
    *      operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator |=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab670
list contains 7 elements:
  at 0x568635eab670: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eab8d0
  at 0x568635eab8d0: data    3 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab750
  at 0x568635eab750: data    6 next: 0x568635eab530
  at 0x568635eab530: data    7 next: 0x568635eab710
  at 0x568635eab710: data    8 next: 0

 |= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eabab0
list contains 3 elements:
  at 0x568635eabab0: data    3 next: 0x568635eab770
  at 0x568635eab770: data    4 next: 0x568635eaba10
  at 0x568635eaba10: data    5 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab670
list contains 8 elements:
  at 0x568635eab670: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eab8d0
  at 0x568635eab8d0: data    3 next: 0x568635eabba0
  at 0x568635eabba0: data    4 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab750
  at 0x568635eab750: data    6 next: 0x568635eab530
  at 0x568635eab530: data    7 next: 0x568635eab710
  at 0x568635eab710: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eab670
  at 0x568635eab670: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eab8d0
  at 0x568635eab8d0: data    3 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab750
  at 0x568635eab750: data    6 next: 0x568635eab530
  at 0x568635eab530: data    7 next: 0x568635eab710
  at 0x568635eab710: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab670
list contains 8 elements:
  at 0x568635eab670: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eab8d0
  at 0x568635eab8d0: data    3 next: 0x568635eabba0
  at 0x568635eabba0: data    4 next: 0x568635eab830
  at 0x568635eab830: data    5 next: 0x568635eab750
  at 0x568635eab750: data    6 next: 0x568635eab530
  at 0x568635eab530: data    7 next: 0x568635eab710
  at 0x568635eab710: data    8 next: 0

 returns true 


passed   operation |=

Passed 51 of 51 tests


***************************** Test Name  ******************************

*                      operator^=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabba0
list contains 7 elements:
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 ^= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabba0
list contains 7 elements:
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eabba0
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabba0
list contains 7 elements:
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 returns true 


passed   operation ^=

Passed 52 of 52 tests

    ************************ Test Phase *************************
    *     operator^=(MyOrderedSet) { empty } ^ { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 ^= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eabab0
list contains 7 elements:
  at 0x568635eabab0: data    1 next: 0x568635eab770
  at 0x568635eab770: data    2 next: 0x568635eaba10
  at 0x568635eaba10: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eab850
  at 0x568635eab850: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eabba0
  at 0x568635eabba0: data    8 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabcc0
list contains 7 elements:
  at 0x568635eabcc0: data    1 next: 0x568635eabce0
  at 0x568635eabce0: data    2 next: 0x568635eabd00
  at 0x568635eabd00: data    3 next: 0x568635eabd20
  at 0x568635eabd20: data    5 next: 0x568635eabd40
  at 0x568635eabd40: data    6 next: 0x568635eabd60
  at 0x568635eabd60: data    7 next: 0x568635eabd80
  at 0x568635eabd80: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 0 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabcc0
list contains 7 elements:
  at 0x568635eabcc0: data    1 next: 0x568635eabce0
  at 0x568635eabce0: data    2 next: 0x568635eabd00
  at 0x568635eabd00: data    3 next: 0x568635eabd20
  at 0x568635eabd20: data    5 next: 0x568635eabd40
  at 0x568635eabd40: data    6 next: 0x568635eabd60
  at 0x568635eabd60: data    7 next: 0x568635eabd80
  at 0x568635eabd80: data    8 next: 0

 returns true b/c before_set was empty


passed   operation ^=

Passed 53 of 53 tests

    ************************ Test Phase *************************
    *      operator^=(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator ^=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabba0
list contains 7 elements:
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 ^= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eabd80
list contains 3 elements:
  at 0x568635eabd80: data    3 next: 0x568635eabcc0
  at 0x568635eabcc0: data    4 next: 0x568635eabce0
  at 0x568635eabce0: data    5 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabba0
list contains 6 elements:
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    4 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eabba0
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabba0
list contains 6 elements:
  at 0x568635eabba0: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eab850
  at 0x568635eab850: data    4 next: 0x568635eaba10
  at 0x568635eaba10: data    6 next: 0x568635eab770
  at 0x568635eab770: data    7 next: 0x568635eabab0
  at 0x568635eabab0: data    8 next: 0

 returns true 


passed   operation ^=

Passed 54 of 54 tests


***************************** Test Name  ******************************

*                      operator&=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { 1-3, 5-8 } & { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eab8d0
  at 0x568635eab8d0: data    2 next: 0x568635eabba0
  at 0x568635eabba0: data    3 next: 0x568635eabce0
  at 0x568635eabce0: data    5 next: 0x568635eabcc0
  at 0x568635eabcc0: data    6 next: 0x568635eabd80
  at 0x568635eabd80: data    7 next: 0x568635eab670
  at 0x568635eab670: data    8 next: 0

 &= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 55 of 55 tests

    ************************ Test Phase *************************
    *     operator&=(MyOrderedSet) { empty } & { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 &= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eab670
list contains 7 elements:
  at 0x568635eab670: data    1 next: 0x568635eabd80
  at 0x568635eabd80: data    2 next: 0x568635eabcc0
  at 0x568635eabcc0: data    3 next: 0x568635eabce0
  at 0x568635eabce0: data    5 next: 0x568635eabba0
  at 0x568635eabba0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eab850
  at 0x568635eab850: data    8 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation &=

Passed 56 of 56 tests

    ************************ Test Phase *************************
    *      operator&=(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator &=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab8d0
list contains 7 elements:
  at 0x568635eab8d0: data    1 next: 0x568635eabba0
  at 0x568635eabba0: data    2 next: 0x568635eabce0
  at 0x568635eabce0: data    3 next: 0x568635eabcc0
  at 0x568635eabcc0: data    5 next: 0x568635eabd80
  at 0x568635eabd80: data    6 next: 0x568635eab670
  at 0x568635eab670: data    7 next: 0x568635eabf90
  at 0x568635eabf90: data    8 next: 0

 &= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eab850
list contains 3 elements:
  at 0x568635eab850: data    3 next: 0x568635eabfb0
  at 0x568635eabfb0: data    4 next: 0x568635eabfd0
  at 0x568635eabfd0: data    5 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabce0
list contains 2 elements:
  at 0x568635eabce0: data    3 next: 0x568635eabcc0
  at 0x568635eabcc0: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

set location test not run, result is too small: 2

passed   operation &=

Passed 57 of 57 tests


***************************** Test Name  ******************************

*                      operator-=(MyOrderedSet)                       *

***************************** Test Name  ******************************

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { 1-3, 5-8 } - { empty }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabfb0
list contains 7 elements:
  at 0x568635eabfb0: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eabf90
  at 0x568635eabf90: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eabd80
  at 0x568635eabd80: data    6 next: 0x568635eabba0
  at 0x568635eabba0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

 -= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabfb0
list contains 7 elements:
  at 0x568635eabfb0: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eabf90
  at 0x568635eabf90: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eabd80
  at 0x568635eabd80: data    6 next: 0x568635eabba0
  at 0x568635eabba0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eabfb0
  at 0x568635eabfb0: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eabf90
  at 0x568635eabf90: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eabd80
  at 0x568635eabd80: data    6 next: 0x568635eabba0
  at 0x568635eabba0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eabfb0
list contains 7 elements:
  at 0x568635eabfb0: data    1 next: 0x568635eab850
  at 0x568635eab850: data    2 next: 0x568635eabf90
  at 0x568635eabf90: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eabd80
  at 0x568635eabd80: data    6 next: 0x568635eabba0
  at 0x568635eabba0: data    7 next: 0x568635eab8d0
  at 0x568635eab8d0: data    8 next: 0

 returns true 


passed   operation -=

Passed 58 of 58 tests

    ************************ Test Phase *************************
    *     operator-=(MyOrderedSet) { empty } - { 1-3, 5-8 }     *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 -= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eab8d0
list contains 7 elements:
  at 0x568635eab8d0: data    1 next: 0x568635eabba0
  at 0x568635eabba0: data    2 next: 0x568635eabd80
  at 0x568635eabd80: data    3 next: 0x568635eab670
  at 0x568635eab670: data    5 next: 0x568635eabf90
  at 0x568635eabf90: data    6 next: 0x568635eab850
  at 0x568635eab850: data    7 next: 0x568635eabfb0
  at 0x568635eabfb0: data    8 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

set location test not run, result is too small: 0

passed   operation -=

Passed 59 of 59 tests

    ************************ Test Phase *************************
    *      operator-=(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }      *
    ************************ Test Phase *************************

Test_Results* runSetAssignmentOperationTest(Test_Arguments<T>*) [with T = int] operator -=



set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 7 elements:
  at 0x568635eab850: data    1 next: 0x568635eabf90
  at 0x568635eabf90: data    2 next: 0x568635eab670
  at 0x568635eab670: data    3 next: 0x568635eabd80
  at 0x568635eabd80: data    5 next: 0x568635eabba0
  at 0x568635eabba0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eac260
  at 0x568635eac260: data    8 next: 0

 -= 

set contains a list at 0x7ffc324cd2c0: m_head points to 0x568635eabfb0
list contains 3 elements:
  at 0x568635eabfb0: data    3 next: 0x568635eac280
  at 0x568635eac280: data    4 next: 0x568635eac2a0
  at 0x568635eac2a0: data    5 next: 0

yields

set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 5 elements:
  at 0x568635eab850: data    1 next: 0x568635eabf90
  at 0x568635eabf90: data    2 next: 0x568635eabba0
  at 0x568635eabba0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eac260
  at 0x568635eac260: data    8 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7ffc324cd2b0 and contained 7 objects 
 list was at address 0x7ffc324cd2b0 m_head points to 0x568635eab850
  at 0x568635eab850: data    1 next: 0x568635eabf90
  at 0x568635eabf90: data    2 next: 0x568635eab670
  at 0x568635eab670: data    3 next: 0x568635eabd80
  at 0x568635eabd80: data    5 next: 0x568635eabba0
  at 0x568635eabba0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eac260
  at 0x568635eac260: data    8 next: 0

after_set:  
set contains a list at 0x7ffc324cd2b0: m_head points to 0x568635eab850
list contains 5 elements:
  at 0x568635eab850: data    1 next: 0x568635eabf90
  at 0x568635eabf90: data    2 next: 0x568635eabba0
  at 0x568635eabba0: data    6 next: 0x568635eab8d0
  at 0x568635eab8d0: data    7 next: 0x568635eac260
  at 0x568635eac260: data    8 next: 0

 returns true 


passed   operation -=

Passed 60 of 60 tests

testWrappedUnsignedSet(): Passed 60 of 60 tests

JoesSetTestBench.cpp done
