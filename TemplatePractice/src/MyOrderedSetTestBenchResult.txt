/home/joe/git/TemplatePractice/TemplatePractice/Debug/TemplatePractice

JoesSetTestBench.cpp ran on: Jul 24 2025 at 15:00:20



****************** Test Name  *******************

*              Default Constructor              *

****************** Test Name  *******************

passed default constructor produced empty set &0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0
list contains 0 elements:
  empty list

Passed 1 of 1 tests


****************** Test Name  *******************

*                 operator+=(T)                 *

****************** Test Name  *******************

 .. added 5 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329130780
list contains 1 elements:
  at 0x5ea329130780: data    5 next: 0

 .. added 3 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329130ac0
list contains 2 elements:
  at 0x5ea329130ac0: data    3 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0

 .. added 7 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329130ac0
list contains 3 elements:
  at 0x5ea329130ac0: data    3 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0

 .. added 4 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329130ac0
list contains 4 elements:
  at 0x5ea329130ac0: data    3 next: 0x5ea329130e50
  at 0x5ea329130e50: data    4 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0

 .. added 6 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329130ac0
list contains 5 elements:
  at 0x5ea329130ac0: data    3 next: 0x5ea329130e50
  at 0x5ea329130e50: data    4 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329131090
  at 0x5ea329131090: data    6 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0

 .. added 8 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329130ac0
list contains 6 elements:
  at 0x5ea329130ac0: data    3 next: 0x5ea329130e50
  at 0x5ea329130e50: data    4 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329131090
  at 0x5ea329131090: data    6 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0x5ea329131330
  at 0x5ea329131330: data    8 next: 0

 .. added 2 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329131640
list contains 7 elements:
  at 0x5ea329131640: data    2 next: 0x5ea329130ac0
  at 0x5ea329130ac0: data    3 next: 0x5ea329130e50
  at 0x5ea329130e50: data    4 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329131090
  at 0x5ea329131090: data    6 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0x5ea329131330
  at 0x5ea329131330: data    8 next: 0

 .. added 1 to set produces @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea3291319c0
list contains 8 elements:
  at 0x5ea3291319c0: data    1 next: 0x5ea329131640
  at 0x5ea329131640: data    2 next: 0x5ea329130ac0
  at 0x5ea329130ac0: data    3 next: 0x5ea329130e50
  at 0x5ea329130e50: data    4 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329131090
  at 0x5ea329131090: data    6 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0x5ea329131330
  at 0x5ea329131330: data    8 next: 0

Test adding stressing inputs
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true


Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1a20 and contained 0 objects 
 list was at address 0x7fff565b1a20 m_head points to 0

after_set:  
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea3291319c0
list contains 8 elements:
  at 0x5ea3291319c0: data    1 next: 0x5ea329131640
  at 0x5ea329131640: data    2 next: 0x5ea329130ac0
  at 0x5ea329130ac0: data    3 next: 0x5ea329130e50
  at 0x5ea329130e50: data    4 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0x5ea329131090
  at 0x5ea329131090: data    6 next: 0x5ea329130c70
  at 0x5ea329130c70: data    7 next: 0x5ea329131330
  at 0x5ea329131330: data    8 next: 0

 returns true b/c before_set was empty


Passed 2 of 2 tests


****************** Test Name  *******************

*                  buildSet()                   *

****************** Test Name  *******************

Test buildSet(stressing_inputs)
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true


Passed 3 of 3 tests


****************** Test Name  *******************

*                  set.clear()                  *

****************** Test Name  *******************

buildSet @0x7fff565b1a20
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329131330
list contains 8 elements:
  at 0x5ea329131330: data    1 next: 0x5ea3291319c0
  at 0x5ea3291319c0: data    2 next: 0x5ea329130780
  at 0x5ea329130780: data    3 next: 0x5ea329130c70
  at 0x5ea329130c70: data    4 next: 0x5ea329130e50
  at 0x5ea329130e50: data    5 next: 0x5ea329130ac0
  at 0x5ea329130ac0: data    6 next: 0x5ea329131090
  at 0x5ea329131090: data    7 next: 0x5ea329131640
  at 0x5ea329131640: data    8 next: 0
passed after set.clear()set is @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0
list contains 0 elements:
  empty list


Passed 4 of 4 tests


****************** Test Name  *******************

*                  set.reset()                  *

****************** Test Name  *******************

buildSet @0x7fff565b1a20
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329131640
list contains 8 elements:
  at 0x5ea329131640: data    1 next: 0x5ea329131330
  at 0x5ea329131330: data    2 next: 0x5ea329130ac0
  at 0x5ea329130ac0: data    3 next: 0x5ea329130c70
  at 0x5ea329130c70: data    4 next: 0x5ea329131090
  at 0x5ea329131090: data    5 next: 0x5ea329130780
  at 0x5ea329130780: data    6 next: 0x5ea329130e50
  at 0x5ea329130e50: data    7 next: 0x5ea3291319c0
  at 0x5ea3291319c0: data    8 next: 0
passed after set.reset(),
set  @0x7fff565b1a20: 
set contains a list at 0x7fff565b1a20: m_head points to 0
list contains 0 elements:
  empty list


Passed 5 of 5 tests


****************** Test Name  *******************

*               copy constructor                *

****************** Test Name  *******************

passed : 
set      @0x7fff565b1a20 :
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea3291319c0
list contains 8 elements:
  at 0x5ea3291319c0: data    1 next: 0x5ea329131640
  at 0x5ea329131640: data    2 next: 0x5ea329130780
  at 0x5ea329130780: data    3 next: 0x5ea329130c70
  at 0x5ea329130c70: data    4 next: 0x5ea329130e50
  at 0x5ea329130e50: data    5 next: 0x5ea329130ac0
  at 0x5ea329130ac0: data    6 next: 0x5ea329131090
  at 0x5ea329131090: data    7 next: 0x5ea329131330
  at 0x5ea329131330: data    8 next: 0

copy_set @0x7fff565b1a30 :
set contains a list at 0x7fff565b1a30: m_head points to 0x5ea329131ed0
list contains 8 elements:
  at 0x5ea329131ed0: data    1 next: 0x5ea329131ef0
  at 0x5ea329131ef0: data    2 next: 0x5ea329131f10
  at 0x5ea329131f10: data    3 next: 0x5ea329131f30
  at 0x5ea329131f30: data    4 next: 0x5ea329131f50
  at 0x5ea329131f50: data    5 next: 0x5ea329131f70
  at 0x5ea329131f70: data    6 next: 0x5ea329131f90
  at 0x5ea329131f90: data    7 next: 0x5ea329131fb0
  at 0x5ea329131fb0: data    8 next: 0


Passed 6 of 6 tests


****************** Test Name  *******************

*            operator=(MyOrderedSet)            *

****************** Test Name  *******************

set          @0x7fff565b1a20 :
set contains a list at 0x7fff565b1a20: m_head points to 0x5ea329131330
list contains 8 elements:
  at 0x5ea329131330: data    1 next: 0x5ea329131dd0
  at 0x5ea329131dd0: data    2 next: 0x5ea329131e70
  at 0x5ea329131e70: data    3 next: 0x5ea329131e30
  at 0x5ea329131e30: data    4 next: 0x5ea329131e90
  at 0x5ea329131e90: data    5 next: 0x5ea329131e10
  at 0x5ea329131e10: data    6 next: 0x5ea329131e50
  at 0x5ea329131e50: data    7 next: 0x5ea329131df0
  at 0x5ea329131df0: data    8 next: 0

assigned_set @0x7fff565b1a40 :
set contains a list at 0x7fff565b1a30: m_head points to 0x5ea329131ed0
list contains 8 elements:
  at 0x5ea329131ed0: data    1 next: 0x5ea329131ef0
  at 0x5ea329131ef0: data    2 next: 0x5ea329131f10
  at 0x5ea329131f10: data    3 next: 0x5ea329131f30
  at 0x5ea329131f30: data    4 next: 0x5ea329131f50
  at 0x5ea329131f50: data    5 next: 0x5ea329131f70
  at 0x5ea329131f70: data    6 next: 0x5ea329131f90
  at 0x5ea329131f90: data    7 next: 0x5ea329131fb0
  at 0x5ea329131fb0: data    8 next: 0

passed 

Passed 7 of 7 tests


****************** Test Name  *******************

*              operator+(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments*) operator +
buildSet @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0
list contains 0 elements:
  empty list
set + 5 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329130ac0
list contains 1 elements:
  at 0x5ea329130ac0: data    5 next: 0
set + 3 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329131640
list contains 2 elements:
  at 0x5ea329131640: data    3 next: 0x5ea329130780
  at 0x5ea329130780: data    5 next: 0
set + 7 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329131330
list contains 3 elements:
  at 0x5ea329131330: data    3 next: 0x5ea329131dd0
  at 0x5ea329131dd0: data    5 next: 0x5ea329131e70
  at 0x5ea329131e70: data    7 next: 0
set + 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329131e10
list contains 4 elements:
  at 0x5ea329131e10: data    3 next: 0x5ea329132190
  at 0x5ea329132190: data    4 next: 0x5ea329131e50
  at 0x5ea329131e50: data    5 next: 0x5ea329131eb0
  at 0x5ea329131eb0: data    7 next: 0
set + 6 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132230
list contains 5 elements:
  at 0x5ea329132230: data    3 next: 0x5ea329132250
  at 0x5ea329132250: data    4 next: 0x5ea329132270
  at 0x5ea329132270: data    5 next: 0x5ea3291322b0
  at 0x5ea3291322b0: data    6 next: 0x5ea329132290
  at 0x5ea329132290: data    7 next: 0
set + 8 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132350
list contains 6 elements:
  at 0x5ea329132350: data    3 next: 0x5ea329132370
  at 0x5ea329132370: data    4 next: 0x5ea329132390
  at 0x5ea329132390: data    5 next: 0x5ea3291323b0
  at 0x5ea3291323b0: data    6 next: 0x5ea3291323d0
  at 0x5ea3291323d0: data    7 next: 0x5ea3291323f0
  at 0x5ea3291323f0: data    8 next: 0
set + 2 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132520
list contains 7 elements:
  at 0x5ea329132520: data    2 next: 0x5ea329132460
  at 0x5ea329132460: data    3 next: 0x5ea329132480
  at 0x5ea329132480: data    4 next: 0x5ea3291324a0
  at 0x5ea3291324a0: data    5 next: 0x5ea3291324c0
  at 0x5ea3291324c0: data    6 next: 0x5ea3291324e0
  at 0x5ea3291324e0: data    7 next: 0x5ea329132500
  at 0x5ea329132500: data    8 next: 0
set + 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea3291326b0
list contains 8 elements:
  at 0x5ea3291326b0: data    1 next: 0x5ea3291325d0
  at 0x5ea3291325d0: data    2 next: 0x5ea3291325f0
  at 0x5ea3291325f0: data    3 next: 0x5ea329132610
  at 0x5ea329132610: data    4 next: 0x5ea329132630
  at 0x5ea329132630: data    5 next: 0x5ea329132650
  at 0x5ea329132650: data    6 next: 0x5ea329132670
  at 0x5ea329132670: data    7 next: 0x5ea329132690
  at 0x5ea329132690: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1910 and contained 7 objects 
 list was at address 0x7fff565b1910 m_head points to 0x5ea329132520
  at 0x5ea329132520: data    2 next: 0x5ea329132460
  at 0x5ea329132460: data    3 next: 0x5ea329132480
  at 0x5ea329132480: data    4 next: 0x5ea3291324a0
  at 0x5ea3291324a0: data    5 next: 0x5ea3291324c0
  at 0x5ea3291324c0: data    6 next: 0x5ea3291324e0
  at 0x5ea3291324e0: data    7 next: 0x5ea329132500
  at 0x5ea329132500: data    8 next: 0

after_set:  @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea3291326b0
list contains 8 elements:
  at 0x5ea3291326b0: data    1 next: 0x5ea3291325d0
  at 0x5ea3291325d0: data    2 next: 0x5ea3291325f0
  at 0x5ea3291325f0: data    3 next: 0x5ea329132610
  at 0x5ea329132610: data    4 next: 0x5ea329132630
  at 0x5ea329132630: data    5 next: 0x5ea329132650
  at 0x5ea329132650: data    6 next: 0x5ea329132670
  at 0x5ea329132670: data    7 next: 0x5ea329132690
  at 0x5ea329132690: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

****************** Test Name  *******************

*              operator+(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments*) operator +
buildSet @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0
list contains 0 elements:
  empty list
set + 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea3291324e0
list contains 1 elements:
  at 0x5ea3291324e0: data    1 next: 0
set + 2 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132480
list contains 2 elements:
  at 0x5ea329132480: data    1 next: 0x5ea329132460
  at 0x5ea329132460: data    2 next: 0
set + 3 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea3291325d0
list contains 3 elements:
  at 0x5ea3291325d0: data    1 next: 0x5ea3291325f0
  at 0x5ea3291325f0: data    2 next: 0x5ea329132610
  at 0x5ea329132610: data    3 next: 0
set + 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132670
list contains 4 elements:
  at 0x5ea329132670: data    1 next: 0x5ea329132690
  at 0x5ea329132690: data    2 next: 0x5ea3291326b0
  at 0x5ea3291326b0: data    3 next: 0x5ea3291327d0
  at 0x5ea3291327d0: data    4 next: 0
set + 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132870
list contains 4 elements:
  at 0x5ea329132870: data    1 next: 0x5ea329132890
  at 0x5ea329132890: data    2 next: 0x5ea3291328b0
  at 0x5ea3291328b0: data    3 next: 0x5ea3291328d0
  at 0x5ea3291328d0: data    4 next: 0
set + 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132950
list contains 4 elements:
  at 0x5ea329132950: data    1 next: 0x5ea329132970
  at 0x5ea329132970: data    2 next: 0x5ea329132990
  at 0x5ea329132990: data    3 next: 0x5ea3291329b0
  at 0x5ea3291329b0: data    4 next: 0
set + 3 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132a30
list contains 4 elements:
  at 0x5ea329132a30: data    1 next: 0x5ea329132a50
  at 0x5ea329132a50: data    2 next: 0x5ea329132a70
  at 0x5ea329132a70: data    3 next: 0x5ea329132a90
  at 0x5ea329132a90: data    4 next: 0
set + 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132b10
list contains 4 elements:
  at 0x5ea329132b10: data    1 next: 0x5ea329132b30
  at 0x5ea329132b30: data    2 next: 0x5ea329132b50
  at 0x5ea329132b50: data    3 next: 0x5ea329132b70
  at 0x5ea329132b70: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1910 and contained 4 objects 
 list was at address 0x7fff565b1910 m_head points to 0x5ea329132a30
  at 0x5ea329132a30: data    1 next: 0x5ea329132a50
  at 0x5ea329132a50: data    2 next: 0x5ea329132a70
  at 0x5ea329132a70: data    3 next: 0x5ea329132a90
  at 0x5ea329132a90: data    4 next: 0

after_set:  @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132b10
list contains 4 elements:
  at 0x5ea329132b10: data    1 next: 0x5ea329132b30
  at 0x5ea329132b30: data    2 next: 0x5ea329132b50
  at 0x5ea329132b50: data    3 next: 0x5ea329132b70
  at 0x5ea329132b70: data    4 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 9 of 9 tests


****************** Test Name  *******************

*              operator-(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments*) operator -
buildSet @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132b10
list contains 8 elements:
  at 0x5ea329132b10: data    1 next: 0x5ea329132a90
  at 0x5ea329132a90: data    2 next: 0x5ea329132a70
  at 0x5ea329132a70: data    3 next: 0x5ea329132a50
  at 0x5ea329132a50: data    4 next: 0x5ea329132a30
  at 0x5ea329132a30: data    5 next: 0x5ea329132500
  at 0x5ea329132500: data    6 next: 0x5ea329132b70
  at 0x5ea329132b70: data    7 next: 0x5ea329132bc0
  at 0x5ea329132bc0: data    8 next: 0
set - 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132d10
list contains 7 elements:
  at 0x5ea329132d10: data    1 next: 0x5ea329132d30
  at 0x5ea329132d30: data    2 next: 0x5ea329132d50
  at 0x5ea329132d50: data    3 next: 0x5ea329132d90
  at 0x5ea329132d90: data    5 next: 0x5ea329132db0
  at 0x5ea329132db0: data    6 next: 0x5ea329132dd0
  at 0x5ea329132dd0: data    7 next: 0x5ea329132df0
  at 0x5ea329132df0: data    8 next: 0
set - 5 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132bc0
list contains 6 elements:
  at 0x5ea329132bc0: data    1 next: 0x5ea329132b70
  at 0x5ea329132b70: data    2 next: 0x5ea329132e40
  at 0x5ea329132e40: data    3 next: 0x5ea329132e80
  at 0x5ea329132e80: data    6 next: 0x5ea329132ea0
  at 0x5ea329132ea0: data    7 next: 0x5ea329132ec0
  at 0x5ea329132ec0: data    8 next: 0
set - 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132df0
list contains 5 elements:
  at 0x5ea329132df0: data    2 next: 0x5ea329132f50
  at 0x5ea329132f50: data    3 next: 0x5ea329132f70
  at 0x5ea329132f70: data    6 next: 0x5ea329132f90
  at 0x5ea329132f90: data    7 next: 0x5ea329132fb0
  at 0x5ea329132fb0: data    8 next: 0
set - 8 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132bc0
list contains 4 elements:
  at 0x5ea329132bc0: data    2 next: 0x5ea329132e60
  at 0x5ea329132e60: data    3 next: 0x5ea329133070
  at 0x5ea329133070: data    6 next: 0x5ea329133090
  at 0x5ea329133090: data    7 next: 0
set - 2 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea3291330b0
list contains 3 elements:
  at 0x5ea3291330b0: data    3 next: 0x5ea329133130
  at 0x5ea329133130: data    6 next: 0x5ea329133150
  at 0x5ea329133150: data    7 next: 0
set - 7 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329132df0
list contains 2 elements:
  at 0x5ea329132df0: data    3 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -

Passed 10 of 10 tests


****************** Test Name  *******************

*             operator+=(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments*) operator +=
buildSet @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0
list contains 0 elements:
  empty list
set += 5 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea3291331a0
list contains 1 elements:
  at 0x5ea3291331a0: data    5 next: 0
set += 3 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133130
list contains 2 elements:
  at 0x5ea329133130: data    3 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0
set += 7 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133130
list contains 3 elements:
  at 0x5ea329133130: data    3 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0
set += 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133130
list contains 4 elements:
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0
set += 6 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133130
list contains 5 elements:
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133460
  at 0x5ea329133460: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0
set += 8 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133130
list contains 6 elements:
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133460
  at 0x5ea329133460: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329133580
  at 0x5ea329133580: data    8 next: 0
set += 2 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133690
list contains 7 elements:
  at 0x5ea329133690: data    2 next: 0x5ea329133130
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133460
  at 0x5ea329133460: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329133580
  at 0x5ea329133580: data    8 next: 0
set += 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133800
list contains 8 elements:
  at 0x5ea329133800: data    1 next: 0x5ea329133690
  at 0x5ea329133690: data    2 next: 0x5ea329133130
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133460
  at 0x5ea329133460: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329133580
  at 0x5ea329133580: data    8 next: 0
 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1910 and contained 7 objects 
 list was at address 0x7fff565b1910 m_head points to 0x5ea329133690
  at 0x5ea329133690: data    2 next: 0x5ea329133130
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133460
  at 0x5ea329133460: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329133580
  at 0x5ea329133580: data    8 next: 0

after_set:  
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133800
list contains 8 elements:
  at 0x5ea329133800: data    1 next: 0x5ea329133690
  at 0x5ea329133690: data    2 next: 0x5ea329133130
  at 0x5ea329133130: data    3 next: 0x5ea329133360
  at 0x5ea329133360: data    4 next: 0x5ea3291331a0
  at 0x5ea3291331a0: data    5 next: 0x5ea329133460
  at 0x5ea329133460: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329133580
  at 0x5ea329133580: data    8 next: 0

 returns true 

passed   operation +=

Passed 11 of 11 tests


****************** Test Name  *******************

*             operator+=(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments*) operator +=
buildSet @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0
list contains 0 elements:
  empty list
set += 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 1 elements:
  at 0x5ea329133460: data    1 next: 0
set += 2 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 2 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0
set += 3 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 3 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0
set += 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0
set += 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0
set += 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0
set += 3 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0
set += 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0
 expecting: {  1 2 3 4 } against received: {  1 2 3 4 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1910 and contained 4 objects 
 list was at address 0x7fff565b1910 m_head points to 0x5ea329133460
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0

after_set:  
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133580
  at 0x5ea329133580: data    3 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    4 next: 0

 returns true 

passed   operation +=

Passed 12 of 12 tests


****************** Test Name  *******************

*             operator-=(T object)              *

****************** Test Name  *******************

Test_Results* runObjectOperationTest(Test_Arguments*) operator -=
buildSet @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133580
list contains 8 elements:
  at 0x5ea329133580: data    1 next: 0x5ea329133130
  at 0x5ea329133130: data    2 next: 0x5ea329133460
  at 0x5ea329133460: data    3 next: 0x5ea329133d70
  at 0x5ea329133d70: data    4 next: 0x5ea329133d90
  at 0x5ea329133d90: data    5 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0x5ea329133dd0
  at 0x5ea329133dd0: data    7 next: 0x5ea329133df0
  at 0x5ea329133df0: data    8 next: 0
set -= 1 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133130
list contains 7 elements:
  at 0x5ea329133130: data    2 next: 0x5ea329133460
  at 0x5ea329133460: data    3 next: 0x5ea329133d70
  at 0x5ea329133d70: data    4 next: 0x5ea329133d90
  at 0x5ea329133d90: data    5 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0x5ea329133dd0
  at 0x5ea329133dd0: data    7 next: 0x5ea329133df0
  at 0x5ea329133df0: data    8 next: 0
set -= 2 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 6 elements:
  at 0x5ea329133460: data    3 next: 0x5ea329133d70
  at 0x5ea329133d70: data    4 next: 0x5ea329133d90
  at 0x5ea329133d90: data    5 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0x5ea329133dd0
  at 0x5ea329133dd0: data    7 next: 0x5ea329133df0
  at 0x5ea329133df0: data    8 next: 0
set -= 8 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 5 elements:
  at 0x5ea329133460: data    3 next: 0x5ea329133d70
  at 0x5ea329133d70: data    4 next: 0x5ea329133d90
  at 0x5ea329133d90: data    5 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0x5ea329133dd0
  at 0x5ea329133dd0: data    7 next: 0
set -= 5 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 4 elements:
  at 0x5ea329133460: data    3 next: 0x5ea329133d70
  at 0x5ea329133d70: data    4 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0x5ea329133dd0
  at 0x5ea329133dd0: data    7 next: 0
set -= 4 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 3 elements:
  at 0x5ea329133460: data    3 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0x5ea329133dd0
  at 0x5ea329133dd0: data    7 next: 0
set -= 7 results in set @0x7fff565b1910
set contains a list at 0x7fff565b1910: m_head points to 0x5ea329133460
list contains 2 elements:
  at 0x5ea329133460: data    3 next: 0x5ea329133db0
  at 0x5ea329133db0: data    6 next: 0
 expecting: {  3 6 } against received: {  3 6 }
  0       expected 3 == 3
  1       expected 6 == 6
 verifyResults returning true

passed   operation -=

Passed 13 of 13 tests


****************** Test Name  *******************

*                 .isMember(T)                  *

****************** Test Name  *******************


.isMember(1) returns true on {  1,  2,  3, 4 }
.isMember(2) returns true on {  1,  2,  3, 4 }
.isMember(3) returns true on {  1,  2,  3, 4 }
.isMember(4) returns true on {  1,  2,  3, 4 }
.isMember(5) returns false on {  1,  2,  3, 4 }
.isMember(6) returns false on {  1,  2,  3, 4 }
passed  test .isMember() passed

Passed 14 of 14 tests


****************** Test Name  *******************

*             relational operators              *

****************** Test Name  *******************

    ************* Test Phase **************
    *   { empty }.operator==({ empty })   *
    ************* Test Phase **************

      { <empty list> } == { <empty list> } returns true 

    ************* Test Phase **************
    *   { empty }.operator!=({ empty })   *
    ************* Test Phase **************

      { <empty list> } != { <empty list> } returns false
    ************* Test Phase **************
    *    { 1-4 }.operator==({ empty })    *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == { <empty list> } returns false
    ************* Test Phase **************
    *    { 1-4 }.operator!=({ empty })    *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != { <empty list> } returns true 
    ************* Test Phase **************
    *    { empty }.operator==({ 1-4 })    *
    ************* Test Phase **************

      { <empty list> } == {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *    { empty }.operator!=({ 1-4 })    *
    ************* Test Phase **************

      { <empty list> } != {  1,  2,  3, 4 } returns true 
    ************* Test Phase **************
    *     { 1-4 }.operator==({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 
    ************* Test Phase **************
    *     { 1-4 }.operator!=({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *     { 1-4 }.operator==({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == {  1,  2,  3, 4 } returns true 
    ************* Test Phase **************
    *     { 1-4 }.operator!=({ 1-4 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *     { 1-4 }.operator==({ 5-8 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } == {  5,  6,  7, 8 } returns false
    ************* Test Phase **************
    *     { 1-4 }.operator!=({ 5-8 })     *
    ************* Test Phase **************

      {  1,  2,  3, 4 } != {  5,  6,  7, 8 } returns true 
    ************* Test Phase **************
    *     { 5-8 }.operator==({ 1-4 })     *
    ************* Test Phase **************

      {  5,  6,  7, 8 } == {  1,  2,  3, 4 } returns false
    ************* Test Phase **************
    *     { 5-8 }.operator!=({ 1-4 })     *
    ************* Test Phase **************

      {  5,  6,  7, 8 } != {  1,  2,  3, 4 } returns true 
Passed 28 of 28 tests

passed : relational operators == !=

Passed 28 of 28 tests


****************** Test Name  *******************

*            operator+(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator+(MyOrderedSet) { 1-3, 5-8 } + { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator +


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea3291339a0
list contains 7 elements:
  at 0x5ea3291339a0: data    1 next: 0x5ea329133290
  at 0x5ea329133290: data    2 next: 0x5ea329134440
  at 0x5ea329134440: data    3 next: 0x5ea329134460
  at 0x5ea329134460: data    5 next: 0x5ea329134480
  at 0x5ea329134480: data    6 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    7 next: 0x5ea329134420
  at 0x5ea329134420: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea3291339a0
  at 0x5ea3291339a0: data    1 next: 0x5ea329133290
  at 0x5ea329133290: data    2 next: 0x5ea329134440
  at 0x5ea329134440: data    3 next: 0x5ea329134460
  at 0x5ea329134460: data    5 next: 0x5ea329134480
  at 0x5ea329134480: data    6 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    7 next: 0x5ea329134420
  at 0x5ea329134420: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134600
list contains 7 elements:
  at 0x5ea329134600: data    1 next: 0x5ea329134620
  at 0x5ea329134620: data    2 next: 0x5ea329134640
  at 0x5ea329134640: data    3 next: 0x5ea329134660
  at 0x5ea329134660: data    5 next: 0x5ea329134680
  at 0x5ea329134680: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 0 objects 
 list was at address 0x7fff565b18d0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134600
list contains 7 elements:
  at 0x5ea329134600: data    1 next: 0x5ea329134620
  at 0x5ea329134620: data    2 next: 0x5ea329134640
  at 0x5ea329134640: data    3 next: 0x5ea329134660
  at 0x5ea329134660: data    5 next: 0x5ea329134680
  at 0x5ea329134680: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation +

Passed 29 of 29 tests

    ************* Test Phase **************
    *operator+(MyOrderedSet) { empty } + { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator +


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0
list contains 0 elements:
  empty list

" + "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea329134590
list contains 7 elements:
  at 0x5ea329134590: data    1 next: 0x5ea329134570
  at 0x5ea329134570: data    2 next: 0x5ea329134550
  at 0x5ea329134550: data    3 next: 0x5ea329134530
  at 0x5ea329134530: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    7 next: 0x5ea329134400
  at 0x5ea329134400: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 0 objects 
 list was at address 0x7fff565b18c0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea3291346c0
list contains 7 elements:
  at 0x5ea3291346c0: data    1 next: 0x5ea329134600
  at 0x5ea329134600: data    2 next: 0x5ea329134620
  at 0x5ea329134620: data    3 next: 0x5ea329134640
  at 0x5ea329134640: data    5 next: 0x5ea329134660
  at 0x5ea329134660: data    6 next: 0x5ea329134680
  at 0x5ea329134680: data    7 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 7 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea329134590
  at 0x5ea329134590: data    1 next: 0x5ea329134570
  at 0x5ea329134570: data    2 next: 0x5ea329134550
  at 0x5ea329134550: data    3 next: 0x5ea329134530
  at 0x5ea329134530: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    7 next: 0x5ea329134400
  at 0x5ea329134400: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea3291346c0
list contains 7 elements:
  at 0x5ea3291346c0: data    1 next: 0x5ea329134600
  at 0x5ea329134600: data    2 next: 0x5ea329134620
  at 0x5ea329134620: data    3 next: 0x5ea329134640
  at 0x5ea329134640: data    5 next: 0x5ea329134660
  at 0x5ea329134660: data    6 next: 0x5ea329134680
  at 0x5ea329134680: data    7 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 30 of 30 tests

    ************* Test Phase **************
    *operator+(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator +


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea3291344a0
list contains 7 elements:
  at 0x5ea3291344a0: data    1 next: 0x5ea329134480
  at 0x5ea329134480: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea329134440
  at 0x5ea329134440: data    5 next: 0x5ea329133290
  at 0x5ea329133290: data    6 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    7 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    8 next: 0

" + "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea329134590
list contains 3 elements:
  at 0x5ea329134590: data    3 next: 0x5ea329134570
  at 0x5ea329134570: data    4 next: 0x5ea329134550
  at 0x5ea329134550: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea3291344a0
  at 0x5ea3291344a0: data    1 next: 0x5ea329134480
  at 0x5ea329134480: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea329134440
  at 0x5ea329134440: data    5 next: 0x5ea329133290
  at 0x5ea329133290: data    6 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    7 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134780
list contains 8 elements:
  at 0x5ea329134780: data    1 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    2 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    3 next: 0x5ea329134860
  at 0x5ea329134860: data    4 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    5 next: 0x5ea329134800
  at 0x5ea329134800: data    6 next: 0x5ea329134820
  at 0x5ea329134820: data    7 next: 0x5ea329134840
  at 0x5ea329134840: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 3 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea329134590
  at 0x5ea329134590: data    3 next: 0x5ea329134570
  at 0x5ea329134570: data    4 next: 0x5ea329134550
  at 0x5ea329134550: data    5 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134780
list contains 8 elements:
  at 0x5ea329134780: data    1 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    2 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    3 next: 0x5ea329134860
  at 0x5ea329134860: data    4 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    5 next: 0x5ea329134800
  at 0x5ea329134800: data    6 next: 0x5ea329134820
  at 0x5ea329134820: data    7 next: 0x5ea329134840
  at 0x5ea329134840: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation +

Passed 31 of 31 tests


****************** Test Name  *******************

*            operator|(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator|(MyOrderedSet) { 1-3, 5-8 } | { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator |


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea3291346c0
list contains 7 elements:
  at 0x5ea3291346c0: data    1 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    2 next: 0x5ea329134400
  at 0x5ea329134400: data    3 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea329134530
  at 0x5ea329134530: data    7 next: 0x5ea329134420
  at 0x5ea329134420: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea3291346c0
  at 0x5ea3291346c0: data    1 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    2 next: 0x5ea329134400
  at 0x5ea329134400: data    3 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea329134530
  at 0x5ea329134530: data    7 next: 0x5ea329134420
  at 0x5ea329134420: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134550
list contains 7 elements:
  at 0x5ea329134550: data    1 next: 0x5ea329134860
  at 0x5ea329134860: data    2 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    3 next: 0x5ea329134800
  at 0x5ea329134800: data    5 next: 0x5ea329134820
  at 0x5ea329134820: data    6 next: 0x5ea329134840
  at 0x5ea329134840: data    7 next: 0x5ea329134590
  at 0x5ea329134590: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 0 objects 
 list was at address 0x7fff565b18d0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134550
list contains 7 elements:
  at 0x5ea329134550: data    1 next: 0x5ea329134860
  at 0x5ea329134860: data    2 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    3 next: 0x5ea329134800
  at 0x5ea329134800: data    5 next: 0x5ea329134820
  at 0x5ea329134820: data    6 next: 0x5ea329134840
  at 0x5ea329134840: data    7 next: 0x5ea329134590
  at 0x5ea329134590: data    8 next: 0

 returns true b/c before_set was empty

passed   operation |

Passed 32 of 32 tests

    ************* Test Phase **************
    *operator|(MyOrderedSet) { empty } | { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator |


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0
list contains 0 elements:
  empty list

" | "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea329133290
list contains 7 elements:
  at 0x5ea329133290: data    1 next: 0x5ea329134440
  at 0x5ea329134440: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea329134480
  at 0x5ea329134480: data    5 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    6 next: 0x5ea329134570
  at 0x5ea329134570: data    7 next: 0x5ea329134600
  at 0x5ea329134600: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 0 objects 
 list was at address 0x7fff565b18c0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134590
list contains 7 elements:
  at 0x5ea329134590: data    1 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    2 next: 0x5ea329134550
  at 0x5ea329134550: data    3 next: 0x5ea329134860
  at 0x5ea329134860: data    5 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    6 next: 0x5ea329134800
  at 0x5ea329134800: data    7 next: 0x5ea329134820
  at 0x5ea329134820: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 7 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea329133290
  at 0x5ea329133290: data    1 next: 0x5ea329134440
  at 0x5ea329134440: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea329134480
  at 0x5ea329134480: data    5 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    6 next: 0x5ea329134570
  at 0x5ea329134570: data    7 next: 0x5ea329134600
  at 0x5ea329134600: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134590
list contains 7 elements:
  at 0x5ea329134590: data    1 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    2 next: 0x5ea329134550
  at 0x5ea329134550: data    3 next: 0x5ea329134860
  at 0x5ea329134860: data    5 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    6 next: 0x5ea329134800
  at 0x5ea329134800: data    7 next: 0x5ea329134820
  at 0x5ea329134820: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 33 of 33 tests

    ************* Test Phase **************
    *operator|(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator |


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134510
list contains 7 elements:
  at 0x5ea329134510: data    1 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    2 next: 0x5ea329134400
  at 0x5ea329134400: data    3 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    5 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    6 next: 0x5ea329134840
  at 0x5ea329134840: data    7 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    8 next: 0

" | "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea329133290
list contains 3 elements:
  at 0x5ea329133290: data    3 next: 0x5ea329134440
  at 0x5ea329134440: data    4 next: 0x5ea329134460
  at 0x5ea329134460: data    5 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea329134510
  at 0x5ea329134510: data    1 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    2 next: 0x5ea329134400
  at 0x5ea329134400: data    3 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    5 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    6 next: 0x5ea329134840
  at 0x5ea329134840: data    7 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134800
list contains 8 elements:
  at 0x5ea329134800: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134640
  at 0x5ea329134640: data    3 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    4 next: 0x5ea329134660
  at 0x5ea329134660: data    5 next: 0x5ea329134680
  at 0x5ea329134680: data    6 next: 0x5ea329134620
  at 0x5ea329134620: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 3 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea329133290
  at 0x5ea329133290: data    3 next: 0x5ea329134440
  at 0x5ea329134440: data    4 next: 0x5ea329134460
  at 0x5ea329134460: data    5 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134800
list contains 8 elements:
  at 0x5ea329134800: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134640
  at 0x5ea329134640: data    3 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    4 next: 0x5ea329134660
  at 0x5ea329134660: data    5 next: 0x5ea329134680
  at 0x5ea329134680: data    6 next: 0x5ea329134620
  at 0x5ea329134620: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation |

Passed 34 of 34 tests


****************** Test Name  *******************

*            operator^(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator^(MyOrderedSet) { 1-3, 5-8 } ^ { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator ^


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134420
list contains 7 elements:
  at 0x5ea329134420: data    1 next: 0x5ea329134820
  at 0x5ea329134820: data    2 next: 0x5ea329134600
  at 0x5ea329134600: data    3 next: 0x5ea329134570
  at 0x5ea329134570: data    5 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    6 next: 0x5ea329134480
  at 0x5ea329134480: data    7 next: 0x5ea329134530
  at 0x5ea329134530: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea329134420
  at 0x5ea329134420: data    1 next: 0x5ea329134820
  at 0x5ea329134820: data    2 next: 0x5ea329134600
  at 0x5ea329134600: data    3 next: 0x5ea329134570
  at 0x5ea329134570: data    5 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    6 next: 0x5ea329134480
  at 0x5ea329134480: data    7 next: 0x5ea329134530
  at 0x5ea329134530: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134460
list contains 7 elements:
  at 0x5ea329134460: data    1 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    2 next: 0x5ea329134660
  at 0x5ea329134660: data    3 next: 0x5ea329134680
  at 0x5ea329134680: data    5 next: 0x5ea329134620
  at 0x5ea329134620: data    6 next: 0x5ea329134780
  at 0x5ea329134780: data    7 next: 0x5ea329133290
  at 0x5ea329133290: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 0 objects 
 list was at address 0x7fff565b18d0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134460
list contains 7 elements:
  at 0x5ea329134460: data    1 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    2 next: 0x5ea329134660
  at 0x5ea329134660: data    3 next: 0x5ea329134680
  at 0x5ea329134680: data    5 next: 0x5ea329134620
  at 0x5ea329134620: data    6 next: 0x5ea329134780
  at 0x5ea329134780: data    7 next: 0x5ea329133290
  at 0x5ea329133290: data    8 next: 0

 returns true b/c before_set was empty

passed   operation ^

Passed 35 of 35 tests

    ************* Test Phase **************
    *operator^(MyOrderedSet) { empty } ^ { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator ^


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0
list contains 0 elements:
  empty list

" ^ "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea3291346c0
list contains 7 elements:
  at 0x5ea3291346c0: data    1 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    2 next: 0x5ea329134400
  at 0x5ea329134400: data    3 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea329134440
  at 0x5ea329134440: data    7 next: 0x5ea329134590
  at 0x5ea329134590: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 0 objects 
 list was at address 0x7fff565b18c0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329133290
list contains 7 elements:
  at 0x5ea329133290: data    1 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    5 next: 0x5ea329134660
  at 0x5ea329134660: data    6 next: 0x5ea329134680
  at 0x5ea329134680: data    7 next: 0x5ea329134620
  at 0x5ea329134620: data    8 next: 0

 returns true b/c before_set was empty

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 7 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea3291346c0
  at 0x5ea3291346c0: data    1 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    2 next: 0x5ea329134400
  at 0x5ea329134400: data    3 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea329134440
  at 0x5ea329134440: data    7 next: 0x5ea329134590
  at 0x5ea329134590: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329133290
list contains 7 elements:
  at 0x5ea329133290: data    1 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    5 next: 0x5ea329134660
  at 0x5ea329134660: data    6 next: 0x5ea329134680
  at 0x5ea329134680: data    7 next: 0x5ea329134620
  at 0x5ea329134620: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 36 of 36 tests

    ************* Test Phase **************
    *operator^(MyOrderedSet) { 1-3, 5-8 } ^ { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator ^


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea329134600
  at 0x5ea329134600: data    2 next: 0x5ea329134820
  at 0x5ea329134820: data    3 next: 0x5ea329134420
  at 0x5ea329134420: data    5 next: 0x5ea329134780
  at 0x5ea329134780: data    6 next: 0x5ea329134840
  at 0x5ea329134840: data    7 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    8 next: 0

" ^ "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea3291346a0
list contains 3 elements:
  at 0x5ea3291346a0: data    3 next: 0x5ea329134400
  at 0x5ea329134400: data    4 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    5 next: 0

 expecting: {  1 2 4 6 7 8 } against received: {  1 2 4 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 4 == 4
  3       expected 6 == 6
  4       expected 7 == 7
  5       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea329134570
  at 0x5ea329134570: data    1 next: 0x5ea329134600
  at 0x5ea329134600: data    2 next: 0x5ea329134820
  at 0x5ea329134820: data    3 next: 0x5ea329134420
  at 0x5ea329134420: data    5 next: 0x5ea329134780
  at 0x5ea329134780: data    6 next: 0x5ea329134840
  at 0x5ea329134840: data    7 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134640
list contains 6 elements:
  at 0x5ea329134640: data    1 next: 0x5ea329134550
  at 0x5ea329134550: data    2 next: 0x5ea329134860
  at 0x5ea329134860: data    4 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    6 next: 0x5ea329134800
  at 0x5ea329134800: data    7 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 3 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea3291346a0
  at 0x5ea3291346a0: data    3 next: 0x5ea329134400
  at 0x5ea329134400: data    4 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    5 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134640
list contains 6 elements:
  at 0x5ea329134640: data    1 next: 0x5ea329134550
  at 0x5ea329134550: data    2 next: 0x5ea329134860
  at 0x5ea329134860: data    4 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    6 next: 0x5ea329134800
  at 0x5ea329134800: data    7 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

passed   operation ^

Passed 37 of 37 tests


****************** Test Name  *******************

*            operator&(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator&(MyOrderedSet) { 1-3, 5-8 } & { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator &


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134620
list contains 7 elements:
  at 0x5ea329134620: data    1 next: 0x5ea329134590
  at 0x5ea329134590: data    2 next: 0x5ea329134440
  at 0x5ea329134440: data    3 next: 0x5ea329134510
  at 0x5ea329134510: data    5 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    6 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    7 next: 0x5ea329134600
  at 0x5ea329134600: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 38 of 38 tests

    ************* Test Phase **************
    *operator&(MyOrderedSet) { empty } & { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator &


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0
list contains 0 elements:
  empty list

" & "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea3291346a0
list contains 7 elements:
  at 0x5ea3291346a0: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134800
  at 0x5ea329134800: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea329134860
  at 0x5ea329134860: data    6 next: 0x5ea329134530
  at 0x5ea329134530: data    7 next: 0x5ea329134590
  at 0x5ea329134590: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation &

Passed 39 of 39 tests

    ************* Test Phase **************
    *operator&(MyOrderedSet) { 1-3, 5-8 } & { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator &


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134780
list contains 7 elements:
  at 0x5ea329134780: data    1 next: 0x5ea329134840
  at 0x5ea329134840: data    2 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    3 next: 0x5ea329134480
  at 0x5ea329134480: data    5 next: 0x5ea329134570
  at 0x5ea329134570: data    6 next: 0x5ea329134400
  at 0x5ea329134400: data    7 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    8 next: 0

" & "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea329134800
list contains 3 elements:
  at 0x5ea329134800: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    4 next: 0x5ea329134860
  at 0x5ea329134860: data    5 next: 0

 expecting: {  3 5 } against received: {  3 5 }
  0       expected 3 == 3
  1       expected 5 == 5
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 2
passed   operation &

Passed 40 of 40 tests


****************** Test Name  *******************

*            operator-(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator-(MyOrderedSet) { 1-3, 5-8 } - { empty }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator -


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134530
list contains 7 elements:
  at 0x5ea329134530: data    1 next: 0x5ea329134640
  at 0x5ea329134640: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea329134680
  at 0x5ea329134680: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329134550
  at 0x5ea329134550: data    7 next: 0x5ea329134420
  at 0x5ea329134420: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0
list contains 0 elements:
  empty list

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea329134530
  at 0x5ea329134530: data    1 next: 0x5ea329134640
  at 0x5ea329134640: data    2 next: 0x5ea329134460
  at 0x5ea329134460: data    3 next: 0x5ea329134680
  at 0x5ea329134680: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329134550
  at 0x5ea329134550: data    7 next: 0x5ea329134420
  at 0x5ea329134420: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134780
list contains 7 elements:
  at 0x5ea329134780: data    1 next: 0x5ea329134620
  at 0x5ea329134620: data    2 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    3 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    5 next: 0x5ea329134660
  at 0x5ea329134660: data    6 next: 0x5ea329134800
  at 0x5ea329134800: data    7 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 0 objects 
 list was at address 0x7fff565b18d0 m_head points to 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329134780
list contains 7 elements:
  at 0x5ea329134780: data    1 next: 0x5ea329134620
  at 0x5ea329134620: data    2 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    3 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    5 next: 0x5ea329134660
  at 0x5ea329134660: data    6 next: 0x5ea329134800
  at 0x5ea329134800: data    7 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    8 next: 0

 returns true b/c before_set was empty

passed   operation -

Passed 41 of 41 tests

    ************* Test Phase **************
    *operator-(MyOrderedSet) { empty } - { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator -


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0
list contains 0 elements:
  empty list

" - "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea329134480
  at 0x5ea329134480: data    2 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    3 next: 0x5ea329134840
  at 0x5ea329134840: data    5 next: 0x5ea329134860
  at 0x5ea329134860: data    6 next: 0x5ea329134590
  at 0x5ea329134590: data    7 next: 0x5ea329134530
  at 0x5ea329134530: data    8 next: 0

 expecting: {  } against received: {  }
 verifyResults returning true

INFO - Element storage location test not run,
 set size: 0
passed   operation -

Passed 42 of 42 tests

    ************* Test Phase **************
    *operator-(MyOrderedSet) { 1-3, 5-8 } - { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetArithmeticOperationTest(Test_Arguments*) operator -


 operand_1: set contains a list at 0x7fff565b18c0: m_head points to 0x5ea329134620
list contains 7 elements:
  at 0x5ea329134620: data    1 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    2 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    3 next: 0x5ea329134660
  at 0x5ea329134660: data    5 next: 0x5ea329134800
  at 0x5ea329134800: data    6 next: 0x5ea329134400
  at 0x5ea329134400: data    7 next: 0x5ea329134480
  at 0x5ea329134480: data    8 next: 0

" - "

 operand_2: set contains a list at 0x7fff565b18d0: m_head points to 0x5ea3291346c0
list contains 3 elements:
  at 0x5ea3291346c0: data    3 next: 0x5ea329134840
  at 0x5ea329134840: data    4 next: 0x5ea329134860
  at 0x5ea329134860: data    5 next: 0

 expecting: {  1 2 6 7 8 } against received: {  1 2 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 6 == 6
  3       expected 7 == 7
  4       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18c0 and contained 7 objects 
 list was at address 0x7fff565b18c0 m_head points to 0x5ea329134620
  at 0x5ea329134620: data    1 next: 0x5ea3291344a0
  at 0x5ea3291344a0: data    2 next: 0x5ea3291347a0
  at 0x5ea3291347a0: data    3 next: 0x5ea329134660
  at 0x5ea329134660: data    5 next: 0x5ea329134800
  at 0x5ea329134800: data    6 next: 0x5ea329134400
  at 0x5ea329134400: data    7 next: 0x5ea329134480
  at 0x5ea329134480: data    8 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329133290
list contains 5 elements:
  at 0x5ea329133290: data    1 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    2 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    7 next: 0x5ea329134600
  at 0x5ea329134600: data    8 next: 0

 returns true b/c a value in before_set was found in after_set but at different node address

Verifying memory relationship: "setElementsAreNotStoredAtSameLocation"
before_set: 
set was at 0x7fff565b18d0 and contained 3 objects 
 list was at address 0x7fff565b18d0 m_head points to 0x5ea3291346c0
  at 0x5ea3291346c0: data    3 next: 0x5ea329134840
  at 0x5ea329134840: data    4 next: 0x5ea329134860
  at 0x5ea329134860: data    5 next: 0

after_set:  @0x7fff565b18e0
set contains a list at 0x7fff565b18e0: m_head points to 0x5ea329133290
list contains 5 elements:
  at 0x5ea329133290: data    1 next: 0x5ea3291344f0
  at 0x5ea3291344f0: data    2 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    7 next: 0x5ea329134600
  at 0x5ea329134600: data    8 next: 0

 returns true b/c there were no values that were common to each set

passed   operation -

Passed 43 of 43 tests


****************** Test Name  *******************

*           operator+=(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator+=(MyOrderedSet) { 1-3, 5-8 } + { empty }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments*) operator +=



set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 += 

set contains a list at 0x7fff565b1930: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1920 and contained 7 objects 
 list was at address 0x7fff565b1920 m_head points to 0x5ea329134570
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

after_set:  
set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 returns true 


passed   operation +=

Passed 44 of 44 tests

    ************* Test Phase **************
    *operator+=(MyOrderedSet) { empty } + { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments*) operator +=



set contains a list at 0x7fff565b1920: m_head points to 0
list contains 0 elements:
  empty list

 += 

set contains a list at 0x7fff565b1930: m_head points to 0x5ea3291346a0
list contains 7 elements:
  at 0x5ea3291346a0: data    1 next: 0x5ea329134440
  at 0x5ea329134440: data    2 next: 0x5ea329134590
  at 0x5ea329134590: data    3 next: 0x5ea329134530
  at 0x5ea329134530: data    5 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    6 next: 0x5ea329134570
  at 0x5ea329134570: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

yields

set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134510
list contains 7 elements:
  at 0x5ea329134510: data    1 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    2 next: 0x5ea329134600
  at 0x5ea329134600: data    3 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    5 next: 0x5ea329134840
  at 0x5ea329134840: data    6 next: 0x5ea329134860
  at 0x5ea329134860: data    7 next: 0x5ea329134620
  at 0x5ea329134620: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1920 and contained 0 objects 
 list was at address 0x7fff565b1920 m_head points to 0

after_set:  
set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134510
list contains 7 elements:
  at 0x5ea329134510: data    1 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    2 next: 0x5ea329134600
  at 0x5ea329134600: data    3 next: 0x5ea3291346c0
  at 0x5ea3291346c0: data    5 next: 0x5ea329134840
  at 0x5ea329134840: data    6 next: 0x5ea329134860
  at 0x5ea329134860: data    7 next: 0x5ea329134620
  at 0x5ea329134620: data    8 next: 0

 returns true b/c before_set was empty


passed   operation +=

Passed 45 of 45 tests

    ************* Test Phase **************
    *operator+=(MyOrderedSet) { 1-3, 5-8 } + { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments*) operator +=



set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 += 

set contains a list at 0x7fff565b1930: m_head points to 0x5ea329134510
list contains 3 elements:
  at 0x5ea329134510: data    3 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    4 next: 0x5ea329134600
  at 0x5ea329134600: data    5 next: 0

yields

set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 8 elements:
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134550
  at 0x5ea329134550: data    4 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1920 and contained 7 objects 
 list was at address 0x7fff565b1920 m_head points to 0x5ea329134570
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

after_set:  
set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 8 elements:
  at 0x5ea329134570: data    1 next: 0x5ea3291347c0
  at 0x5ea3291347c0: data    2 next: 0x5ea329134530
  at 0x5ea329134530: data    3 next: 0x5ea329134550
  at 0x5ea329134550: data    4 next: 0x5ea329134590
  at 0x5ea329134590: data    5 next: 0x5ea329134440
  at 0x5ea329134440: data    6 next: 0x5ea3291346a0
  at 0x5ea3291346a0: data    7 next: 0x5ea329134780
  at 0x5ea329134780: data    8 next: 0

 returns true 


passed   operation +=

Passed 46 of 46 tests


****************** Test Name  *******************

*           operator|=(MyOrderedSet)            *

****************** Test Name  *******************

    ************* Test Phase **************
    *operator|=(MyOrderedSet) { 1-3, 5-8 } | { empty }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments*) operator |=



set contains a list at 0x7fff565b1920: m_head points to 0x5ea3291347e0
list contains 7 elements:
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

 |= 

set contains a list at 0x7fff565b1930: m_head points to 0
list contains 0 elements:
  empty list

yields

set contains a list at 0x7fff565b1920: m_head points to 0x5ea3291347e0
list contains 7 elements:
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1920 and contained 7 objects 
 list was at address 0x7fff565b1920 m_head points to 0x5ea3291347e0
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

after_set:  
set contains a list at 0x7fff565b1920: m_head points to 0x5ea3291347e0
list contains 7 elements:
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

 returns true 


passed   operation |=

Passed 47 of 47 tests

    ************* Test Phase **************
    *operator|=(MyOrderedSet) { empty } | { 1-3, 5-8 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments*) operator |=



set contains a list at 0x7fff565b1920: m_head points to 0
list contains 0 elements:
  empty list

 |= 

set contains a list at 0x7fff565b1930: m_head points to 0x5ea329133290
list contains 7 elements:
  at 0x5ea329133290: data    1 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    2 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    3 next: 0x5ea329134420
  at 0x5ea329134420: data    5 next: 0x5ea329134510
  at 0x5ea329134510: data    6 next: 0x5ea3291347e0
  at 0x5ea3291347e0: data    7 next: 0x5ea329134600
  at 0x5ea329134600: data    8 next: 0

yields

set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea329134960
  at 0x5ea329134960: data    2 next: 0x5ea329134980
  at 0x5ea329134980: data    3 next: 0x5ea3291349a0
  at 0x5ea3291349a0: data    5 next: 0x5ea3291349c0
  at 0x5ea3291349c0: data    6 next: 0x5ea3291349e0
  at 0x5ea3291349e0: data    7 next: 0x5ea329134a00
  at 0x5ea329134a00: data    8 next: 0

 expecting: {  1 2 3 5 6 7 8 } against received: {  1 2 3 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 5 == 5
  4       expected 6 == 6
  5       expected 7 == 7
  6       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1920 and contained 0 objects 
 list was at address 0x7fff565b1920 m_head points to 0

after_set:  
set contains a list at 0x7fff565b1920: m_head points to 0x5ea329134570
list contains 7 elements:
  at 0x5ea329134570: data    1 next: 0x5ea329134960
  at 0x5ea329134960: data    2 next: 0x5ea329134980
  at 0x5ea329134980: data    3 next: 0x5ea3291349a0
  at 0x5ea3291349a0: data    5 next: 0x5ea3291349c0
  at 0x5ea3291349c0: data    6 next: 0x5ea3291349e0
  at 0x5ea3291349e0: data    7 next: 0x5ea329134a00
  at 0x5ea329134a00: data    8 next: 0

 returns true b/c before_set was empty


passed   operation |=

Passed 48 of 48 tests

    ************* Test Phase **************
    *operator|=(MyOrderedSet) { 1-3, 5-8 } | { 3-5 }*
    ************* Test Phase **************

Test_Results* runSetAssignmentOperationTest(Test_Arguments*) operator |=



set contains a list at 0x7fff565b1920: m_head points to 0x5ea3291347e0
list contains 7 elements:
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

 |= 

set contains a list at 0x7fff565b1930: m_head points to 0x5ea329134570
list contains 3 elements:
  at 0x5ea329134570: data    3 next: 0x5ea329134960
  at 0x5ea329134960: data    4 next: 0x5ea329134980
  at 0x5ea329134980: data    5 next: 0

yields

set contains a list at 0x7fff565b1920: m_head points to 0x5ea3291347e0
list contains 8 elements:
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea329134af0
  at 0x5ea329134af0: data    4 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

 expecting: {  1 2 3 4 5 6 7 8 } against received: {  1 2 3 4 5 6 7 8 }
  0       expected 1 == 1
  1       expected 2 == 2
  2       expected 3 == 3
  3       expected 4 == 4
  4       expected 5 == 5
  5       expected 6 == 6
  6       expected 7 == 7
  7       expected 8 == 8
 verifyResults returning true

Verifying memory relationship: "setElementsAreStoredAtSameLocation"
before_set: 
set was at 0x7fff565b1920 and contained 7 objects 
 list was at address 0x7fff565b1920 m_head points to 0x5ea3291347e0
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

after_set:  
set contains a list at 0x7fff565b1920: m_head points to 0x5ea3291347e0
list contains 8 elements:
  at 0x5ea3291347e0: data    1 next: 0x5ea329134510
  at 0x5ea329134510: data    2 next: 0x5ea329134420
  at 0x5ea329134420: data    3 next: 0x5ea329134af0
  at 0x5ea329134af0: data    4 next: 0x5ea3291345b0
  at 0x5ea3291345b0: data    5 next: 0x5ea3291339a0
  at 0x5ea3291339a0: data    6 next: 0x5ea329133290
  at 0x5ea329133290: data    7 next: 0x5ea329134640
  at 0x5ea329134640: data    8 next: 0

 returns true 


passed   operation |=

Passed 49 of 49 tests

Passed 49 of 49 tests

JoesSetTestBench.cpp done
